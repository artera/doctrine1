<?php

namespace Doctrine1\Connection\Mysql;

enum ErrorCode: int
{
    case ER_CANT_CREATE_FILE = 1004; // SQLSTATE: HY000; Message: Can't create file '%s' (errno: %d - %s)
    case ER_CANT_CREATE_TABLE = 1005; // SQLSTATE: HY000; Message: Can't create table '%s' (errno: %d - %s)
    case ER_CANT_CREATE_DB = 1006; // SQLSTATE: HY000; Message: Can't create database '%s' (errno: %d - %s)
    case ER_DB_CREATE_EXISTS = 1007; // SQLSTATE: HY000; Message: Can't create database '%s'; database exists
    case ER_DB_DROP_EXISTS = 1008; // SQLSTATE: HY000; Message: Can't drop database '%s'; database doesn't exist
    case ER_DB_DROP_RMDIR = 1010; // SQLSTATE: HY000; Message: Error dropping database (can't rmdir '%s', errno: %d - %s)
    case ER_CANT_FIND_SYSTEM_REC = 1012; // SQLSTATE: HY000; Message: Can't read record in system table
    case ER_CANT_GET_STAT = 1013; // SQLSTATE: HY000; Message: Can't get status of '%s' (errno: %d - %s)
    case ER_CANT_LOCK = 1015; // SQLSTATE: HY000; Message: Can't lock file (errno: %d - %s)
    case ER_CANT_OPEN_FILE = 1016; // SQLSTATE: HY000; Message: Can't open file: '%s' (errno: %d - %s)
    case ER_FILE_NOT_FOUND = 1017; // SQLSTATE: HY000; Message: Can't find file: '%s' (errno: %d - %s)
    case ER_CANT_READ_DIR = 1018; // SQLSTATE: HY000; Message: Can't read dir of '%s' (errno: %d - %s)
    case ER_CHECKREAD = 1020; // SQLSTATE: HY000; Message: Record has changed since last read in table '%s'
    case ER_DUP_KEY = 1022; // SQLSTATE: 23000; Message: Can't write; duplicate key in table '%s'
    case ER_ERROR_ON_READ = 1024; // SQLSTATE: HY000; Message: Error reading file '%s' (errno: %d - %s)
    case ER_ERROR_ON_RENAME = 1025; // SQLSTATE: HY000; Message: Error on rename of '%s' to '%s' (errno: %d - %s)
    case ER_ERROR_ON_WRITE = 1026; // SQLSTATE: HY000; Message: Error writing file '%s' (errno: %d - %s)
    case ER_FILE_USED = 1027; // SQLSTATE: HY000; Message: '%s' is locked against change
    case ER_GET_ERRNO = 1030; // SQLSTATE: HY000; Message: Got error %d - '%s' from storage engine
    case ER_ILLEGAL_HA = 1031; // SQLSTATE: HY000; Message: Table storage engine for '%s' doesn't have this option
    case ER_KEY_NOT_FOUND = 1032; // SQLSTATE: HY000; Message: Can't find record in '%s'
    case ER_NOT_FORM_FILE = 1033; // SQLSTATE: HY000; Message: Incorrect information in file: '%s'
    case ER_NOT_KEYFILE = 1034; // SQLSTATE: HY000; Message: Incorrect key file for table '%s'; try to repair it
    case ER_OLD_KEYFILE = 1035; // SQLSTATE: HY000; Message: Old key file for table '%s'; repair it!
    case ER_OPEN_AS_READONLY = 1036; // SQLSTATE: HY000; Message: Table '%s' is read only
    case ER_OUTOFMEMORY = 1037; // SQLSTATE: HY001; Message: Out of memory; restart server and try again (needed %d bytes)
    case ER_OUT_OF_SORTMEMORY = 1038; // SQLSTATE: HY001; Message: Out of sort memory, consider increasing server sort buffer size
    case ER_CON_COUNT_ERROR = 1040; // SQLSTATE: 08004; Message: Too many connections
    case ER_OUT_OF_RESOURCES = 1041; // SQLSTATE: HY000; Message: Out of memory; check if mysqld or some other process uses all available memory; if not, you may have to use 'ulimit' to allow mysqld to use more memory or you can add more swap space
    case ER_BAD_HOST_ERROR = 1042; // SQLSTATE: 08S01; Message: Can't get hostname for your address
    case ER_HANDSHAKE_ERROR = 1043; // SQLSTATE: 08S01; Message: Bad handshake
    case ER_DBACCESS_DENIED_ERROR = 1044; // SQLSTATE: 42000; Message: Access denied for user '%s'@'%s' to database '%s'
    case ER_ACCESS_DENIED_ERROR = 1045; // SQLSTATE: 28000; Message: Access denied for user '%s'@'%s' (using password: %s)
    case ER_NO_DB_ERROR = 1046; // SQLSTATE: 3D000; Message: No database selected
    case ER_UNKNOWN_COM_ERROR = 1047; // SQLSTATE: 08S01; Message: Unknown command
    case ER_BAD_NULL_ERROR = 1048; // SQLSTATE: 23000; Message: Column '%s' cannot be null
    case ER_BAD_DB_ERROR = 1049; // SQLSTATE: 42000; Message: Unknown database '%s'
    case ER_TABLE_EXISTS_ERROR = 1050; // SQLSTATE: 42S01; Message: Table '%s' already exists
    case ER_BAD_TABLE_ERROR = 1051; // SQLSTATE: 42S02; Message: Unknown table '%s'
    case ER_NON_UNIQ_ERROR = 1052; // SQLSTATE: 23000; Message: Column '%s' in %s is ambiguous
    case ER_SERVER_SHUTDOWN = 1053; // SQLSTATE: 08S01; Message: Server shutdown in progress
    case ER_BAD_FIELD_ERROR = 1054; // SQLSTATE: 42S22; Message: Unknown column '%s' in '%s'
    case ER_WRONG_FIELD_WITH_GROUP = 1055; // SQLSTATE: 42000; Message: '%s' isn't in GROUP BY
    case ER_WRONG_GROUP_FIELD = 1056; // SQLSTATE: 42000; Message: Can't group on '%s'
    case ER_WRONG_SUM_SELECT = 1057; // SQLSTATE: 42000; Message: Statement has sum functions and columns in same statement
    case ER_WRONG_VALUE_COUNT = 1058; // SQLSTATE: 21S01; Message: Column count doesn't match value count
    case ER_TOO_LONG_IDENT = 1059; // SQLSTATE: 42000; Message: Identifier name '%s' is too long
    case ER_DUP_FIELDNAME = 1060; // SQLSTATE: 42S21; Message: Duplicate column name '%s'
    case ER_DUP_KEYNAME = 1061; // SQLSTATE: 42000; Message: Duplicate key name '%s'
    case ER_DUP_ENTRY = 1062; // SQLSTATE: 23000; Message: Duplicate entry '%s' for key %d
    case ER_WRONG_FIELD_SPEC = 1063; // SQLSTATE: 42000; Message: Incorrect column specifier for column '%s'
    case ER_PARSE_ERROR = 1064; // SQLSTATE: 42000; Message: %s near '%s' at line %d
    case ER_EMPTY_QUERY = 1065; // SQLSTATE: 42000; Message: Query was empty
    case ER_NONUNIQ_TABLE = 1066; // SQLSTATE: 42000; Message: Not unique table/alias: '%s'
    case ER_INVALID_DEFAULT = 1067; // SQLSTATE: 42000; Message: Invalid default value for '%s'
    case ER_MULTIPLE_PRI_KEY = 1068; // SQLSTATE: 42000; Message: Multiple primary key defined
    case ER_TOO_MANY_KEYS = 1069; // SQLSTATE: 42000; Message: Too many keys specified; max %d keys allowed
    case ER_TOO_MANY_KEY_PARTS = 1070; // SQLSTATE: 42000; Message: Too many key parts specified; max %d parts allowed
    case ER_TOO_LONG_KEY = 1071; // SQLSTATE: 42000; Message: Specified key was too long; max key length is %d bytes
    case ER_KEY_COLUMN_DOES_NOT_EXITS = 1072; // SQLSTATE: 42000; Message: Key column '%s' doesn't exist in table
    case ER_BLOB_USED_AS_KEY = 1073; // SQLSTATE: 42000; Message: BLOB column '%s' can't be used in key specification with the used table type
    case ER_TOO_BIG_FIELDLENGTH = 1074; // SQLSTATE: 42000; Message: Column length too big for column '%s' (max = %lu); use BLOB or TEXT instead
    case ER_WRONG_AUTO_KEY = 1075; // SQLSTATE: 42000; Message: Incorrect table definition; there can be only one auto column and it must be defined as a key
    case ER_READY = 1076; // SQLSTATE: HY000; Message: %s: ready for connections. Version: '%s' socket: '%s' port: %d
    case ER_SHUTDOWN_COMPLETE = 1079; // SQLSTATE: HY000; Message: %s: Shutdown complete
    case ER_FORCING_CLOSE = 1080; // SQLSTATE: 08S01; Message: %s: Forcing close of thread %ld user: '%s'
    case ER_IPSOCK_ERROR = 1081; // SQLSTATE: 08S01; Message: Can't create IP socket
    case ER_NO_SUCH_INDEX = 1082; // SQLSTATE: 42S12; Message: Table '%s' has no index like the one used in CREATE INDEX; recreate the table
    case ER_WRONG_FIELD_TERMINATORS = 1083; // SQLSTATE: 42000; Message: Field separator argument is not what is expected; check the manual
    case ER_BLOBS_AND_NO_TERMINATED = 1084; // SQLSTATE: 42000; Message: You can't use fixed rowlength with BLOBs; please use 'fields terminated by'
    case ER_TEXTFILE_NOT_READABLE = 1085; // SQLSTATE: HY000; Message: The file '%s' must be in the database directory or be readable by all
    case ER_FILE_EXISTS_ERROR = 1086; // SQLSTATE: HY000; Message: File '%s' already exists
    case ER_LOAD_INFO = 1087; // SQLSTATE: HY000; Message: Records: %ld Deleted: %ld Skipped: %ld Warnings: %ld
    case ER_ALTER_INFO = 1088; // SQLSTATE: HY000; Message: Records: %ld Duplicates: %ld
    case ER_WRONG_SUB_KEY = 1089; // SQLSTATE: HY000; Message: Incorrect prefix key; the used key part isn't a string, the used length is longer than the key part, or the storage engine doesn't support unique prefix keys
    case ER_CANT_REMOVE_ALL_FIELDS = 1090; // SQLSTATE: 42000; Message: You can't delete all columns with ALTER TABLE; use DROP TABLE instead
    case ER_CANT_DROP_FIELD_OR_KEY = 1091; // SQLSTATE: 42000; Message: Can't DROP '%s'; check that column/key exists
    case ER_INSERT_INFO = 1092; // SQLSTATE: HY000; Message: Records: %ld Duplicates: %ld Warnings: %ld
    case ER_UPDATE_TABLE_USED = 1093; // SQLSTATE: HY000; Message: You can't specify target table '%s' for update in FROM clause
    case ER_NO_SUCH_THREAD = 1094; // SQLSTATE: HY000; Message: Unknown thread id: %lu
    case ER_KILL_DENIED_ERROR = 1095; // SQLSTATE: HY000; Message: You are not owner of thread %lu
    case ER_NO_TABLES_USED = 1096; // SQLSTATE: HY000; Message: No tables used
    case ER_TOO_BIG_SET = 1097; // SQLSTATE: HY000; Message: Too many strings for column %s and SET
    case ER_NO_UNIQUE_LOGFILE = 1098; // SQLSTATE: HY000; Message: Can't generate a unique log-filename %s.(1-999)
    case ER_TABLE_NOT_LOCKED_FOR_WRITE = 1099; // SQLSTATE: HY000; Message: Table '%s' was locked with a READ lock and can't be updated
    case ER_TABLE_NOT_LOCKED = 1100; // SQLSTATE: HY000; Message: Table '%s' was not locked with LOCK TABLES
    case ER_BLOB_CANT_HAVE_DEFAULT = 1101; // SQLSTATE: 42000; Message: BLOB, TEXT, GEOMETRY or JSON column '%s' can't have a default value
    case ER_WRONG_DB_NAME = 1102; // SQLSTATE: 42000; Message: Incorrect database name '%s'
    case ER_WRONG_TABLE_NAME = 1103; // SQLSTATE: 42000; Message: Incorrect table name '%s'
    case ER_TOO_BIG_SELECT = 1104; // SQLSTATE: 42000; Message: The SELECT would examine more than MAX_JOIN_SIZE rows; check your WHERE and use SET SQL_BIG_SELECTS=1 or SET MAX_JOIN_SIZE=# if the SELECT is okay
    case ER_UNKNOWN_ERROR = 1105; // SQLSTATE: HY000; Message: Unknown error
    case ER_UNKNOWN_PROCEDURE = 1106; // SQLSTATE: 42000; Message: Unknown procedure '%s'
    case ER_WRONG_PARAMCOUNT_TO_PROCEDURE = 1107; // SQLSTATE: 42000; Message: Incorrect parameter count to procedure '%s'
    case ER_WRONG_PARAMETERS_TO_PROCEDURE = 1108; // SQLSTATE: HY000; Message: Incorrect parameters to procedure '%s'
    case ER_UNKNOWN_TABLE = 1109; // SQLSTATE: 42S02; Message: Unknown table '%s' in %s
    case ER_FIELD_SPECIFIED_TWICE = 1110; // SQLSTATE: 42000; Message: Column '%s' specified twice
    case ER_INVALID_GROUP_FUNC_USE = 1111; // SQLSTATE: HY000; Message: Invalid use of group function
    case ER_UNSUPPORTED_EXTENSION = 1112; // SQLSTATE: 42000; Message: Table '%s' uses an extension that doesn't exist in this MySQL version
    case ER_TABLE_MUST_HAVE_COLUMNS = 1113; // SQLSTATE: 42000; Message: A table must have at least 1 column
    case ER_RECORD_FILE_FULL = 1114; // SQLSTATE: HY000; Message: The table '%s' is full
    case ER_UNKNOWN_CHARACTER_SET = 1115; // SQLSTATE: 42000; Message: Unknown character set: '%s'
    case ER_TOO_MANY_TABLES = 1116; // SQLSTATE: HY000; Message: Too many tables; MySQL can only use %d tables in a join
    case ER_TOO_MANY_FIELDS = 1117; // SQLSTATE: HY000; Message: Too many columns
    case ER_TOO_BIG_ROWSIZE = 1118; // SQLSTATE: 42000; Message: Row size too large. The maximum row size for the used table type, not counting BLOBs, is %ld. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
    case ER_STACK_OVERRUN = 1119; // SQLSTATE: HY000; Message: Thread stack overrun: Used: %ld of a %ld stack. Use 'mysqld --thread_stack=#' to specify a bigger stack if needed
    case ER_WRONG_OUTER_JOIN_UNUSED = 1120; // SQLSTATE: 42000; Message: Cross dependency found in OUTER JOIN; examine your ON conditions
    case ER_NULL_COLUMN_IN_INDEX = 1121; // SQLSTATE: 42000; Message: Table handler doesn't support NULL in given index. Please change column '%s' to be NOT NULL or use another handler
    case ER_CANT_FIND_UDF = 1122; // SQLSTATE: HY000; Message: Can't load function '%s'
    case ER_CANT_INITIALIZE_UDF = 1123; // SQLSTATE: HY000; Message: Can't initialize function '%s'; %s
    case ER_UDF_NO_PATHS = 1124; // SQLSTATE: HY000; Message: No paths allowed for shared library
    case ER_UDF_EXISTS = 1125; // SQLSTATE: HY000; Message: Function '%s' already exists
    case ER_CANT_OPEN_LIBRARY = 1126; // SQLSTATE: HY000; Message: Can't open shared library '%s' (errno: %d %s)
    case ER_CANT_FIND_DL_ENTRY = 1127; // SQLSTATE: HY000; Message: Can't find symbol '%s' in library
    case ER_FUNCTION_NOT_DEFINED = 1128; // SQLSTATE: HY000; Message: Function '%s' is not defined
    case ER_HOST_IS_BLOCKED = 1129; // SQLSTATE: HY000; Message: Host '%s' is blocked because of many connection errors; unblock with 'mysqladmin flush-hosts'
    case ER_HOST_NOT_PRIVILEGED = 1130; // SQLSTATE: HY000; Message: Host '%s' is not allowed to connect to this MySQL server
    case ER_PASSWORD_ANONYMOUS_USER = 1131; // SQLSTATE: 42000; Message: You are using MySQL as an anonymous user and anonymous users are not allowed to change passwords
    case ER_PASSWORD_NOT_ALLOWED = 1132; // SQLSTATE: 42000; Message: You must have privileges to update tables in the mysql database to be able to change passwords for others
    case ER_PASSWORD_NO_MATCH = 1133; // SQLSTATE: 42000; Message: Can't find any matching row in the user table
    case ER_UPDATE_INFO = 1134; // SQLSTATE: HY000; Message: Rows matched: %ld Changed: %ld Warnings: %ld
    case ER_CANT_CREATE_THREAD = 1135; // SQLSTATE: HY000; Message: Can't create a new thread (errno %d); if you are not out of available memory, you can consult the manual for a possible OS-dependent bug
    case ER_WRONG_VALUE_COUNT_ON_ROW = 1136; // SQLSTATE: 21S01; Message: Column count doesn't match value count at row %ld
    case ER_CANT_REOPEN_TABLE = 1137; // SQLSTATE: HY000; Message: Can't reopen table: '%s'
    case ER_INVALID_USE_OF_NULL = 1138; // SQLSTATE: 22004; Message: Invalid use of NULL value
    case ER_REGEXP_ERROR = 1139; // SQLSTATE: 42000; Message: Got error '%s' from regexp
    case ER_MIX_OF_GROUP_FUNC_AND_FIELDS = 1140; // SQLSTATE: 42000; Message: Mixing of GROUP columns (MIN(),MAX(),COUNT(),...) with no GROUP columns is illegal if there is no GROUP BY clause
    case ER_NONEXISTING_GRANT = 1141; // SQLSTATE: 42000; Message: There is no such grant defined for user '%s' on host '%s'
    case ER_TABLEACCESS_DENIED_ERROR = 1142; // SQLSTATE: 42000; Message: %s command denied to user '%s'@'%s' for table '%s'
    case ER_COLUMNACCESS_DENIED_ERROR = 1143; // SQLSTATE: 42000; Message: %s command denied to user '%s'@'%s' for column '%s' in table '%s'
    case ER_ILLEGAL_GRANT_FOR_TABLE = 1144; // SQLSTATE: 42000; Message: Illegal GRANT/REVOKE command; please consult the manual to see which privileges can be used
    case ER_GRANT_WRONG_HOST_OR_USER = 1145; // SQLSTATE: 42000; Message: The host or user argument to GRANT is too long
    case ER_NO_SUCH_TABLE = 1146; // SQLSTATE: 42S02; Message: Table '%s.%s' doesn't exist
    case ER_NONEXISTING_TABLE_GRANT = 1147; // SQLSTATE: 42000; Message: There is no such grant defined for user '%s' on host '%s' on table '%s'
    case ER_NOT_ALLOWED_COMMAND = 1148; // SQLSTATE: 42000; Message: The used command is not allowed with this MySQL version
    case ER_SYNTAX_ERROR = 1149; // SQLSTATE: 42000; Message: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use
    case ER_ABORTING_CONNECTION = 1152; // SQLSTATE: 08S01; Message: Aborted connection %ld to db: '%s' user: '%s' (%s)
    case ER_NET_PACKET_TOO_LARGE = 1153; // SQLSTATE: 08S01; Message: Got a packet bigger than 'max_allowed_packet' bytes
    case ER_NET_READ_ERROR_FROM_PIPE = 1154; // SQLSTATE: 08S01; Message: Got a read error from the connection pipe
    case ER_NET_FCNTL_ERROR = 1155; // SQLSTATE: 08S01; Message: Got an error from fcntl()
    case ER_NET_PACKETS_OUT_OF_ORDER = 1156; // SQLSTATE: 08S01; Message: Got packets out of order
    case ER_NET_UNCOMPRESS_ERROR = 1157; // SQLSTATE: 08S01; Message: Couldn't uncompress communication packet
    case ER_NET_READ_ERROR = 1158; // SQLSTATE: 08S01; Message: Got an error reading communication packets
    case ER_NET_READ_INTERRUPTED = 1159; // SQLSTATE: 08S01; Message: Got timeout reading communication packets
    case ER_NET_ERROR_ON_WRITE = 1160; // SQLSTATE: 08S01; Message: Got an error writing communication packets
    case ER_NET_WRITE_INTERRUPTED = 1161; // SQLSTATE: 08S01; Message: Got timeout writing communication packets
    case ER_TOO_LONG_STRING = 1162; // SQLSTATE: 42000; Message: Result string is longer than 'max_allowed_packet' bytes
    case ER_TABLE_CANT_HANDLE_BLOB = 1163; // SQLSTATE: 42000; Message: The used table type doesn't support BLOB/TEXT columns
    case ER_TABLE_CANT_HANDLE_AUTO_INCREMENT = 1164; // SQLSTATE: 42000; Message: The used table type doesn't support AUTO_INCREMENT columns
    case ER_WRONG_COLUMN_NAME = 1166; // SQLSTATE: 42000; Message: Incorrect column name '%s'
    case ER_WRONG_KEY_COLUMN = 1167; // SQLSTATE: 42000; Message: The used storage engine can't index column '%s'
    case ER_WRONG_MRG_TABLE = 1168; // SQLSTATE: HY000; Message: Unable to open underlying table which is differently defined or of non-MyISAM type or doesn't exist
    case ER_DUP_UNIQUE = 1169; // SQLSTATE: 23000; Message: Can't write, because of unique constraint, to table '%s'
    case ER_BLOB_KEY_WITHOUT_LENGTH = 1170; // SQLSTATE: 42000; Message: BLOB/TEXT column '%s' used in key specification without a key length
    case ER_PRIMARY_CANT_HAVE_NULL = 1171; // SQLSTATE: 42000; Message: All parts of a PRIMARY KEY must be NOT NULL; if you need NULL in a key, use UNIQUE instead
    case ER_TOO_MANY_ROWS = 1172; // SQLSTATE: 42000; Message: Result consisted of more than one row
    case ER_REQUIRES_PRIMARY_KEY = 1173; // SQLSTATE: 42000; Message: This table type requires a primary key
    case ER_UPDATE_WITHOUT_KEY_IN_SAFE_MODE = 1175; // SQLSTATE: HY000; Message: You are using safe update mode and you tried to update a table without a WHERE that uses a KEY column. %s
    case ER_KEY_DOES_NOT_EXITS = 1176; // SQLSTATE: 42000; Message: Key '%s' doesn't exist in table '%s'
    case ER_CHECK_NO_SUCH_TABLE = 1177; // SQLSTATE: 42000; Message: Can't open table
    case ER_CHECK_NOT_IMPLEMENTED = 1178; // SQLSTATE: 42000; Message: The storage engine for the table doesn't support %s
    case ER_CANT_DO_THIS_DURING_AN_TRANSACTION = 1179; // SQLSTATE: 25000; Message: You are not allowed to execute this command in a transaction
    case ER_ERROR_DURING_COMMIT = 1180; // SQLSTATE: HY000; Message: Got error %d - '%s' during COMMIT
    case ER_ERROR_DURING_ROLLBACK = 1181; // SQLSTATE: HY000; Message: Got error %d - '%s' during ROLLBACK
    case ER_ERROR_DURING_FLUSH_LOGS = 1182; // SQLSTATE: HY000; Message: Got error %d during FLUSH_LOGS
    case ER_NEW_ABORTING_CONNECTION = 1184; // SQLSTATE: 08S01; Message: Aborted connection %u to db: '%s' user: '%s' host: '%s' (%s)
    case ER_SOURCE = 1188; // SQLSTATE: HY000; Message: Error from source: '%s'
    case ER_SOURCE_NET_READ = 1189; // SQLSTATE: 08S01; Message: Net error reading from source
    case ER_SOURCE_NET_WRITE = 1190; // SQLSTATE: 08S01; Message: Net error writing to source
    case ER_FT_MATCHING_KEY_NOT_FOUND = 1191; // SQLSTATE: HY000; Message: Can't find FULLTEXT index matching the column list
    case ER_LOCK_OR_ACTIVE_TRANSACTION = 1192; // SQLSTATE: HY000; Message: Can't execute the given command because you have active locked tables or an active transaction
    case ER_UNKNOWN_SYSTEM_VARIABLE = 1193; // SQLSTATE: HY000; Message: Unknown system variable '%s'
    case ER_CRASHED_ON_USAGE = 1194; // SQLSTATE: HY000; Message: Table '%s' is marked as crashed and should be repaired
    case ER_CRASHED_ON_REPAIR = 1195; // SQLSTATE: HY000; Message: Table '%s' is marked as crashed and last (automatic?) repair failed
    case ER_WARNING_NOT_COMPLETE_ROLLBACK = 1196; // SQLSTATE: HY000; Message: Some non-transactional changed tables couldn't be rolled back
    case ER_TRANS_CACHE_FULL = 1197; // SQLSTATE: HY000; Message: Multi-statement transaction required more than 'max_binlog_cache_size' bytes of storage; increase this mysqld variable and try again
    case ER_REPLICA_NOT_RUNNING = 1199; // SQLSTATE: HY000; Message: This operation requires a running replica; configure replica and do START REPLICA
    case ER_BAD_REPLICA = 1200; // SQLSTATE: HY000; Message: The server is not configured as replica; fix in config file or with CHANGE REPLICATION SOURCE TO
    case ER_CONNECTION_METADATA = 1201; // SQLSTATE: HY000; Message: Could not initialize connection metadata structure; more error messages can be found in the MySQL error log
    case ER_REPLICA_THREAD = 1202; // SQLSTATE: HY000; Message: Could not create replica thread; check system resources
    case ER_TOO_MANY_USER_CONNECTIONS = 1203; // SQLSTATE: 42000; Message: User %s already has more than 'max_user_connections' active connections
    case ER_SET_CONSTANTS_ONLY = 1204; // SQLSTATE: HY000; Message: You may only use constant expressions with SET
    case ER_LOCK_WAIT_TIMEOUT = 1205; // SQLSTATE: HY000; Message: Lock wait timeout exceeded; try restarting transaction
    case ER_LOCK_TABLE_FULL = 1206; // SQLSTATE: HY000; Message: The total number of locks exceeds the lock table size
    case ER_READ_ONLY_TRANSACTION = 1207; // SQLSTATE: 25000; Message: Update locks cannot be acquired during a READ UNCOMMITTED transaction
    case ER_WRONG_ARGUMENTS = 1210; // SQLSTATE: HY000; Message: Incorrect arguments to %s
    case ER_NO_PERMISSION_TO_CREATE_USER = 1211; // SQLSTATE: 42000; Message: '%s'@'%s' is not allowed to create new users
    case ER_LOCK_DEADLOCK = 1213; // SQLSTATE: 40001; Message: Deadlock found when trying to get lock; try restarting transaction
    case ER_TABLE_CANT_HANDLE_FT = 1214; // SQLSTATE: HY000; Message: The used table type doesn't support FULLTEXT indexes
    case ER_CANNOT_ADD_FOREIGN = 1215; // SQLSTATE: HY000; Message: Cannot add foreign key constraint
    case ER_NO_REFERENCED_ROW = 1216; // SQLSTATE: 23000; Message: Cannot add or update a child row: a foreign key constraint fails
    case ER_ROW_IS_REFERENCED = 1217; // SQLSTATE: 23000; Message: Cannot delete or update a parent row: a foreign key constraint fails
    case ER_CONNECT_TO_SOURCE = 1218; // SQLSTATE: 08S01; Message: Error connecting to source: %s
    case ER_ERROR_WHEN_EXECUTING_COMMAND = 1220; // SQLSTATE: HY000; Message: Error when executing command %s: %s
    case ER_WRONG_USAGE = 1221; // SQLSTATE: HY000; Message: Incorrect usage of %s and %s
    case ER_WRONG_NUMBER_OF_COLUMNS_IN_SELECT = 1222; // SQLSTATE: 21000; Message: The used SELECT statements have a different number of columns
    case ER_CANT_UPDATE_WITH_READLOCK = 1223; // SQLSTATE: HY000; Message: Can't execute the query because you have a conflicting read lock
    case ER_MIXING_NOT_ALLOWED = 1224; // SQLSTATE: HY000; Message: Mixing of transactional and non-transactional tables is disabled
    case ER_DUP_ARGUMENT = 1225; // SQLSTATE: HY000; Message: Option '%s' used twice in statement
    case ER_USER_LIMIT_REACHED = 1226; // SQLSTATE: 42000; Message: User '%s' has exceeded the '%s' resource (current value: %ld)
    case ER_SPECIFIC_ACCESS_DENIED_ERROR = 1227; // SQLSTATE: 42000; Message: Access denied; you need (at least one of) the %s privilege(s) for this operation
    case ER_LOCAL_VARIABLE = 1228; // SQLSTATE: HY000; Message: Variable '%s' is a SESSION variable and can't be used with SET GLOBAL
    case ER_GLOBAL_VARIABLE = 1229; // SQLSTATE: HY000; Message: Variable '%s' is a GLOBAL variable and should be set with SET GLOBAL
    case ER_NO_DEFAULT = 1230; // SQLSTATE: 42000; Message: Variable '%s' doesn't have a default value
    case ER_WRONG_VALUE_FOR_VAR = 1231; // SQLSTATE: 42000; Message: Variable '%s' can't be set to the value of '%s'
    case ER_WRONG_TYPE_FOR_VAR = 1232; // SQLSTATE: 42000; Message: Incorrect argument type to variable '%s'
    case ER_VAR_CANT_BE_READ = 1233; // SQLSTATE: HY000; Message: Variable '%s' can only be set, not read
    case ER_CANT_USE_OPTION_HERE = 1234; // SQLSTATE: 42000; Message: Incorrect usage/placement of '%s'
    case ER_NOT_SUPPORTED_YET = 1235; // SQLSTATE: 42000; Message: This version of MySQL doesn't yet support '%s'
    case ER_SOURCE_FATAL_ERROR_READING_BINLOG = 1236; // SQLSTATE: HY000; Message: Got fatal error %d from source when reading data from binary log: '%s'
    case ER_REPLICA_IGNORED_TABLE = 1237; // SQLSTATE: HY000; Message: Replica SQL thread ignored the query because of replicate-*-table rules
    case ER_INCORRECT_GLOBAL_LOCAL_VAR = 1238; // SQLSTATE: HY000; Message: Variable '%s' is a %s variable
    case ER_WRONG_FK_DEF = 1239; // SQLSTATE: 42000; Message: Incorrect foreign key definition for '%s': %s
    case ER_KEY_REF_DO_NOT_MATCH_TABLE_REF = 1240; // SQLSTATE: HY000; Message: Key reference and table reference don't match
    case ER_OPERAND_COLUMNS = 1241; // SQLSTATE: 21000; Message: Operand should contain %d column(s)
    case ER_SUBQUERY_NO_1_ROW = 1242; // SQLSTATE: 21000; Message: Subquery returns more than 1 row
    case ER_UNKNOWN_STMT_HANDLER = 1243; // SQLSTATE: HY000; Message: Unknown prepared statement handler (%.*s) given to %s
    case ER_CORRUPT_HELP_DB = 1244; // SQLSTATE: HY000; Message: Help database is corrupt or does not exist
    case ER_AUTO_CONVERT = 1246; // SQLSTATE: HY000; Message: Converting column '%s' from %s to %s
    case ER_ILLEGAL_REFERENCE = 1247; // SQLSTATE: 42S22; Message: Reference '%s' not supported (%s)
    case ER_DERIVED_MUST_HAVE_ALIAS = 1248; // SQLSTATE: 42000; Message: Every derived table must have its own alias
    case ER_SELECT_REDUCED = 1249; // SQLSTATE: 01000; Message: Select %u was reduced during optimization
    case ER_TABLENAME_NOT_ALLOWED_HERE = 1250; // SQLSTATE: 42000; Message: Table '%s' from one of the SELECTs cannot be used in %s
    case ER_NOT_SUPPORTED_AUTH_MODE = 1251; // SQLSTATE: 08004; Message: Client does not support authentication protocol requested by server; consider upgrading MySQL client
    case ER_SPATIAL_CANT_HAVE_NULL = 1252; // SQLSTATE: 42000; Message: All parts of a SPATIAL index must be NOT NULL
    case ER_COLLATION_CHARSET_MISMATCH = 1253; // SQLSTATE: 42000; Message: COLLATION '%s' is not valid for CHARACTER SET '%s'
    case ER_TOO_BIG_FOR_UNCOMPRESS = 1256; // SQLSTATE: HY000; Message: Uncompressed data size too large; the maximum size is %d (probably, length of uncompressed data was corrupted)
    case ER_ZLIB_Z_MEM_ERROR = 1257; // SQLSTATE: HY000; Message: ZLIB: Not enough memory
    case ER_ZLIB_Z_BUF_ERROR = 1258; // SQLSTATE: HY000; Message: ZLIB: Not enough room in the output buffer (probably, length of uncompressed data was corrupted)
    case ER_ZLIB_Z_DATA_ERROR = 1259; // SQLSTATE: HY000; Message: ZLIB: Input data corrupted
    case ER_CUT_VALUE_GROUP_CONCAT = 1260; // SQLSTATE: HY000; Message: Row %u was cut by GROUP_CONCAT()
    case ER_WARN_TOO_FEW_RECORDS = 1261; // SQLSTATE: 01000; Message: Row %ld doesn't contain data for all columns
    case ER_WARN_TOO_MANY_RECORDS = 1262; // SQLSTATE: 01000; Message: Row %ld was truncated; it contained more data than there were input columns
    case ER_WARN_NULL_TO_NOTNULL = 1263; // SQLSTATE: 22004; Message: Column set to default value; NULL supplied to NOT NULL column '%s' at row %ld
    case ER_WARN_DATA_OUT_OF_RANGE = 1264; // SQLSTATE: 22003; Message: Out of range value for column '%s' at row %ld
    case WARN_DATA_TRUNCATED = 1265; // SQLSTATE: 01000; Message: Data truncated for column '%s' at row %ld
    case ER_WARN_USING_OTHER_HANDLER = 1266; // SQLSTATE: HY000; Message: Using storage engine %s for table '%s'
    case ER_CANT_AGGREGATE_2COLLATIONS = 1267; // SQLSTATE: HY000; Message: Illegal mix of collations (%s,%s) and (%s,%s) for operation '%s'
    case ER_REVOKE_GRANTS = 1269; // SQLSTATE: HY000; Message: Can't revoke all privileges for one or more of the requested users
    case ER_CANT_AGGREGATE_3COLLATIONS = 1270; // SQLSTATE: HY000; Message: Illegal mix of collations (%s,%s), (%s,%s), (%s,%s) for operation '%s'
    case ER_CANT_AGGREGATE_NCOLLATIONS = 1271; // SQLSTATE: HY000; Message: Illegal mix of collations for operation '%s'
    case ER_VARIABLE_IS_NOT_STRUCT = 1272; // SQLSTATE: HY000; Message: Variable '%s' is not a variable component (can't be used as XXXX.variable_name)
    case ER_UNKNOWN_COLLATION = 1273; // SQLSTATE: HY000; Message: Unknown collation: '%s'
    case ER_REPLICA_IGNORED_SSL_PARAMS = 1274; // SQLSTATE: HY000; Message: SSL parameters in CHANGE REPLICATION SOURCE are ignored because this MySQL replica was compiled without SSL support; they can be used later if MySQL replica with SSL is started
    case ER_WARN_FIELD_RESOLVED = 1276; // SQLSTATE: HY000; Message: Field or reference '%s%s%s%s%s' of SELECT #%d was resolved in SELECT #%d
    case ER_BAD_REPLICA_UNTIL_COND = 1277; // SQLSTATE: HY000; Message: Incorrect parameter or combination of parameters for START REPLICA UNTIL
    case ER_MISSING_SKIP_REPLICA = 1278; // SQLSTATE: HY000; Message: It is recommended to use --skip-replica-start when doing step-by-step replication with START REPLICA UNTIL; otherwise, you will get problems if you get an unexpected replica's mysqld restart
    case ER_UNTIL_COND_IGNORED = 1279; // SQLSTATE: HY000; Message: SQL thread is not to be started so UNTIL options are ignored
    case ER_WRONG_NAME_FOR_INDEX = 1280; // SQLSTATE: 42000; Message: Incorrect index name '%s'
    case ER_WRONG_NAME_FOR_CATALOG = 1281; // SQLSTATE: 42000; Message: Incorrect catalog name '%s'
    case ER_BAD_FT_COLUMN = 1283; // SQLSTATE: HY000; Message: Column '%s' cannot be part of FULLTEXT index
    case ER_UNKNOWN_KEY_CACHE = 1284; // SQLSTATE: HY000; Message: Unknown key cache '%s'
    case ER_WARN_HOSTNAME_WONT_WORK = 1285; // SQLSTATE: HY000; Message: MySQL is started in --skip-name-resolve mode; you must restart it without this switch for this grant to work
    case ER_UNKNOWN_STORAGE_ENGINE = 1286; // SQLSTATE: 42000; Message: Unknown storage engine '%s'
    case ER_WARN_DEPRECATED_SYNTAX = 1287; // SQLSTATE: HY000; Message: '%s' is deprecated and will be removed in a future release. Please use %s instead
    case ER_NON_UPDATABLE_TABLE = 1288; // SQLSTATE: HY000; Message: The target table %s of the %s is not updatable
    case ER_FEATURE_DISABLED = 1289; // SQLSTATE: HY000; Message: The '%s' feature is disabled; you need MySQL built with '%s' to have it working
    case ER_OPTION_PREVENTS_STATEMENT = 1290; // SQLSTATE: HY000; Message: The MySQL server is running with the %s option so it cannot execute this statement
    case ER_DUPLICATED_VALUE_IN_TYPE = 1291; // SQLSTATE: HY000; Message: Column '%s' has duplicated value '%s' in %s
    case ER_TRUNCATED_WRONG_VALUE = 1292; // SQLSTATE: 22007; Message: Truncated incorrect %s value: '%s'
    case ER_INVALID_ON_UPDATE = 1294; // SQLSTATE: HY000; Message: Invalid ON UPDATE clause for '%s' column
    case ER_UNSUPPORTED_PS = 1295; // SQLSTATE: HY000; Message: This command is not supported in the prepared statement protocol yet
    case ER_GET_ERRMSG = 1296; // SQLSTATE: HY000; Message: Got error %d '%s' from %s
    case ER_GET_TEMPORARY_ERRMSG = 1297; // SQLSTATE: HY000; Message: Got temporary error %d '%s' from %s
    case ER_UNKNOWN_TIME_ZONE = 1298; // SQLSTATE: HY000; Message: Unknown or incorrect time zone: '%s'
    case ER_WARN_INVALID_TIMESTAMP = 1299; // SQLSTATE: HY000; Message: Invalid TIMESTAMP value in column '%s' at row %ld
    case ER_INVALID_CHARACTER_STRING = 1300; // SQLSTATE: HY000; Message: Invalid %s character string: '%s'
    case ER_WARN_ALLOWED_PACKET_OVERFLOWED = 1301; // SQLSTATE: HY000; Message: Result of %s() was larger than max_allowed_packet (%ld) - truncated
    case ER_CONFLICTING_DECLARATIONS = 1302; // SQLSTATE: HY000; Message: Conflicting declarations: '%s%s' and '%s%s'
    case ER_SP_NO_RECURSIVE_CREATE = 1303; // SQLSTATE: 2F003; Message: Can't create a %s from within another stored routine
    case ER_SP_ALREADY_EXISTS = 1304; // SQLSTATE: 42000; Message: %s %s already exists
    case ER_SP_DOES_NOT_EXIST = 1305; // SQLSTATE: 42000; Message: %s %s does not exist
    case ER_SP_DROP_FAILED = 1306; // SQLSTATE: HY000; Message: Failed to DROP %s %s
    case ER_SP_STORE_FAILED = 1307; // SQLSTATE: HY000; Message: Failed to CREATE %s %s
    case ER_SP_LILABEL_MISMATCH = 1308; // SQLSTATE: 42000; Message: %s with no matching label: %s
    case ER_SP_LABEL_REDEFINE = 1309; // SQLSTATE: 42000; Message: Redefining label %s
    case ER_SP_LABEL_MISMATCH = 1310; // SQLSTATE: 42000; Message: End-label %s without match
    case ER_SP_UNINIT_VAR = 1311; // SQLSTATE: 01000; Message: Referring to uninitialized variable %s
    case ER_SP_BADSELECT = 1312; // SQLSTATE: 0A000; Message: PROCEDURE %s can't return a result set in the given context
    case ER_SP_BADRETURN = 1313; // SQLSTATE: 42000; Message: RETURN is only allowed in a FUNCTION
    case ER_SP_BADSTATEMENT = 1314; // SQLSTATE: 0A000; Message: %s is not allowed in stored procedures
    case ER_UPDATE_LOG_DEPRECATED_IGNORED = 1315; // SQLSTATE: 42000; Message: The update log is deprecated and replaced by the binary log; SET SQL_LOG_UPDATE has been ignored.
    case ER_UPDATE_LOG_DEPRECATED_TRANSLATED = 1316; // SQLSTATE: 42000; Message: The update log is deprecated and replaced by the binary log; SET SQL_LOG_UPDATE has been translated to SET SQL_LOG_BIN.
    case ER_QUERY_INTERRUPTED = 1317; // SQLSTATE: 70100; Message: Query execution was interrupted
    case ER_SP_WRONG_NO_OF_ARGS = 1318; // SQLSTATE: 42000; Message: Incorrect number of arguments for %s %s; expected %u, got %u
    case ER_SP_COND_MISMATCH = 1319; // SQLSTATE: 42000; Message: Undefined CONDITION: %s
    case ER_SP_NORETURN = 1320; // SQLSTATE: 42000; Message: No RETURN found in FUNCTION %s
    case ER_SP_NORETURNEND = 1321; // SQLSTATE: 2F005; Message: FUNCTION %s ended without RETURN
    case ER_SP_BAD_CURSOR_QUERY = 1322; // SQLSTATE: 42000; Message: Cursor statement must be a SELECT
    case ER_SP_BAD_CURSOR_SELECT = 1323; // SQLSTATE: 42000; Message: Cursor SELECT must not have INTO
    case ER_SP_CURSOR_MISMATCH = 1324; // SQLSTATE: 42000; Message: Undefined CURSOR: %s
    case ER_SP_CURSOR_ALREADY_OPEN = 1325; // SQLSTATE: 24000; Message: Cursor is already open
    case ER_SP_CURSOR_NOT_OPEN = 1326; // SQLSTATE: 24000; Message: Cursor is not open
    case ER_SP_UNDECLARED_VAR = 1327; // SQLSTATE: 42000; Message: Undeclared variable: %s
    case ER_SP_WRONG_NO_OF_FETCH_ARGS = 1328; // SQLSTATE: HY000; Message: Incorrect number of FETCH variables
    case ER_SP_FETCH_NO_DATA = 1329; // SQLSTATE: 02000; Message: No data - zero rows fetched, selected, or processed
    case ER_SP_DUP_PARAM = 1330; // SQLSTATE: 42000; Message: Duplicate parameter: %s
    case ER_SP_DUP_VAR = 1331; // SQLSTATE: 42000; Message: Duplicate variable: %s
    case ER_SP_DUP_COND = 1332; // SQLSTATE: 42000; Message: Duplicate condition: %s
    case ER_SP_DUP_CURS = 1333; // SQLSTATE: 42000; Message: Duplicate cursor: %s
    case ER_SP_CANT_ALTER = 1334; // SQLSTATE: HY000; Message: Failed to ALTER %s %s
    case ER_SP_SUBSELECT_NYI = 1335; // SQLSTATE: 0A000; Message: Subquery value not supported
    case ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG = 1336; // SQLSTATE: 0A000; Message: %s is not allowed in stored function or trigger
    case ER_SP_VARCOND_AFTER_CURSHNDLR = 1337; // SQLSTATE: 42000; Message: Variable or condition declaration after cursor or handler declaration
    case ER_SP_CURSOR_AFTER_HANDLER = 1338; // SQLSTATE: 42000; Message: Cursor declaration after handler declaration
    case ER_SP_CASE_NOT_FOUND = 1339; // SQLSTATE: 20000; Message: Case not found for CASE statement
    case ER_FPARSER_TOO_BIG_FILE = 1340; // SQLSTATE: HY000; Message: Configuration file '%s' is too big
    case ER_FPARSER_BAD_HEADER = 1341; // SQLSTATE: HY000; Message: Malformed file type header in file '%s'
    case ER_FPARSER_EOF_IN_COMMENT = 1342; // SQLSTATE: HY000; Message: Unexpected end of file while parsing comment '%s'
    case ER_FPARSER_ERROR_IN_PARAMETER = 1343; // SQLSTATE: HY000; Message: Error while parsing parameter '%s' (line: '%s')
    case ER_FPARSER_EOF_IN_UNKNOWN_PARAMETER = 1344; // SQLSTATE: HY000; Message: Unexpected end of file while skipping unknown parameter '%s'
    case ER_VIEW_NO_EXPLAIN = 1345; // SQLSTATE: HY000; Message: EXPLAIN/SHOW can not be issued; lacking privileges for underlying table
    case ER_WRONG_OBJECT = 1347; // SQLSTATE: HY000; Message: '%s.%s' is not %s
    case ER_NONUPDATEABLE_COLUMN = 1348; // SQLSTATE: HY000; Message: Column '%s' is not updatable
    case ER_VIEW_SELECT_CLAUSE = 1350; // SQLSTATE: HY000; Message: View's SELECT contains a '%s' clause
    case ER_VIEW_SELECT_VARIABLE = 1351; // SQLSTATE: HY000; Message: View's SELECT contains a variable or parameter
    case ER_VIEW_SELECT_TMPTABLE = 1352; // SQLSTATE: HY000; Message: View's SELECT refers to a temporary table '%s'
    case ER_VIEW_WRONG_LIST = 1353; // SQLSTATE: HY000; Message: In definition of view, derived table or common table expression, SELECT list and column names list have different column counts
    case ER_WARN_VIEW_MERGE = 1354; // SQLSTATE: HY000; Message: View merge algorithm can't be used here for now (assumed undefined algorithm)
    case ER_WARN_VIEW_WITHOUT_KEY = 1355; // SQLSTATE: HY000; Message: View being updated does not have complete key of underlying table in it
    case ER_VIEW_INVALID = 1356; // SQLSTATE: HY000; Message: View '%s.%s' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them
    case ER_SP_NO_DROP_SP = 1357; // SQLSTATE: HY000; Message: Can't drop or alter a %s from within another stored routine
    case ER_TRG_ALREADY_EXISTS = 1359; // SQLSTATE: HY000; Message: Trigger already exists
    case ER_TRG_DOES_NOT_EXIST = 1360; // SQLSTATE: HY000; Message: Trigger does not exist
    case ER_TRG_ON_VIEW_OR_TEMP_TABLE = 1361; // SQLSTATE: HY000; Message: Trigger's '%s' is view or temporary table
    case ER_TRG_CANT_CHANGE_ROW = 1362; // SQLSTATE: HY000; Message: Updating of %s row is not allowed in %strigger
    case ER_TRG_NO_SUCH_ROW_IN_TRG = 1363; // SQLSTATE: HY000; Message: There is no %s row in %s trigger
    case ER_NO_DEFAULT_FOR_FIELD = 1364; // SQLSTATE: HY000; Message: Field '%s' doesn't have a default value
    case ER_DIVISION_BY_ZERO = 1365; // SQLSTATE: 22012; Message: Division by 0
    case ER_TRUNCATED_WRONG_VALUE_FOR_FIELD = 1366; // SQLSTATE: HY000; Message: Incorrect %s value: '%s' for column '%s' at row %ld
    case ER_ILLEGAL_VALUE_FOR_TYPE = 1367; // SQLSTATE: 22007; Message: Illegal %s '%s' value found during parsing
    case ER_VIEW_NONUPD_CHECK = 1368; // SQLSTATE: HY000; Message: CHECK OPTION on non-updatable view '%s.%s'
    case ER_VIEW_CHECK_FAILED = 1369; // SQLSTATE: HY000; Message: CHECK OPTION failed '%s.%s'
    case ER_PROCACCESS_DENIED_ERROR = 1370; // SQLSTATE: 42000; Message: %s command denied to user '%s'@'%s' for routine '%s'
    case ER_RELAY_LOG_FAIL = 1371; // SQLSTATE: HY000; Message: Failed purging old relay logs: %s
    case ER_UNKNOWN_TARGET_BINLOG = 1373; // SQLSTATE: HY000; Message: Target log not found in binlog index
    case ER_IO_ERR_LOG_INDEX_READ = 1374; // SQLSTATE: HY000; Message: I/O error reading log index file
    case ER_BINLOG_PURGE_PROHIBITED = 1375; // SQLSTATE: HY000; Message: Server configuration does not permit binlog purge
    case ER_FSEEK_FAIL = 1376; // SQLSTATE: HY000; Message: Failed on fseek()
    case ER_BINLOG_PURGE_FATAL_ERR = 1377; // SQLSTATE: HY000; Message: Fatal error during log purge
    case ER_LOG_IN_USE = 1378; // SQLSTATE: HY000; Message: A purgeable log is in use, will not purge
    case ER_LOG_PURGE_UNKNOWN_ERR = 1379; // SQLSTATE: HY000; Message: Unknown error during log purge
    case ER_RELAY_LOG_INIT = 1380; // SQLSTATE: HY000; Message: Failed initializing relay log position: %s
    case ER_NO_BINARY_LOGGING = 1381; // SQLSTATE: HY000; Message: You are not using binary logging
    case ER_RESERVED_SYNTAX = 1382; // SQLSTATE: HY000; Message: The '%s' syntax is reserved for purposes internal to the MySQL server
    case ER_PS_MANY_PARAM = 1390; // SQLSTATE: HY000; Message: Prepared statement contains too many placeholders
    case ER_KEY_PART_0 = 1391; // SQLSTATE: HY000; Message: Key part '%s' length cannot be 0
    case ER_VIEW_CHECKSUM = 1392; // SQLSTATE: HY000; Message: View text checksum failed
    case ER_VIEW_MULTIUPDATE = 1393; // SQLSTATE: HY000; Message: Can not modify more than one base table through a join view '%s.%s'
    case ER_VIEW_NO_INSERT_FIELD_LIST = 1394; // SQLSTATE: HY000; Message: Can not insert into join view '%s.%s' without fields list
    case ER_VIEW_DELETE_MERGE_VIEW = 1395; // SQLSTATE: HY000; Message: Can not delete from join view '%s.%s'
    case ER_CANNOT_USER = 1396; // SQLSTATE: HY000; Message: Operation %s failed for %s
    case ER_XAER_NOTA = 1397; // SQLSTATE: XAE04; Message: XAER_NOTA: Unknown XID
    case ER_XAER_INVAL = 1398; // SQLSTATE: XAE05; Message: XAER_INVAL: Invalid arguments (or unsupported command)
    case ER_XAER_RMFAIL = 1399; // SQLSTATE: XAE07; Message: XAER_RMFAIL: The command cannot be executed when global transaction is in the %s state
    case ER_XAER_OUTSIDE = 1400; // SQLSTATE: XAE09; Message: XAER_OUTSIDE: Some work is done outside global transaction
    case ER_XAER_RMERR = 1401; // SQLSTATE: XAE03; Message: XAER_RMERR: Fatal error occurred in the transaction branch - check your data for consistency
    case ER_XA_RBROLLBACK = 1402; // SQLSTATE: XA100; Message: XA_RBROLLBACK: Transaction branch was rolled back
    case ER_NONEXISTING_PROC_GRANT = 1403; // SQLSTATE: 42000; Message: There is no such grant defined for user '%s' on host '%s' on routine '%s'
    case ER_PROC_AUTO_GRANT_FAIL = 1404; // SQLSTATE: HY000; Message: Failed to grant EXECUTE and ALTER ROUTINE privileges
    case ER_PROC_AUTO_REVOKE_FAIL = 1405; // SQLSTATE: HY000; Message: Failed to revoke all privileges to dropped routine
    case ER_DATA_TOO_LONG = 1406; // SQLSTATE: 22001; Message: Data too long for column '%s' at row %ld
    case ER_SP_BAD_SQLSTATE = 1407; // SQLSTATE: 42000; Message: Bad SQLSTATE: '%s'
    case ER_STARTUP = 1408; // SQLSTATE: HY000; Message: %s: ready for connections. Version: '%s' socket: '%s' port: %d %s
    case ER_LOAD_FROM_FIXED_SIZE_ROWS_TO_VAR = 1409; // SQLSTATE: HY000; Message: Can't load value from file with fixed size rows to variable
    case ER_CANT_CREATE_USER_WITH_GRANT = 1410; // SQLSTATE: 42000; Message: You are not allowed to create a user with GRANT
    case ER_WRONG_VALUE_FOR_TYPE = 1411; // SQLSTATE: HY000; Message: Incorrect %s value: '%s' for function %s
    case ER_TABLE_DEF_CHANGED = 1412; // SQLSTATE: HY000; Message: Table definition has changed, please retry transaction
    case ER_SP_DUP_HANDLER = 1413; // SQLSTATE: 42000; Message: Duplicate handler declared in the same block
    case ER_SP_NOT_VAR_ARG = 1414; // SQLSTATE: 42000; Message: OUT or INOUT argument %d for routine %s is not a variable or NEW pseudo-variable in BEFORE trigger
    case ER_SP_NO_RETSET = 1415; // SQLSTATE: 0A000; Message: Not allowed to return a result set from a %s
    case ER_CANT_CREATE_GEOMETRY_OBJECT = 1416; // SQLSTATE: 22003; Message: Cannot get geometry object from data you send to the GEOMETRY field
    case ER_BINLOG_UNSAFE_ROUTINE = 1418; // SQLSTATE: HY000; Message: This function has none of DETERMINISTIC, NO SQL, or READS SQL DATA in its declaration and binary logging is enabled (you *might* want to use the less safe log_bin_trust_function_creators variable)
    case ER_BINLOG_CREATE_ROUTINE_NEED_SUPER = 1419; // SQLSTATE: HY000; Message: You do not have the SUPER privilege and binary logging is enabled (you *might* want to use the less safe log_bin_trust_function_creators variable)
    case ER_STMT_HAS_NO_OPEN_CURSOR = 1421; // SQLSTATE: HY000; Message: The statement (%lu) has no open cursor.
    case ER_COMMIT_NOT_ALLOWED_IN_SF_OR_TRG = 1422; // SQLSTATE: HY000; Message: Explicit or implicit commit is not allowed in stored function or trigger.
    case ER_NO_DEFAULT_FOR_VIEW_FIELD = 1423; // SQLSTATE: HY000; Message: Field of view '%s.%s' underlying table doesn't have a default value
    case ER_SP_NO_RECURSION = 1424; // SQLSTATE: HY000; Message: Recursive stored functions and triggers are not allowed.
    case ER_TOO_BIG_SCALE = 1425; // SQLSTATE: 42000; Message: Too big scale %d specified for column '%s'. Maximum is %lu.
    case ER_TOO_BIG_PRECISION = 1426; // SQLSTATE: 42000; Message: Too-big precision %d specified for '%s'. Maximum is %lu.
    case ER_M_BIGGER_THAN_D = 1427; // SQLSTATE: 42000; Message: For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column '%s').
    case ER_WRONG_LOCK_OF_SYSTEM_TABLE = 1428; // SQLSTATE: HY000; Message: You can't combine write-locking of system tables with other tables or lock types
    case ER_CONNECT_TO_FOREIGN_DATA_SOURCE = 1429; // SQLSTATE: HY000; Message: Unable to connect to foreign data source: %s
    case ER_QUERY_ON_FOREIGN_DATA_SOURCE = 1430; // SQLSTATE: HY000; Message: There was a problem processing the query on the foreign data source. Data source error: %s
    case ER_FOREIGN_DATA_SOURCE_DOESNT_EXIST = 1431; // SQLSTATE: HY000; Message: The foreign data source you are trying to reference does not exist. Data source error: %s
    case ER_FOREIGN_DATA_STRING_INVALID_CANT_CREATE = 1432; // SQLSTATE: HY000; Message: Can't create federated table. The data source connection string '%s' is not in the correct format
    case ER_FOREIGN_DATA_STRING_INVALID = 1433; // SQLSTATE: HY000; Message: The data source connection string '%s' is not in the correct format
    case ER_TRG_IN_WRONG_SCHEMA = 1435; // SQLSTATE: HY000; Message: Trigger in wrong schema
    case ER_STACK_OVERRUN_NEED_MORE = 1436; // SQLSTATE: HY000; Message: Thread stack overrun: %ld bytes used of a %ld byte stack, and %ld bytes needed. Use 'mysqld --thread_stack=#' to specify a bigger stack.
    case ER_TOO_LONG_BODY = 1437; // SQLSTATE: 42000; Message: Routine body for '%s' is too long
    case ER_WARN_CANT_DROP_DEFAULT_KEYCACHE = 1438; // SQLSTATE: HY000; Message: Cannot drop default keycache
    case ER_TOO_BIG_DISPLAYWIDTH = 1439; // SQLSTATE: 42000; Message: Display width out of range for column '%s' (max = %lu)
    case ER_XAER_DUPID = 1440; // SQLSTATE: XAE08; Message: XAER_DUPID: The XID already exists
    case ER_DATETIME_FUNCTION_OVERFLOW = 1441; // SQLSTATE: 22008; Message: Datetime function: %s field overflow
    case ER_CANT_UPDATE_USED_TABLE_IN_SF_OR_TRG = 1442; // SQLSTATE: HY000; Message: Can't update table '%s' in stored function/trigger because it is already used by statement which invoked this stored function/trigger.
    case ER_VIEW_PREVENT_UPDATE = 1443; // SQLSTATE: HY000; Message: The definition of table '%s' prevents operation %s on table '%s'.
    case ER_PS_NO_RECURSION = 1444; // SQLSTATE: HY000; Message: The prepared statement contains a stored routine call that refers to that same statement. It's not allowed to execute a prepared statement in such a recursive manner
    case ER_SP_CANT_SET_AUTOCOMMIT = 1445; // SQLSTATE: HY000; Message: Not allowed to set autocommit from a stored function or trigger
    case ER_VIEW_FRM_NO_USER = 1447; // SQLSTATE: HY000; Message: View '%s'.'%s' has no definer information (old table format). Current user is used as definer. Please recreate the view!
    case ER_VIEW_OTHER_USER = 1448; // SQLSTATE: HY000; Message: You need the SUPER privilege for creation view with '%s'@'%s' definer
    case ER_NO_SUCH_USER = 1449; // SQLSTATE: HY000; Message: The user specified as a definer ('%s'@'%s') does not exist
    case ER_FORBID_SCHEMA_CHANGE = 1450; // SQLSTATE: HY000; Message: Changing schema from '%s' to '%s' is not allowed.
    case ER_ROW_IS_REFERENCED_2 = 1451; // SQLSTATE: 23000; Message: Cannot delete or update a parent row: a foreign key constraint fails%s
    case ER_NO_REFERENCED_ROW_2 = 1452; // SQLSTATE: 23000; Message: Cannot add or update a child row: a foreign key constraint fails%s
    case ER_SP_BAD_VAR_SHADOW = 1453; // SQLSTATE: 42000; Message: Variable '%s' must be quoted with `...`, or renamed
    case ER_TRG_NO_DEFINER = 1454; // SQLSTATE: HY000; Message: No definer attribute for trigger '%s'.'%s'. It's disallowed to create trigger without definer.
    case ER_OLD_FILE_FORMAT = 1455; // SQLSTATE: HY000; Message: '%s' has an old format, you should re-create the '%s' object(s)
    case ER_SP_RECURSION_LIMIT = 1456; // SQLSTATE: HY000; Message: Recursive limit %d (as set by the max_sp_recursion_depth variable) was exceeded for routine %s
    case ER_SP_WRONG_NAME = 1458; // SQLSTATE: 42000; Message: Incorrect routine name '%s'
    case ER_TABLE_NEEDS_UPGRADE = 1459; // SQLSTATE: HY000; Message: Table upgrade required. Please do "REPAIR TABLE `%s`" or dump/reload to fix it!
    case ER_SP_NO_AGGREGATE = 1460; // SQLSTATE: 42000; Message: AGGREGATE is not supported for stored functions
    case ER_MAX_PREPARED_STMT_COUNT_REACHED = 1461; // SQLSTATE: 42000; Message: Can't create more than max_prepared_stmt_count statements (current value: %lu)
    case ER_VIEW_RECURSIVE = 1462; // SQLSTATE: HY000; Message: `%s`.`%s` contains view recursion
    case ER_NON_GROUPING_FIELD_USED = 1463; // SQLSTATE: 42000; Message: Non-grouping field '%s' is used in %s clause
    case ER_TABLE_CANT_HANDLE_SPKEYS = 1464; // SQLSTATE: HY000; Message: The used table type doesn't support SPATIAL indexes
    case ER_NO_TRIGGERS_ON_SYSTEM_SCHEMA = 1465; // SQLSTATE: HY000; Message: Triggers can not be created on system tables
    case ER_REMOVED_SPACES = 1466; // SQLSTATE: HY000; Message: Leading spaces are removed from name '%s'
    case ER_AUTOINC_READ_FAILED = 1467; // SQLSTATE: HY000; Message: Failed to read auto-increment value from storage engine
    case ER_USERNAME = 1468; // SQLSTATE: HY000; Message: user name
    case ER_HOSTNAME = 1469; // SQLSTATE: HY000; Message: host name
    case ER_WRONG_STRING_LENGTH = 1470; // SQLSTATE: HY000; Message: String '%s' is too long for %s (should be no longer than %d)
    case ER_NON_INSERTABLE_TABLE = 1471; // SQLSTATE: HY000; Message: The target table %s of the %s is not insertable-into
    case ER_ADMIN_WRONG_MRG_TABLE = 1472; // SQLSTATE: HY000; Message: Table '%s' is differently defined or of non-MyISAM type or doesn't exist
    case ER_TOO_HIGH_LEVEL_OF_NESTING_FOR_SELECT = 1473; // SQLSTATE: HY000; Message: Too high level of nesting for select
    case ER_NAME_BECOMES_EMPTY = 1474; // SQLSTATE: HY000; Message: Name '%s' has become ''
    case ER_AMBIGUOUS_FIELD_TERM = 1475; // SQLSTATE: HY000; Message: First character of the FIELDS TERMINATED string is ambiguous; please use non-optional and non-empty FIELDS ENCLOSED BY
    case ER_FOREIGN_SERVER_EXISTS = 1476; // SQLSTATE: HY000; Message: The foreign server, %s, you are trying to create already exists.
    case ER_FOREIGN_SERVER_DOESNT_EXIST = 1477; // SQLSTATE: HY000; Message: The foreign server name you are trying to reference does not exist. Data source error: %s
    case ER_ILLEGAL_HA_CREATE_OPTION = 1478; // SQLSTATE: HY000; Message: Table storage engine '%s' does not support the create option '%s'
    case ER_PARTITION_REQUIRES_VALUES_ERROR = 1479; // SQLSTATE: HY000; Message: Syntax error: %s PARTITIONING requires definition of VALUES %s for each partition
    case ER_PARTITION_WRONG_VALUES_ERROR = 1480; // SQLSTATE: HY000; Message: Only %s PARTITIONING can use VALUES %s in partition definition
    case ER_PARTITION_MAXVALUE_ERROR = 1481; // SQLSTATE: HY000; Message: MAXVALUE can only be used in last partition definition
    case ER_PARTITION_WRONG_NO_PART_ERROR = 1484; // SQLSTATE: HY000; Message: Wrong number of partitions defined, mismatch with previous setting
    case ER_PARTITION_WRONG_NO_SUBPART_ERROR = 1485; // SQLSTATE: HY000; Message: Wrong number of subpartitions defined, mismatch with previous setting
    case ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR = 1486; // SQLSTATE: HY000; Message: Constant, random or timezone-dependent expressions in (sub)partitioning function are not allowed
    case ER_FIELD_NOT_FOUND_PART_ERROR = 1488; // SQLSTATE: HY000; Message: Field in list of fields for partition function not found in table
    case ER_INCONSISTENT_PARTITION_INFO_ERROR = 1490; // SQLSTATE: HY000; Message: The partition info in the frm file is not consistent with what can be written into the frm file
    case ER_PARTITION_FUNC_NOT_ALLOWED_ERROR = 1491; // SQLSTATE: HY000; Message: The %s function returns the wrong type
    case ER_PARTITIONS_MUST_BE_DEFINED_ERROR = 1492; // SQLSTATE: HY000; Message: For %s partitions each partition must be defined
    case ER_RANGE_NOT_INCREASING_ERROR = 1493; // SQLSTATE: HY000; Message: VALUES LESS THAN value must be strictly increasing for each partition
    case ER_INCONSISTENT_TYPE_OF_FUNCTIONS_ERROR = 1494; // SQLSTATE: HY000; Message: VALUES value must be of same type as partition function
    case ER_MULTIPLE_DEF_CONST_IN_LIST_PART_ERROR = 1495; // SQLSTATE: HY000; Message: Multiple definition of same constant in list partitioning
    case ER_PARTITION_ENTRY_ERROR = 1496; // SQLSTATE: HY000; Message: Partitioning can not be used stand-alone in query
    case ER_MIX_HANDLER_ERROR = 1497; // SQLSTATE: HY000; Message: The mix of handlers in the partitions is not allowed in this version of MySQL
    case ER_PARTITION_NOT_DEFINED_ERROR = 1498; // SQLSTATE: HY000; Message: For the partitioned engine it is necessary to define all %s
    case ER_TOO_MANY_PARTITIONS_ERROR = 1499; // SQLSTATE: HY000; Message: Too many partitions (including subpartitions) were defined
    case ER_SUBPARTITION_ERROR = 1500; // SQLSTATE: HY000; Message: It is only possible to mix RANGE/LIST partitioning with HASH/KEY partitioning for subpartitioning
    case ER_CANT_CREATE_HANDLER_FILE = 1501; // SQLSTATE: HY000; Message: Failed to create specific handler file
    case ER_BLOB_FIELD_IN_PART_FUNC_ERROR = 1502; // SQLSTATE: HY000; Message: A BLOB field is not allowed in partition function
    case ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF = 1503; // SQLSTATE: HY000; Message: A %s must include all columns in the table's partitioning function (prefixed columns are not considered).
    case ER_NO_PARTS_ERROR = 1504; // SQLSTATE: HY000; Message: Number of %s = 0 is not an allowed value
    case ER_PARTITION_MGMT_ON_NONPARTITIONED = 1505; // SQLSTATE: HY000; Message: Partition management on a not partitioned table is not possible
    case ER_FOREIGN_KEY_ON_PARTITIONED = 1506; // SQLSTATE: HY000; Message: Foreign keys are not yet supported in conjunction with partitioning
    case ER_DROP_PARTITION_NON_EXISTENT = 1507; // SQLSTATE: HY000; Message: Error in list of partitions to %s
    case ER_DROP_LAST_PARTITION = 1508; // SQLSTATE: HY000; Message: Cannot remove all partitions, use DROP TABLE instead
    case ER_COALESCE_ONLY_ON_HASH_PARTITION = 1509; // SQLSTATE: HY000; Message: COALESCE PARTITION can only be used on HASH/KEY partitions
    case ER_REORG_HASH_ONLY_ON_SAME_NO = 1510; // SQLSTATE: HY000; Message: REORGANIZE PARTITION can only be used to reorganize partitions not to change their numbers
    case ER_REORG_NO_PARAM_ERROR = 1511; // SQLSTATE: HY000; Message: REORGANIZE PARTITION without parameters can only be used on auto-partitioned tables using HASH PARTITIONs
    case ER_ONLY_ON_RANGE_LIST_PARTITION = 1512; // SQLSTATE: HY000; Message: %s PARTITION can only be used on RANGE/LIST partitions
    case ER_ADD_PARTITION_SUBPART_ERROR = 1513; // SQLSTATE: HY000; Message: Trying to Add partition(s) with wrong number of subpartitions
    case ER_ADD_PARTITION_NO_NEW_PARTITION = 1514; // SQLSTATE: HY000; Message: At least one partition must be added
    case ER_COALESCE_PARTITION_NO_PARTITION = 1515; // SQLSTATE: HY000; Message: At least one partition must be coalesced
    case ER_REORG_PARTITION_NOT_EXIST = 1516; // SQLSTATE: HY000; Message: More partitions to reorganize than there are partitions
    case ER_SAME_NAME_PARTITION = 1517; // SQLSTATE: HY000; Message: Duplicate partition name %s
    case ER_NO_BINLOG_ERROR = 1518; // SQLSTATE: HY000; Message: It is not allowed to shut off binlog on this command
    case ER_CONSECUTIVE_REORG_PARTITIONS = 1519; // SQLSTATE: HY000; Message: When reorganizing a set of partitions they must be in consecutive order
    case ER_REORG_OUTSIDE_RANGE = 1520; // SQLSTATE: HY000; Message: Reorganize of range partitions cannot change total ranges except for last partition where it can extend the range
    case ER_PARTITION_FUNCTION_FAILURE = 1521; // SQLSTATE: HY000; Message: Partition function not supported in this version for this handler
    case ER_LIMITED_PART_RANGE = 1523; // SQLSTATE: HY000; Message: The %s handler only supports 32 bit integers in VALUES
    case ER_PLUGIN_IS_NOT_LOADED = 1524; // SQLSTATE: HY000; Message: Plugin '%s' is not loaded
    case ER_WRONG_VALUE = 1525; // SQLSTATE: HY000; Message: Incorrect %s value: '%s'
    case ER_NO_PARTITION_FOR_GIVEN_VALUE = 1526; // SQLSTATE: HY000; Message: Table has no partition for value %s
    case ER_FILEGROUP_OPTION_ONLY_ONCE = 1527; // SQLSTATE: HY000; Message: It is not allowed to specify %s more than once
    case ER_CREATE_FILEGROUP_FAILED = 1528; // SQLSTATE: HY000; Message: Failed to create %s
    case ER_DROP_FILEGROUP_FAILED = 1529; // SQLSTATE: HY000; Message: Failed to drop %s
    case ER_TABLESPACE_AUTO_EXTEND_ERROR = 1530; // SQLSTATE: HY000; Message: The handler doesn't support autoextend of tablespaces
    case ER_WRONG_SIZE_NUMBER = 1531; // SQLSTATE: HY000; Message: A size parameter was incorrectly specified, either number or on the form 10M
    case ER_SIZE_OVERFLOW_ERROR = 1532; // SQLSTATE: HY000; Message: The size number was correct but we don't allow the digit part to be more than 2 billion
    case ER_ALTER_FILEGROUP_FAILED = 1533; // SQLSTATE: HY000; Message: Failed to alter: %s
    case ER_BINLOG_ROW_LOGGING_FAILED = 1534; // SQLSTATE: HY000; Message: Writing one row to the row-based binary log failed
    case ER_EVENT_ALREADY_EXISTS = 1537; // SQLSTATE: HY000; Message: Event '%s' already exists
    case ER_EVENT_DOES_NOT_EXIST = 1539; // SQLSTATE: HY000; Message: Unknown event '%s'
    case ER_EVENT_INTERVAL_NOT_POSITIVE_OR_TOO_BIG = 1542; // SQLSTATE: HY000; Message: INTERVAL is either not positive or too big
    case ER_EVENT_ENDS_BEFORE_STARTS = 1543; // SQLSTATE: HY000; Message: ENDS is either invalid or before STARTS
    case ER_EVENT_EXEC_TIME_IN_THE_PAST = 1544; // SQLSTATE: HY000; Message: Event execution time is in the past. Event has been disabled
    case ER_EVENT_SAME_NAME = 1551; // SQLSTATE: HY000; Message: Same old and new event name
    case ER_DROP_INDEX_FK = 1553; // SQLSTATE: HY000; Message: Cannot drop index '%s': needed in a foreign key constraint
    case ER_WARN_DEPRECATED_SYNTAX_WITH_VER = 1554; // SQLSTATE: HY000; Message: The syntax '%s' is deprecated and will be removed in MySQL %s. Please use %s instead
    case ER_CANT_LOCK_LOG_TABLE = 1556; // SQLSTATE: HY000; Message: You can't use locks with log tables.
    case ER_FOREIGN_DUPLICATE_KEY_OLD_UNUSED = 1557; // SQLSTATE: 23000; Message: Upholding foreign key constraints for table '%s', entry '%s', key %d would lead to a duplicate entry
    case ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE = 1558; // SQLSTATE: HY000; Message: The column count of mysql.%s is wrong. Expected %d, found %d. Created with MySQL %d, now running %d. Please perform the MySQL upgrade procedure.
    case ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_FORMAT = 1560; // SQLSTATE: HY000; Message: Cannot change the binary logging format inside a stored function or trigger
    case ER_PARTITION_NO_TEMPORARY = 1562; // SQLSTATE: HY000; Message: Cannot create temporary table with partitions
    case ER_PARTITION_CONST_DOMAIN_ERROR = 1563; // SQLSTATE: HY000; Message: Partition constant is out of partition function domain
    case ER_PARTITION_FUNCTION_IS_NOT_ALLOWED = 1564; // SQLSTATE: HY000; Message: This partition function is not allowed
    case ER_NULL_IN_VALUES_LESS_THAN = 1566; // SQLSTATE: HY000; Message: Not allowed to use NULL value in VALUES LESS THAN
    case ER_WRONG_PARTITION_NAME = 1567; // SQLSTATE: HY000; Message: Incorrect partition name
    case ER_CANT_CHANGE_TX_CHARACTERISTICS = 1568; // SQLSTATE: 25001; Message: Transaction characteristics can't be changed while a transaction is in progress
    case ER_DUP_ENTRY_AUTOINCREMENT_CASE = 1569; // SQLSTATE: HY000; Message: ALTER TABLE causes auto_increment resequencing, resulting in duplicate entry '%s' for key '%s'
    case ER_EVENT_SET_VAR_ERROR = 1571; // SQLSTATE: HY000; Message: Error during starting/stopping of the scheduler. Error code %u
    case ER_PARTITION_MERGE_ERROR = 1572; // SQLSTATE: HY000; Message: Engine cannot be used in partitioned tables
    case ER_BASE64_DECODE_ERROR = 1575; // SQLSTATE: HY000; Message: Decoding of base64 string failed
    case ER_EVENT_RECURSION_FORBIDDEN = 1576; // SQLSTATE: HY000; Message: Recursion of EVENT DDL statements is forbidden when body is present
    case ER_ONLY_INTEGERS_ALLOWED = 1578; // SQLSTATE: HY000; Message: Only integers allowed as number here
    case ER_UNSUPORTED_LOG_ENGINE = 1579; // SQLSTATE: HY000; Message: This storage engine cannot be used for log tables
    case ER_BAD_LOG_STATEMENT = 1580; // SQLSTATE: HY000; Message: You cannot '%s' a log table if logging is enabled
    case ER_CANT_RENAME_LOG_TABLE = 1581; // SQLSTATE: HY000; Message: Cannot rename '%s'. When logging enabled, rename to/from log table must rename two tables: the log table to an archive table and another table back to '%s'
    case ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT = 1582; // SQLSTATE: 42000; Message: Incorrect parameter count in the call to native function '%s'
    case ER_WRONG_PARAMETERS_TO_NATIVE_FCT = 1583; // SQLSTATE: 42000; Message: Incorrect parameters in the call to native function '%s'
    case ER_WRONG_PARAMETERS_TO_STORED_FCT = 1584; // SQLSTATE: 42000; Message: Incorrect parameters in the call to stored function %s
    case ER_NATIVE_FCT_NAME_COLLISION = 1585; // SQLSTATE: HY000; Message: This function '%s' has the same name as a native function
    case ER_DUP_ENTRY_WITH_KEY_NAME = 1586; // SQLSTATE: 23000; Message: Duplicate entry '%s' for key '%s'
    case ER_BINLOG_PURGE_EMFILE = 1587; // SQLSTATE: HY000; Message: Too many files opened, please execute the command again
    case ER_EVENT_CANNOT_CREATE_IN_THE_PAST = 1588; // SQLSTATE: HY000; Message: Event execution time is in the past and ON COMPLETION NOT PRESERVE is set. The event was dropped immediately after creation.
    case ER_EVENT_CANNOT_ALTER_IN_THE_PAST = 1589; // SQLSTATE: HY000; Message: Event execution time is in the past and ON COMPLETION NOT PRESERVE is set. The event was not changed. Specify a time in the future.
    case ER_NO_PARTITION_FOR_GIVEN_VALUE_SILENT = 1591; // SQLSTATE: HY000; Message: Table has no partition for some existing values
    case ER_BINLOG_UNSAFE_STATEMENT = 1592; // SQLSTATE: HY000; Message: Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT. %s
    case ER_BINLOG_FATAL_ERROR = 1593; // SQLSTATE: HY000; Message: Fatal error: %s
    case ER_BINLOG_LOGGING_IMPOSSIBLE = 1598; // SQLSTATE: HY000; Message: Binary logging not possible. Message: %s
    case ER_VIEW_NO_CREATION_CTX = 1599; // SQLSTATE: HY000; Message: View `%s`.`%s` has no creation context
    case ER_VIEW_INVALID_CREATION_CTX = 1600; // SQLSTATE: HY000; Message: Creation context of view `%s`.`%s' is invalid
    case ER_TRG_CORRUPTED_FILE = 1602; // SQLSTATE: HY000; Message: Corrupted TRG file for table `%s`.`%s`
    case ER_TRG_NO_CREATION_CTX = 1603; // SQLSTATE: HY000; Message: Triggers for table `%s`.`%s` have no creation context
    case ER_TRG_INVALID_CREATION_CTX = 1604; // SQLSTATE: HY000; Message: Trigger creation context of table `%s`.`%s` is invalid
    case ER_EVENT_INVALID_CREATION_CTX = 1605; // SQLSTATE: HY000; Message: Creation context of event `%s`.`%s` is invalid
    case ER_TRG_CANT_OPEN_TABLE = 1606; // SQLSTATE: HY000; Message: Cannot open table for trigger `%s`.`%s`
    case ER_NO_FORMAT_DESCRIPTION_EVENT_BEFORE_BINLOG_STATEMENT = 1609; // SQLSTATE: HY000; Message: The BINLOG statement of type `%s` was not preceded by a format description BINLOG statement.
    case ER_REPLICA_CORRUPT_EVENT = 1610; // SQLSTATE: HY000; Message: Corrupted replication event was detected
    case ER_LOG_PURGE_NO_FILE = 1612; // SQLSTATE: HY000; Message: Being purged log %s was not found
    case ER_XA_RBTIMEOUT = 1613; // SQLSTATE: XA106; Message: XA_RBTIMEOUT: Transaction branch was rolled back: took too long
    case ER_XA_RBDEADLOCK = 1614; // SQLSTATE: XA102; Message: XA_RBDEADLOCK: Transaction branch was rolled back: deadlock was detected
    case ER_NEED_REPREPARE = 1615; // SQLSTATE: HY000; Message: Prepared statement needs to be re-prepared
    case WARN_NO_CONNECTION_METADATA = 1617; // SQLSTATE: HY000; Message: The connection metadata structure does not exist
    case WARN_OPTION_IGNORED = 1618; // SQLSTATE: HY000; Message: <%s> option ignored
    case ER_PLUGIN_DELETE_BUILTIN = 1619; // SQLSTATE: HY000; Message: Built-in plugins cannot be deleted
    case WARN_PLUGIN_BUSY = 1620; // SQLSTATE: HY000; Message: Plugin is busy and will be uninstalled on shutdown
    case ER_VARIABLE_IS_READONLY = 1621; // SQLSTATE: HY000; Message: %s variable '%s' is read-only. Use SET %s to assign the value
    case ER_WARN_ENGINE_TRANSACTION_ROLLBACK = 1622; // SQLSTATE: HY000; Message: Storage engine %s does not support rollback for this statement. Transaction rolled back and must be restarted
    case ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE = 1624; // SQLSTATE: HY000; Message: The requested value for the heartbeat period is either negative or exceeds the maximum allowed (%s seconds).
    case ER_NDB_REPLICATION_SCHEMA_ERROR = 1625; // SQLSTATE: HY000; Message: Bad schema for mysql.ndb_replication table. Message: %s
    case ER_CONFLICT_FN_PARSE_ERROR = 1626; // SQLSTATE: HY000; Message: Error in parsing conflict function. Message: %s
    case ER_EXCEPTIONS_WRITE_ERROR = 1627; // SQLSTATE: HY000; Message: Write to exceptions table failed. Message: %s
    case ER_TOO_LONG_TABLE_COMMENT = 1628; // SQLSTATE: HY000; Message: Comment for table '%s' is too long (max = %lu)
    case ER_TOO_LONG_FIELD_COMMENT = 1629; // SQLSTATE: HY000; Message: Comment for field '%s' is too long (max = %lu)
    case ER_FUNC_INEXISTENT_NAME_COLLISION = 1630; // SQLSTATE: 42000; Message: FUNCTION %s does not exist. Check the 'Function Name Parsing and Resolution' section in the Reference Manual
    case ER_DATABASE_NAME = 1631; // SQLSTATE: HY000; Message: Database
    case ER_TABLE_NAME = 1632; // SQLSTATE: HY000; Message: Table
    case ER_PARTITION_NAME = 1633; // SQLSTATE: HY000; Message: Partition
    case ER_SUBPARTITION_NAME = 1634; // SQLSTATE: HY000; Message: Subpartition
    case ER_TEMPORARY_NAME = 1635; // SQLSTATE: HY000; Message: Temporary
    case ER_RENAMED_NAME = 1636; // SQLSTATE: HY000; Message: Renamed
    case ER_TOO_MANY_CONCURRENT_TRXS = 1637; // SQLSTATE: HY000; Message: Too many active concurrent transactions
    case WARN_NON_ASCII_SEPARATOR_NOT_IMPLEMENTED = 1638; // SQLSTATE: HY000; Message: Non-ASCII separator arguments are not fully supported
    case ER_DEBUG_SYNC_TIMEOUT = 1639; // SQLSTATE: HY000; Message: debug sync point wait timed out
    case ER_DEBUG_SYNC_HIT_LIMIT = 1640; // SQLSTATE: HY000; Message: debug sync point hit limit reached
    case ER_DUP_SIGNAL_SET = 1641; // SQLSTATE: 42000; Message: Duplicate condition information item '%s'
    case ER_SIGNAL_WARN = 1642; // SQLSTATE: 01000; Message: Unhandled user-defined warning condition
    case ER_SIGNAL_NOT_FOUND = 1643; // SQLSTATE: 02000; Message: Unhandled user-defined not found condition
    case ER_SIGNAL_EXCEPTION = 1644; // SQLSTATE: HY000; Message: Unhandled user-defined exception condition
    case ER_RESIGNAL_WITHOUT_ACTIVE_HANDLER = 1645; // SQLSTATE: 0K000; Message: RESIGNAL when handler not active
    case ER_SIGNAL_BAD_CONDITION_TYPE = 1646; // SQLSTATE: HY000; Message: SIGNAL/RESIGNAL can only use a CONDITION defined with SQLSTATE
    case WARN_COND_ITEM_TRUNCATED = 1647; // SQLSTATE: HY000; Message: Data truncated for condition item '%s'
    case ER_COND_ITEM_TOO_LONG = 1648; // SQLSTATE: HY000; Message: Data too long for condition item '%s'
    case ER_UNKNOWN_LOCALE = 1649; // SQLSTATE: HY000; Message: Unknown locale: '%s'
    case ER_REPLICA_IGNORE_SERVER_IDS = 1650; // SQLSTATE: HY000; Message: The requested server id %d clashes with the replica startup option --replicate-same-server-id
    case ER_SAME_NAME_PARTITION_FIELD = 1652; // SQLSTATE: HY000; Message: Duplicate partition field name '%s'
    case ER_PARTITION_COLUMN_LIST_ERROR = 1653; // SQLSTATE: HY000; Message: Inconsistency in usage of column lists for partitioning
    case ER_WRONG_TYPE_COLUMN_VALUE_ERROR = 1654; // SQLSTATE: HY000; Message: Partition column values of incorrect type
    case ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR = 1655; // SQLSTATE: HY000; Message: Too many fields in '%s'
    case ER_MAXVALUE_IN_VALUES_IN = 1656; // SQLSTATE: HY000; Message: Cannot use MAXVALUE as value in VALUES IN
    case ER_TOO_MANY_VALUES_ERROR = 1657; // SQLSTATE: HY000; Message: Cannot have more than one value for this type of %s partitioning
    case ER_ROW_SINGLE_PARTITION_FIELD_ERROR = 1658; // SQLSTATE: HY000; Message: Row expressions in VALUES IN only allowed for multi-field column partitioning
    case ER_FIELD_TYPE_NOT_ALLOWED_AS_PARTITION_FIELD = 1659; // SQLSTATE: HY000; Message: Field '%s' is of a not allowed type for this type of partitioning
    case ER_PARTITION_FIELDS_TOO_LONG = 1660; // SQLSTATE: HY000; Message: The total length of the partitioning fields is too large
    case ER_BINLOG_ROW_ENGINE_AND_STMT_ENGINE = 1661; // SQLSTATE: HY000; Message: Cannot execute statement: impossible to write to binary log since both row-incapable engines and statement-incapable engines are involved.
    case ER_BINLOG_ROW_MODE_AND_STMT_ENGINE = 1662; // SQLSTATE: HY000; Message: Cannot execute statement: impossible to write to binary log since BINLOG_FORMAT = ROW and at least one table uses a storage engine limited to statement-based logging.
    case ER_BINLOG_UNSAFE_AND_STMT_ENGINE = 1663; // SQLSTATE: HY000; Message: Cannot execute statement: impossible to write to binary log since statement is unsafe, storage engine is limited to statement-based logging, and BINLOG_FORMAT = MIXED. %s
    case ER_BINLOG_ROW_INJECTION_AND_STMT_ENGINE = 1664; // SQLSTATE: HY000; Message: Cannot execute statement: impossible to write to binary log since statement is in row format and at least one table uses a storage engine limited to statement-based logging.
    case ER_BINLOG_STMT_MODE_AND_ROW_ENGINE = 1665; // SQLSTATE: HY000; Message: Cannot execute statement: impossible to write to binary log since BINLOG_FORMAT = STATEMENT and at least one table uses a storage engine limited to row-based logging.%s
    case ER_BINLOG_ROW_INJECTION_AND_STMT_MODE = 1666; // SQLSTATE: HY000; Message: Cannot execute statement: impossible to write to binary log since statement is in row format and BINLOG_FORMAT = STATEMENT.
    case ER_BINLOG_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE = 1667; // SQLSTATE: HY000; Message: Cannot execute statement: impossible to write to binary log since more than one engine is involved and at least one engine is self-logging.
    case ER_BINLOG_UNSAFE_LIMIT = 1668; // SQLSTATE: HY000; Message: The statement is unsafe because it uses a LIMIT clause. This is unsafe because the set of rows included cannot be predicted.
    case ER_BINLOG_UNSAFE_SYSTEM_TABLE = 1670; // SQLSTATE: HY000; Message: The statement is unsafe because it uses the general log, slow query log, or performance_schema table(s). This is unsafe because system tables may differ on replicas.
    case ER_BINLOG_UNSAFE_AUTOINC_COLUMNS = 1671; // SQLSTATE: HY000; Message: Statement is unsafe because it invokes a trigger or a stored function that inserts into an AUTO_INCREMENT column. Inserted values cannot be logged correctly.
    case ER_BINLOG_UNSAFE_UDF = 1672; // SQLSTATE: HY000; Message: Statement is unsafe because it uses a UDF which may not return the same value on the replica.
    case ER_BINLOG_UNSAFE_SYSTEM_VARIABLE = 1673; // SQLSTATE: HY000; Message: Statement is unsafe because it uses a system variable that may have a different value on the replica.
    case ER_BINLOG_UNSAFE_SYSTEM_FUNCTION = 1674; // SQLSTATE: HY000; Message: Statement is unsafe because it uses a system function that may return a different value on the replica.
    case ER_BINLOG_UNSAFE_NONTRANS_AFTER_TRANS = 1675; // SQLSTATE: HY000; Message: Statement is unsafe because it accesses a non-transactional table after accessing a transactional table within the same transaction.
    case ER_MESSAGE_AND_STATEMENT = 1676; // SQLSTATE: HY000; Message: %s Statement: %s
    case ER_REPLICA_CANT_CREATE_CONVERSION = 1678; // SQLSTATE: HY000; Message: Can't create conversion table for table '%s.%s'
    case ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_FORMAT = 1679; // SQLSTATE: HY000; Message: Cannot modify @@session.binlog_format inside a transaction
    case ER_PATH_LENGTH = 1680; // SQLSTATE: HY000; Message: The path specified for %s is too long.
    case ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT = 1681; // SQLSTATE: HY000; Message: '%s' is deprecated and will be removed in a future release.
    case ER_WRONG_NATIVE_TABLE_STRUCTURE = 1682; // SQLSTATE: HY000; Message: Native table '%s'.'%s' has the wrong structure
    case ER_WRONG_PERFSCHEMA_USAGE = 1683; // SQLSTATE: HY000; Message: Invalid performance_schema usage.
    case ER_WARN_I_S_SKIPPED_TABLE = 1684; // SQLSTATE: HY000; Message: Table '%s'.'%s' was skipped since its definition is being modified by concurrent DDL statement
    case ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_DIRECT = 1685; // SQLSTATE: HY000; Message: Cannot modify @@session.binlog_direct_non_transactional_updates inside a transaction
    case ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_DIRECT = 1686; // SQLSTATE: HY000; Message: Cannot change the binlog direct flag inside a stored function or trigger
    case ER_SPATIAL_MUST_HAVE_GEOM_COL = 1687; // SQLSTATE: 42000; Message: A SPATIAL index may only contain a geometrical type column
    case ER_TOO_LONG_INDEX_COMMENT = 1688; // SQLSTATE: HY000; Message: Comment for index '%s' is too long (max = %lu)
    case ER_LOCK_ABORTED = 1689; // SQLSTATE: HY000; Message: Wait on a lock was aborted due to a pending exclusive lock
    case ER_DATA_OUT_OF_RANGE = 1690; // SQLSTATE: 22003; Message: %s value is out of range in '%s'
    case ER_BINLOG_UNSAFE_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE = 1692; // SQLSTATE: HY000; Message: Mixing self-logging and non-self-logging engines in a statement is unsafe.
    case ER_BINLOG_UNSAFE_MIXED_STATEMENT = 1693; // SQLSTATE: HY000; Message: Statement accesses nontransactional table as well as transactional or temporary table, and writes to any of them.
    case ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_SQL_LOG_BIN = 1694; // SQLSTATE: HY000; Message: Cannot modify @@session.sql_log_bin inside a transaction
    case ER_STORED_FUNCTION_PREVENTS_SWITCH_SQL_LOG_BIN = 1695; // SQLSTATE: HY000; Message: Cannot change the sql_log_bin inside a stored function or trigger
    case ER_FAILED_READ_FROM_PAR_FILE = 1696; // SQLSTATE: HY000; Message: Failed to read from the .par file
    case ER_VALUES_IS_NOT_INT_TYPE_ERROR = 1697; // SQLSTATE: HY000; Message: VALUES value for partition '%s' must have type INT
    case ER_ACCESS_DENIED_NO_PASSWORD_ERROR = 1698; // SQLSTATE: 28000; Message: Access denied for user '%s'@'%s'
    case ER_TRUNCATE_ILLEGAL_FK = 1701; // SQLSTATE: 42000; Message: Cannot truncate a table referenced in a foreign key constraint (%s)
    case ER_PLUGIN_IS_PERMANENT = 1702; // SQLSTATE: HY000; Message: Plugin '%s' is force_plus_permanent and can not be unloaded
    case ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN = 1703; // SQLSTATE: HY000; Message: The requested value for the heartbeat period is less than 1 millisecond. The value is reset to 0, meaning that heartbeating will effectively be disabled.
    case ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX = 1704; // SQLSTATE: HY000; Message: The requested value for the heartbeat period exceeds the value of `replica_net_timeout' seconds. A sensible value for the period should be less than the timeout.
    case ER_STMT_CACHE_FULL = 1705; // SQLSTATE: HY000; Message: Multi-row statements required more than 'max_binlog_stmt_cache_size' bytes of storage; increase this mysqld variable and try again
    case ER_MULTI_UPDATE_KEY_CONFLICT = 1706; // SQLSTATE: HY000; Message: Primary key/partition key update is not allowed since the table is updated both as '%s' and '%s'.
    case ER_TABLE_NEEDS_REBUILD = 1707; // SQLSTATE: HY000; Message: Table rebuild required. Please do "ALTER TABLE `%s` FORCE" or dump/reload to fix it!
    case WARN_OPTION_BELOW_LIMIT = 1708; // SQLSTATE: HY000; Message: The value of '%s' should be no less than the value of '%s'
    case ER_INDEX_COLUMN_TOO_LONG = 1709; // SQLSTATE: HY000; Message: Index column size too large. The maximum column size is %lu bytes.
    case ER_ERROR_IN_TRIGGER_BODY = 1710; // SQLSTATE: HY000; Message: Trigger '%s' has an error in its body: '%s'
    case ER_ERROR_IN_UNKNOWN_TRIGGER_BODY = 1711; // SQLSTATE: HY000; Message: Unknown trigger has an error in its body: '%s'
    case ER_INDEX_CORRUPT = 1712; // SQLSTATE: HY000; Message: Index %s is corrupted
    case ER_UNDO_RECORD_TOO_BIG = 1713; // SQLSTATE: HY000; Message: Undo log record is too big.
    case ER_BINLOG_UNSAFE_INSERT_IGNORE_SELECT = 1714; // SQLSTATE: HY000; Message: INSERT IGNORE... SELECT is unsafe because the order in which rows are retrieved by the SELECT determines which (if any) rows are ignored. This order cannot be predicted and may differ on source and the replica.
    case ER_BINLOG_UNSAFE_INSERT_SELECT_UPDATE = 1715; // SQLSTATE: HY000; Message: INSERT... SELECT... ON DUPLICATE KEY UPDATE is unsafe because the order in which rows are retrieved by the SELECT determines which (if any) rows are updated. This order cannot be predicted and may differ on source and the replica.
    case ER_BINLOG_UNSAFE_REPLACE_SELECT = 1716; // SQLSTATE: HY000; Message: REPLACE... SELECT is unsafe because the order in which rows are retrieved by the SELECT determines which (if any) rows are replaced. This order cannot be predicted and may differ on source and the replica.
    case ER_BINLOG_UNSAFE_CREATE_IGNORE_SELECT = 1717; // SQLSTATE: HY000; Message: CREATE... IGNORE SELECT is unsafe because the order in which rows are retrieved by the SELECT determines which (if any) rows are ignored. This order cannot be predicted and may differ on source and the replica.
    case ER_BINLOG_UNSAFE_CREATE_REPLACE_SELECT = 1718; // SQLSTATE: HY000; Message: CREATE... REPLACE SELECT is unsafe because the order in which rows are retrieved by the SELECT determines which (if any) rows are replaced. This order cannot be predicted and may differ on source and the replica.
    case ER_BINLOG_UNSAFE_UPDATE_IGNORE = 1719; // SQLSTATE: HY000; Message: UPDATE IGNORE is unsafe because the order in which rows are updated determines which (if any) rows are ignored. This order cannot be predicted and may differ on source and the replica.
    case ER_PLUGIN_NO_UNINSTALL = 1720; // SQLSTATE: HY000; Message: Plugin '%s' is marked as not dynamically uninstallable. You have to stop the server to uninstall it.
    case ER_PLUGIN_NO_INSTALL = 1721; // SQLSTATE: HY000; Message: Plugin '%s' is marked as not dynamically installable. You have to stop the server to install it.
    case ER_BINLOG_UNSAFE_WRITE_AUTOINC_SELECT = 1722; // SQLSTATE: HY000; Message: Statements writing to a table with an auto-increment column after selecting from another table are unsafe because the order in which rows are retrieved determines what (if any) rows will be written. This order cannot be predicted and may differ on source and the replica.
    case ER_BINLOG_UNSAFE_CREATE_SELECT_AUTOINC = 1723; // SQLSTATE: HY000; Message: CREATE TABLE... SELECT... on a table with an auto-increment column is unsafe because the order in which rows are retrieved by the SELECT determines which (if any) rows are inserted. This order cannot be predicted and may differ on source and the replica.
    case ER_BINLOG_UNSAFE_INSERT_TWO_KEYS = 1724; // SQLSTATE: HY000; Message: INSERT... ON DUPLICATE KEY UPDATE on a table with more than one UNIQUE KEY is unsafe
    case ER_TABLE_IN_FK_CHECK = 1725; // SQLSTATE: HY000; Message: Table is being used in foreign key check.
    case ER_UNSUPPORTED_ENGINE = 1726; // SQLSTATE: HY000; Message: Storage engine '%s' does not support system tables. [%s.%s]
    case ER_BINLOG_UNSAFE_AUTOINC_NOT_FIRST = 1727; // SQLSTATE: HY000; Message: INSERT into autoincrement field which is not the first part in the composed primary key is unsafe.
    case ER_CANNOT_LOAD_FROM_TABLE_V2 = 1728; // SQLSTATE: HY000; Message: Cannot load from %s.%s. The table is probably corrupted
    case ER_SOURCE_DELAY_VALUE_OUT_OF_RANGE = 1729; // SQLSTATE: HY000; Message: The requested value %s for the source delay exceeds the maximum %u
    case ER_ONLY_FD_AND_RBR_EVENTS_ALLOWED_IN_BINLOG_STATEMENT = 1730; // SQLSTATE: HY000; Message: Only Format_description_log_event and row events are allowed in BINLOG statements (but %s was provided)
    case ER_PARTITION_EXCHANGE_DIFFERENT_OPTION = 1731; // SQLSTATE: HY000; Message: Non matching attribute '%s' between partition and table
    case ER_PARTITION_EXCHANGE_PART_TABLE = 1732; // SQLSTATE: HY000; Message: Table to exchange with partition is partitioned: '%s'
    case ER_PARTITION_EXCHANGE_TEMP_TABLE = 1733; // SQLSTATE: HY000; Message: Table to exchange with partition is temporary: '%s'
    case ER_PARTITION_INSTEAD_OF_SUBPARTITION = 1734; // SQLSTATE: HY000; Message: Subpartitioned table, use subpartition instead of partition
    case ER_UNKNOWN_PARTITION = 1735; // SQLSTATE: HY000; Message: Unknown partition '%s' in table '%s'
    case ER_TABLES_DIFFERENT_METADATA = 1736; // SQLSTATE: HY000; Message: Tables have different definitions
    case ER_ROW_DOES_NOT_MATCH_PARTITION = 1737; // SQLSTATE: HY000; Message: Found a row that does not match the partition
    case ER_BINLOG_CACHE_SIZE_GREATER_THAN_MAX = 1738; // SQLSTATE: HY000; Message: Option binlog_cache_size (%lu) is greater than max_binlog_cache_size (%lu); setting binlog_cache_size equal to max_binlog_cache_size.
    case ER_WARN_INDEX_NOT_APPLICABLE = 1739; // SQLSTATE: HY000; Message: Cannot use %s access on index '%s' due to type or collation conversion on field '%s'
    case ER_PARTITION_EXCHANGE_FOREIGN_KEY = 1740; // SQLSTATE: HY000; Message: Table to exchange with partition has foreign key references: '%s'
    case ER_RPL_INFO_DATA_TOO_LONG = 1742; // SQLSTATE: HY000; Message: Data for column '%s' too long
    case ER_BINLOG_STMT_CACHE_SIZE_GREATER_THAN_MAX = 1745; // SQLSTATE: HY000; Message: Option binlog_stmt_cache_size (%lu) is greater than max_binlog_stmt_cache_size (%lu); setting binlog_stmt_cache_size equal to max_binlog_stmt_cache_size.
    case ER_CANT_UPDATE_TABLE_IN_CREATE_TABLE_SELECT = 1746; // SQLSTATE: HY000; Message: Can't update table '%s' while '%s' is being created.
    case ER_PARTITION_CLAUSE_ON_NONPARTITIONED = 1747; // SQLSTATE: HY000; Message: PARTITION () clause on non partitioned table
    case ER_ROW_DOES_NOT_MATCH_GIVEN_PARTITION_SET = 1748; // SQLSTATE: HY000; Message: Found a row not matching the given partition set
    case ER_CHANGE_RPL_INFO_REPOSITORY_FAILURE = 1750; // SQLSTATE: HY000; Message: Failure while changing the type of replication repository: %s.
    case ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_CREATED_TEMP_TABLE = 1751; // SQLSTATE: HY000; Message: The creation of some temporary tables could not be rolled back.
    case ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_DROPPED_TEMP_TABLE = 1752; // SQLSTATE: HY000; Message: Some temporary tables were dropped, but these operations could not be rolled back.
    case ER_MTA_FEATURE_IS_NOT_SUPPORTED = 1753; // SQLSTATE: HY000; Message: %s is not supported in multi-threaded replica mode. %s
    case ER_MTA_UPDATED_DBS_GREATER_MAX = 1754; // SQLSTATE: HY000; Message: The number of modified databases exceeds the maximum %d; the database names will not be included in the replication event metadata.
    case ER_MTA_CANT_PARALLEL = 1755; // SQLSTATE: HY000; Message: Cannot execute the current event group in the parallel mode. Encountered event %s, relay-log name %s, position %s which prevents execution of this event group in parallel mode. Reason: %s.
    case ER_MTA_INCONSISTENT_DATA = 1756; // SQLSTATE: HY000; Message: %s
    case ER_FULLTEXT_NOT_SUPPORTED_WITH_PARTITIONING = 1757; // SQLSTATE: HY000; Message: FULLTEXT index is not supported for partitioned tables.
    case ER_DA_INVALID_CONDITION_NUMBER = 1758; // SQLSTATE: 35000; Message: Invalid condition number
    case ER_INSECURE_PLAIN_TEXT = 1759; // SQLSTATE: HY000; Message: Sending passwords in plain text without SSL/TLS is extremely insecure.
    case ER_INSECURE_CHANGE_SOURCE = 1760; // SQLSTATE: HY000; Message: Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
    case ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO = 1761; // SQLSTATE: 23000; Message: Foreign key constraint for table '%s', record '%s' would lead to a duplicate entry in table '%s', key '%s'
    case ER_FOREIGN_DUPLICATE_KEY_WITHOUT_CHILD_INFO = 1762; // SQLSTATE: 23000; Message: Foreign key constraint for table '%s', record '%s' would lead to a duplicate entry in a child table
    case ER_SQLTHREAD_WITH_SECURE_REPLICA = 1763; // SQLSTATE: HY000; Message: Setting authentication options is not possible when only the Replica SQL Thread is being started.
    case ER_TABLE_HAS_NO_FT = 1764; // SQLSTATE: HY000; Message: The table does not have FULLTEXT index to support this query
    case ER_VARIABLE_NOT_SETTABLE_IN_SF_OR_TRIGGER = 1765; // SQLSTATE: HY000; Message: The system variable %s cannot be set in stored functions or triggers.
    case ER_VARIABLE_NOT_SETTABLE_IN_TRANSACTION = 1766; // SQLSTATE: HY000; Message: The system variable %s cannot be set when there is an ongoing transaction.
    case ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION = 1769; // SQLSTATE: HY000; Message: The statement 'SET %s' cannot invoke a stored function.
    case ER_GTID_NEXT_CANT_BE_AUTOMATIC_IF_GTID_NEXT_LIST_IS_NON_NULL = 1770; // SQLSTATE: HY000; Message: The system variable @@SESSION.GTID_NEXT cannot be 'AUTOMATIC' when @@SESSION.GTID_NEXT_LIST is non-NULL.
    case ER_MALFORMED_GTID_SET_SPECIFICATION = 1772; // SQLSTATE: HY000; Message: Malformed GTID set specification '%s'.
    case ER_MALFORMED_GTID_SET_ENCODING = 1773; // SQLSTATE: HY000; Message: Malformed GTID set encoding.
    case ER_MALFORMED_GTID_SPECIFICATION = 1774; // SQLSTATE: HY000; Message: Malformed GTID specification '%s'.
    case ER_GNO_EXHAUSTED = 1775; // SQLSTATE: HY000; Message: Impossible to generate GTID: the integer component reached the maximum value. Restart the server with a new server_uuid.
    case ER_BAD_REPLICA_AUTO_POSITION = 1776; // SQLSTATE: HY000; Message: Parameters SOURCE_LOG_FILE, SOURCE_LOG_POS, RELAY_LOG_FILE and RELAY_LOG_POS cannot be set when SOURCE_AUTO_POSITION is active.
    case ER_AUTO_POSITION_REQUIRES_GTID_MODE_NOT_OFF = 1777; // SQLSTATE: HY000; Message: CHANGE REPLICATION SOURCE TO SOURCE_AUTO_POSITION = 1 cannot be executed because @@GLOBAL.GTID_MODE = OFF.
    case ER_CANT_DO_IMPLICIT_COMMIT_IN_TRX_WHEN_GTID_NEXT_IS_SET = 1778; // SQLSTATE: HY000; Message: Cannot execute statements with implicit commit inside a transaction when @@SESSION.GTID_NEXT == 'UUID:NUMBER'.
    case ER_GTID_MODE_ON_REQUIRES_ENFORCE_GTID_CONSISTENCY_ON = 1779; // SQLSTATE: HY000; Message: GTID_MODE = ON requires ENFORCE_GTID_CONSISTENCY = ON.
    case ER_CANT_SET_GTID_NEXT_TO_GTID_WHEN_GTID_MODE_IS_OFF = 1781; // SQLSTATE: HY000; Message: @@SESSION.GTID_NEXT cannot be set to UUID:NUMBER when @@GLOBAL.GTID_MODE = OFF.
    case ER_CANT_SET_GTID_NEXT_TO_ANONYMOUS_WHEN_GTID_MODE_IS_ON = 1782; // SQLSTATE: HY000; Message: @@SESSION.GTID_NEXT cannot be set to ANONYMOUS when @@GLOBAL.GTID_MODE = ON.
    case ER_CANT_SET_GTID_NEXT_LIST_TO_NON_NULL_WHEN_GTID_MODE_IS_OFF = 1783; // SQLSTATE: HY000; Message: @@SESSION.GTID_NEXT_LIST cannot be set to a non-NULL value when @@GLOBAL.GTID_MODE = OFF.
    case ER_GTID_UNSAFE_NON_TRANSACTIONAL_TABLE = 1785; // SQLSTATE: HY000; Message: Statement violates GTID consistency: Updates to non-transactional tables can only be done in either autocommitted statements or single-statement transactions, and never in the same statement as updates to transactional tables.
    case ER_GTID_UNSAFE_CREATE_SELECT = 1786; // SQLSTATE: HY000; Message: Statement violates GTID consistency: CREATE TABLE ... SELECT.
    case ER_GTID_MODE_CAN_ONLY_CHANGE_ONE_STEP_AT_A_TIME = 1788; // SQLSTATE: HY000; Message: The value of @@GLOBAL.GTID_MODE can only be changed one step at a time: OFF <-> OFF_PERMISSIVE <-> ON_PERMISSIVE <-> ON. Also note that this value must be stepped up or down simultaneously on all servers. See the Manual for instructions.
    case ER_SOURCE_HAS_PURGED_REQUIRED_GTIDS = 1789; // SQLSTATE: HY000; Message: Cannot replicate because the source purged required binary logs. Replicate the missing transactions from elsewhere, or provision a new replica from backup. Consider increasing the source's binary log expiration period. %s
    case ER_CANT_SET_GTID_NEXT_WHEN_OWNING_GTID = 1790; // SQLSTATE: HY000; Message: @@SESSION.GTID_NEXT cannot be changed by a client that owns a GTID. The client owns %s. Ownership is released on COMMIT or ROLLBACK.
    case ER_UNKNOWN_EXPLAIN_FORMAT = 1791; // SQLSTATE: HY000; Message: Unknown EXPLAIN format name: '%s'
    case ER_CANT_EXECUTE_IN_READ_ONLY_TRANSACTION = 1792; // SQLSTATE: 25006; Message: Cannot execute statement in a READ ONLY transaction.
    case ER_TOO_LONG_TABLE_PARTITION_COMMENT = 1793; // SQLSTATE: HY000; Message: Comment for table partition '%s' is too long (max = %lu)
    case ER_REPLICA_CONFIGURATION = 1794; // SQLSTATE: HY000; Message: Replica is not configured or failed to initialize properly. You must at least set --server-id to enable either a source or a replica. Additional error messages can be found in the MySQL error log.
    case ER_INNODB_FT_LIMIT = 1795; // SQLSTATE: HY000; Message: InnoDB presently supports one FULLTEXT index creation at a time
    case ER_INNODB_NO_FT_TEMP_TABLE = 1796; // SQLSTATE: HY000; Message: Cannot create FULLTEXT index on temporary InnoDB table
    case ER_INNODB_FT_WRONG_DOCID_COLUMN = 1797; // SQLSTATE: HY000; Message: Column '%s' is of wrong type for an InnoDB FULLTEXT index
    case ER_INNODB_FT_WRONG_DOCID_INDEX = 1798; // SQLSTATE: HY000; Message: Index '%s' is of wrong type for an InnoDB FULLTEXT index
    case ER_INNODB_ONLINE_LOG_TOO_BIG = 1799; // SQLSTATE: HY000; Message: Creating index '%s' required more than 'innodb_online_alter_log_max_size' bytes of modification log. Please try again.
    case ER_UNKNOWN_ALTER_ALGORITHM = 1800; // SQLSTATE: HY000; Message: Unknown ALGORITHM '%s'
    case ER_UNKNOWN_ALTER_LOCK = 1801; // SQLSTATE: HY000; Message: Unknown LOCK type '%s'
    case ER_MTA_CHANGE_SOURCE_CANT_RUN_WITH_GAPS = 1802; // SQLSTATE: HY000; Message: CHANGE REPLICATION SOURCE cannot be executed when the replica was stopped with an error or killed in MTA mode. Consider using RESET REPLICA or START REPLICA UNTIL.
    case ER_MTA_RECOVERY_FAILURE = 1803; // SQLSTATE: HY000; Message: Cannot recover after REPLICA errored out in parallel execution mode. Additional error messages can be found in the MySQL error log.
    case ER_MTA_RESET_WORKERS = 1804; // SQLSTATE: HY000; Message: Cannot clean up worker info tables. Additional error messages can be found in the MySQL error log.
    case ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2 = 1805; // SQLSTATE: HY000; Message: Column count of %s.%s is wrong. Expected %d, found %d. The table is probably corrupted
    case ER_REPLICA_SILENT_RETRY_TRANSACTION = 1806; // SQLSTATE: HY000; Message: Replica must silently retry current transaction
    case ER_DISCARD_FK_CHECKS_RUNNING = 1807; // SQLSTATE: HY000; Message: There is a foreign key check running on table '%s'. Cannot discard the table.
    case ER_TABLE_SCHEMA_MISMATCH = 1808; // SQLSTATE: HY000; Message: Schema mismatch (%s)
    case ER_TABLE_IN_SYSTEM_TABLESPACE = 1809; // SQLSTATE: HY000; Message: Table '%s' in system tablespace
    case ER_IO_READ_ERROR = 1810; // SQLSTATE: HY000; Message: IO Read error: (%lu, %s) %s
    case ER_IO_WRITE_ERROR = 1811; // SQLSTATE: HY000; Message: IO Write error: (%lu, %s) %s
    case ER_TABLESPACE_MISSING = 1812; // SQLSTATE: HY000; Message: Tablespace is missing for table %s.
    case ER_TABLESPACE_EXISTS = 1813; // SQLSTATE: HY000; Message: Tablespace '%s' exists.
    case ER_TABLESPACE_DISCARDED = 1814; // SQLSTATE: HY000; Message: Tablespace has been discarded for table '%s'
    case ER_INTERNAL_ERROR = 1815; // SQLSTATE: HY000; Message: Internal error: %s
    case ER_INNODB_IMPORT_ERROR = 1816; // SQLSTATE: HY000; Message: ALTER TABLE %s IMPORT TABLESPACE failed with error %lu : '%s'
    case ER_INNODB_INDEX_CORRUPT = 1817; // SQLSTATE: HY000; Message: Index corrupt: %s
    case ER_INVALID_YEAR_COLUMN_LENGTH = 1818; // SQLSTATE: HY000; Message: Invalid display width. Use YEAR instead.
    case ER_NOT_VALID_PASSWORD = 1819; // SQLSTATE: HY000; Message: Your password does not satisfy the current policy requirements
    case ER_MUST_CHANGE_PASSWORD = 1820; // SQLSTATE: HY000; Message: You must reset your password using ALTER USER statement before executing this statement.
    case ER_FK_NO_INDEX_CHILD = 1821; // SQLSTATE: HY000; Message: Failed to add the foreign key constraint. Missing index for constraint '%s' in the foreign table '%s'
    case ER_FK_NO_INDEX_PARENT = 1822; // SQLSTATE: HY000; Message: Failed to add the foreign key constraint. Missing index for constraint '%s' in the referenced table '%s'
    case ER_FK_FAIL_ADD_SYSTEM = 1823; // SQLSTATE: HY000; Message: Failed to add the foreign key constraint '%s' to system tables
    case ER_FK_CANNOT_OPEN_PARENT = 1824; // SQLSTATE: HY000; Message: Failed to open the referenced table '%s'
    case ER_FK_INCORRECT_OPTION = 1825; // SQLSTATE: HY000; Message: Failed to add the foreign key constraint on table '%s'. Incorrect options in FOREIGN KEY constraint '%s'
    case ER_FK_DUP_NAME = 1826; // SQLSTATE: HY000; Message: Duplicate foreign key constraint name '%s'
    case ER_PASSWORD_FORMAT = 1827; // SQLSTATE: HY000; Message: The password hash doesn't have the expected format.
    case ER_FK_COLUMN_CANNOT_DROP = 1828; // SQLSTATE: HY000; Message: Cannot drop column '%s': needed in a foreign key constraint '%s'
    case ER_FK_COLUMN_CANNOT_DROP_CHILD = 1829; // SQLSTATE: HY000; Message: Cannot drop column '%s': needed in a foreign key constraint '%s' of table '%s'
    case ER_FK_COLUMN_NOT_NULL = 1830; // SQLSTATE: HY000; Message: Column '%s' cannot be NOT NULL: needed in a foreign key constraint '%s' SET NULL
    case ER_DUP_INDEX = 1831; // SQLSTATE: HY000; Message: Duplicate index '%s' defined on the table '%s.%s'. This is deprecated and will be disallowed in a future release.
    case ER_FK_COLUMN_CANNOT_CHANGE = 1832; // SQLSTATE: HY000; Message: Cannot change column '%s': used in a foreign key constraint '%s'
    case ER_FK_COLUMN_CANNOT_CHANGE_CHILD = 1833; // SQLSTATE: HY000; Message: Cannot change column '%s': used in a foreign key constraint '%s' of table '%s'
    case ER_MALFORMED_PACKET = 1835; // SQLSTATE: HY000; Message: Malformed communication packet.
    case ER_READ_ONLY_MODE = 1836; // SQLSTATE: HY000; Message: Running in read-only mode
    case ER_GTID_NEXT_TYPE_UNDEFINED_GTID = 1837; // SQLSTATE: HY000; Message: When @@SESSION.GTID_NEXT is set to a GTID, you must explicitly set it to a different value after a COMMIT or ROLLBACK. Please check GTID_NEXT variable manual page for detailed explanation. Current @@SESSION.GTID_NEXT is '%s'.
    case ER_VARIABLE_NOT_SETTABLE_IN_SP = 1838; // SQLSTATE: HY000; Message: The system variable %s cannot be set in stored procedures.
    case ER_CANT_SET_GTID_PURGED_WHEN_GTID_EXECUTED_IS_NOT_EMPTY = 1840; // SQLSTATE: HY000; Message: @@GLOBAL.GTID_PURGED can only be set when @@GLOBAL.GTID_EXECUTED is empty.
    case ER_CANT_SET_GTID_PURGED_WHEN_OWNED_GTIDS_IS_NOT_EMPTY = 1841; // SQLSTATE: HY000; Message: @@GLOBAL.GTID_PURGED can only be set when there are no ongoing transactions (not even in other clients).
    case ER_GTID_PURGED_WAS_CHANGED = 1842; // SQLSTATE: HY000; Message: @@GLOBAL.GTID_PURGED was changed from '%s' to '%s'.
    case ER_GTID_EXECUTED_WAS_CHANGED = 1843; // SQLSTATE: HY000; Message: @@GLOBAL.GTID_EXECUTED was changed from '%s' to '%s'.
    case ER_BINLOG_STMT_MODE_AND_NO_REPL_TABLES = 1844; // SQLSTATE: HY000; Message: Cannot execute statement: impossible to write to binary log since BINLOG_FORMAT = STATEMENT, and both replicated and non replicated tables are written to.
    case ER_ALTER_OPERATION_NOT_SUPPORTED = 1845; // SQLSTATE: 0A000; Message: %s is not supported for this operation. Try %s.
    case ER_ALTER_OPERATION_NOT_SUPPORTED_REASON = 1846; // SQLSTATE: 0A000; Message: %s is not supported. Reason: %s. Try %s.
    case ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COPY = 1847; // SQLSTATE: HY000; Message: COPY algorithm requires a lock
    case ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_PARTITION = 1848; // SQLSTATE: HY000; Message: Partition specific operations do not yet support LOCK/ALGORITHM
    case ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_RENAME = 1849; // SQLSTATE: HY000; Message: Columns participating in a foreign key are renamed
    case ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE = 1850; // SQLSTATE: HY000; Message: Cannot change column type INPLACE
    case ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_CHECK = 1851; // SQLSTATE: HY000; Message: Adding foreign keys needs foreign_key_checks=OFF
    case ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOPK = 1853; // SQLSTATE: HY000; Message: Dropping a primary key is not allowed without also adding a new primary key
    case ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_AUTOINC = 1854; // SQLSTATE: HY000; Message: Adding an auto-increment column requires a lock
    case ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_HIDDEN_FTS = 1855; // SQLSTATE: HY000; Message: Cannot replace hidden FTS_DOC_ID with a user-visible one
    case ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_CHANGE_FTS = 1856; // SQLSTATE: HY000; Message: Cannot drop or rename FTS_DOC_ID
    case ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FTS = 1857; // SQLSTATE: HY000; Message: Fulltext index creation requires a lock
    case ER_DUP_UNKNOWN_IN_INDEX = 1859; // SQLSTATE: 23000; Message: Duplicate entry for key '%s'
    case ER_IDENT_CAUSES_TOO_LONG_PATH = 1860; // SQLSTATE: HY000; Message: Long database name and identifier for object resulted in path length exceeding %d characters. Path: '%s'.
    case ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOT_NULL = 1861; // SQLSTATE: HY000; Message: cannot silently convert NULL values, as required in this SQL_MODE
    case ER_MUST_CHANGE_PASSWORD_LOGIN = 1862; // SQLSTATE: HY000; Message: Your password has expired. To log in you must change it using a client that supports expired passwords.
    case ER_ROW_IN_WRONG_PARTITION = 1863; // SQLSTATE: HY000; Message: Found a row in wrong partition %s
    case ER_MTA_EVENT_BIGGER_PENDING_JOBS_SIZE_MAX = 1864; // SQLSTATE: HY000; Message: Cannot schedule event %s, relay-log name %s, position %s to Worker thread because its size %lu exceeds %lu of replica_pending_jobs_size_max.
    case ER_BINLOG_LOGICAL_CORRUPTION = 1866; // SQLSTATE: HY000; Message: The binary log file '%s' is logically corrupted: %s
    case ER_WARN_PURGE_LOG_IN_USE = 1867; // SQLSTATE: HY000; Message: file %s was not purged because it was being read by %d thread(s), purged only %d out of %d files.
    case ER_WARN_PURGE_LOG_IS_ACTIVE = 1868; // SQLSTATE: HY000; Message: file %s was not purged because it is the active log file.
    case ER_AUTO_INCREMENT_CONFLICT = 1869; // SQLSTATE: HY000; Message: Auto-increment value in UPDATE conflicts with internally generated values
    case WARN_ON_BLOCKHOLE_IN_RBR = 1870; // SQLSTATE: HY000; Message: Row events are not logged for %s statements that modify BLACKHOLE tables in row format. Table(s): '%s'
    case ER_REPLICA_CM_INIT_REPOSITORY = 1871; // SQLSTATE: HY000; Message: Replica failed to initialize connection metadata structure from the repository
    case ER_REPLICA_AM_INIT_REPOSITORY = 1872; // SQLSTATE: HY000; Message: Replica failed to initialize applier metadata structure from the repository
    case ER_ACCESS_DENIED_CHANGE_USER_ERROR = 1873; // SQLSTATE: 28000; Message: Access denied trying to change to user '%s'@'%s' (using password: %s). Disconnecting.
    case ER_INNODB_READ_ONLY = 1874; // SQLSTATE: HY000; Message: InnoDB is in read only mode.
    case ER_STOP_REPLICA_SQL_THREAD_TIMEOUT = 1875; // SQLSTATE: HY000; Message: STOP REPLICA command execution is incomplete: Replica SQL thread got the stop signal, thread is busy, SQL thread will stop once the current task is complete.
    case ER_STOP_REPLICA_IO_THREAD_TIMEOUT = 1876; // SQLSTATE: HY000; Message: STOP REPLICA command execution is incomplete: Replica IO thread got the stop signal, thread is busy, IO thread will stop once the current task is complete.
    case ER_TABLE_CORRUPT = 1877; // SQLSTATE: HY000; Message: Operation cannot be performed. The table '%s.%s' is missing, corrupt or contains bad data.
    case ER_TEMP_FILE_WRITE_FAILURE = 1878; // SQLSTATE: HY000; Message: Temporary file write failure.
    case ER_INNODB_FT_AUX_NOT_HEX_ID = 1879; // SQLSTATE: HY000; Message: Upgrade index name failed, please use create index(alter table) algorithm copy to rebuild index.
    case ER_OLD_TEMPORALS_UPGRADED = 1880; // SQLSTATE: HY000; Message: TIME/TIMESTAMP/DATETIME columns of old format have been upgraded to the new format.
    case ER_INNODB_FORCED_RECOVERY = 1881; // SQLSTATE: HY000; Message: Operation not allowed when innodb_force_recovery > 0.
    case ER_AES_INVALID_IV = 1882; // SQLSTATE: HY000; Message: The initialization vector supplied to %s is too short. Must be at least %d bytes long
    case ER_PLUGIN_CANNOT_BE_UNINSTALLED = 1883; // SQLSTATE: HY000; Message: Plugin '%s' cannot be uninstalled now. %s
    case ER_GTID_UNSAFE_BINLOG_SPLITTABLE_STATEMENT_AND_ASSIGNED_GTID = 1884; // SQLSTATE: HY000; Message: Cannot execute statement because it needs to be written to the binary log as multiple statements, and this is not allowed when @@SESSION.GTID_NEXT == 'UUID:NUMBER'.
    case ER_REPLICA_HAS_MORE_GTIDS_THAN_SOURCE = 1885; // SQLSTATE: HY000; Message: Replica has more GTIDs than the source has, using the source's SERVER_UUID. This may indicate that the the last binary log file was truncated or lost, e.g., after a power failure when sync_binlog != 1. The source may have rolled back transactions that were already replicated to the replica. Replicate any transactions that source has rolled back from replica to source, and/or commit empty transactions on source to account for transactions that have been committed on source but are not included in GTID_EXECUTED.
    case ER_MISSING_KEY = 1886; // SQLSTATE: HY000; Message: The table '%s.%s' does not have the necessary key(s) defined on it. Please check the table definition and create index(s) accordingly.
    case WARN_NAMED_PIPE_ACCESS_EVERYONE = 1887; // SQLSTATE: HY000; Message: Setting named_pipe_full_access_group='%s' is insecure. Consider using a Windows group with fewer members.
    case ER_FILE_CORRUPT = 3000; // SQLSTATE: HY000; Message: File %s is corrupted
    case ER_ERROR_ON_SOURCE = 3001; // SQLSTATE: HY000; Message: Query partially completed on the source (error on source: %d) and was aborted. There is a chance that your source is inconsistent at this point. If you are sure that your source is ok, run this query manually on the replica and then restart the replica with SET GLOBAL SQL_REPLICA_SKIP_COUNTER=1; START REPLICA;. Query:'%s'
    case ER_STORAGE_ENGINE_NOT_LOADED = 3003; // SQLSTATE: HY000; Message: Storage engine for table '%s'.'%s' is not loaded.
    case ER_GET_STACKED_DA_WITHOUT_ACTIVE_HANDLER = 3004; // SQLSTATE: 0Z002; Message: GET STACKED DIAGNOSTICS when handler not active
    case ER_WARN_LEGACY_SYNTAX_CONVERTED = 3005; // SQLSTATE: HY000; Message: %s is no longer supported. The statement was converted to %s.
    case ER_BINLOG_UNSAFE_FULLTEXT_PLUGIN = 3006; // SQLSTATE: HY000; Message: Statement is unsafe because it uses a fulltext parser plugin which may not return the same value on the replica.
    case ER_CANNOT_DISCARD_TEMPORARY_TABLE = 3007; // SQLSTATE: HY000; Message: Cannot DISCARD/IMPORT tablespace associated with temporary table
    case ER_FK_DEPTH_EXCEEDED = 3008; // SQLSTATE: HY000; Message: Foreign key cascade delete/update exceeds max depth of %d.
    case ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE_V2 = 3009; // SQLSTATE: HY000; Message: The column count of %s.%s is wrong. Expected %d, found %d. Created with MySQL %d, now running %d. Please perform the MySQL upgrade procedure.
    case ER_WARN_TRIGGER_DOESNT_HAVE_CREATED = 3010; // SQLSTATE: HY000; Message: Trigger %s.%s.%s does not have CREATED attribute.
    case ER_REFERENCED_TRG_DOES_NOT_EXIST = 3011; // SQLSTATE: HY000; Message: Referenced trigger '%s' for the given action time and event type does not exist.
    case ER_EXPLAIN_NOT_SUPPORTED = 3012; // SQLSTATE: HY000; Message: EXPLAIN FOR CONNECTION command is supported only for SELECT/UPDATE/INSERT/DELETE/REPLACE
    case ER_INVALID_FIELD_SIZE = 3013; // SQLSTATE: HY000; Message: Invalid size for column '%s'.
    case ER_MISSING_HA_CREATE_OPTION = 3014; // SQLSTATE: HY000; Message: Table storage engine '%s' found required create option missing
    case ER_ENGINE_OUT_OF_MEMORY = 3015; // SQLSTATE: HY000; Message: Out of memory in storage engine '%s'.
    case ER_PASSWORD_EXPIRE_ANONYMOUS_USER = 3016; // SQLSTATE: HY000; Message: The password for anonymous user cannot be expired.
    case ER_REPLICA_SQL_THREAD_MUST_STOP = 3017; // SQLSTATE: HY000; Message: This operation cannot be performed with a running replica sql thread; run STOP REPLICA SQL_THREAD first
    case ER_NO_FT_MATERIALIZED_SUBQUERY = 3018; // SQLSTATE: HY000; Message: Cannot create FULLTEXT index on materialized subquery
    case ER_INNODB_UNDO_LOG_FULL = 3019; // SQLSTATE: HY000; Message: Undo Log error: %s
    case ER_INVALID_ARGUMENT_FOR_LOGARITHM = 3020; // SQLSTATE: 2201E; Message: Invalid argument for logarithm
    case ER_REPLICA_CHANNEL_IO_THREAD_MUST_STOP = 3021; // SQLSTATE: HY000; Message: This operation cannot be performed with a running replica io thread; run STOP REPLICA IO_THREAD FOR CHANNEL '%s' first.
    case ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO = 3022; // SQLSTATE: HY000; Message: This operation may not be safe when the replica has temporary tables. The tables will be kept open until the server restarts or until the tables are deleted by any replicated DROP statement. Suggest to wait until replica_open_temp_tables = 0.
    case ER_WARN_ONLY_SOURCE_LOG_FILE_NO_POS = 3023; // SQLSTATE: HY000; Message: CHANGE REPLICATION SOURCE TO with a SOURCE_LOG_FILE clause but no SOURCE_LOG_POS clause may not be safe. The old position value may not be valid for the new binary log file.
    case ER_QUERY_TIMEOUT = 3024; // SQLSTATE: HY000; Message: Query execution was interrupted, maximum statement execution time exceeded
    case ER_NON_RO_SELECT_DISABLE_TIMER = 3025; // SQLSTATE: HY000; Message: Select is not a read only statement, disabling timer
    case ER_DUP_LIST_ENTRY = 3026; // SQLSTATE: HY000; Message: Duplicate entry '%s'.
    case ER_AGGREGATE_ORDER_FOR_UNION = 3028; // SQLSTATE: HY000; Message: Expression #%u of ORDER BY contains aggregate function and applies to a UNION, EXCEPT or INTERSECT
    case ER_AGGREGATE_ORDER_NON_AGG_QUERY = 3029; // SQLSTATE: HY000; Message: Expression #%u of ORDER BY contains aggregate function and applies to the result of a non-aggregated query
    case ER_REPLICA_WORKER_STOPPED_PREVIOUS_THD_ERROR = 3030; // SQLSTATE: HY000; Message: Replica worker has stopped after at least one previous worker encountered an error when replica-preserve-commit-order was enabled. To preserve commit order, the last transaction executed by this thread has not been committed. When restarting the replica after fixing any failed threads, you should fix this worker as well.
    case ER_DONT_SUPPORT_REPLICA_PRESERVE_COMMIT_ORDER = 3031; // SQLSTATE: HY000; Message: replica_preserve_commit_order is not supported %s.
    case ER_SERVER_OFFLINE_MODE = 3032; // SQLSTATE: HY000; Message: The server is currently in offline mode
    case ER_GIS_DIFFERENT_SRIDS = 3033; // SQLSTATE: HY000; Message: Binary geometry function %s given two geometries of different srids: %u and %u, which should have been identical.
    case ER_GIS_UNSUPPORTED_ARGUMENT = 3034; // SQLSTATE: HY000; Message: Calling geometry function %s with unsupported types of arguments.
    case ER_GIS_UNKNOWN_ERROR = 3035; // SQLSTATE: HY000; Message: Unknown GIS error occurred in function %s.
    case ER_GIS_UNKNOWN_EXCEPTION = 3036; // SQLSTATE: HY000; Message: Unknown exception caught in GIS function %s.
    case ER_GIS_INVALID_DATA = 3037; // SQLSTATE: 22023; Message: Invalid GIS data provided to function %s.
    case ER_BOOST_GEOMETRY_EMPTY_INPUT_EXCEPTION = 3038; // SQLSTATE: HY000; Message: The geometry has no data in function %s.
    case ER_BOOST_GEOMETRY_CENTROID_EXCEPTION = 3039; // SQLSTATE: HY000; Message: Unable to calculate centroid because geometry is empty in function %s.
    case ER_BOOST_GEOMETRY_OVERLAY_INVALID_INPUT_EXCEPTION = 3040; // SQLSTATE: HY000; Message: Geometry overlay calculation error: geometry data is invalid in function %s.
    case ER_BOOST_GEOMETRY_TURN_INFO_EXCEPTION = 3041; // SQLSTATE: HY000; Message: Geometry turn info calculation error: geometry data is invalid in function %s.
    case ER_BOOST_GEOMETRY_SELF_INTERSECTION_POINT_EXCEPTION = 3042; // SQLSTATE: HY000; Message: Analysis procedures of intersection points interrupted unexpectedly in function %s.
    case ER_BOOST_GEOMETRY_UNKNOWN_EXCEPTION = 3043; // SQLSTATE: HY000; Message: Unknown exception thrown in function %s.
    case ER_STD_BAD_ALLOC_ERROR = 3044; // SQLSTATE: HY000; Message: Memory allocation error: %s in function %s.
    case ER_STD_DOMAIN_ERROR = 3045; // SQLSTATE: HY000; Message: Domain error: %s in function %s.
    case ER_STD_LENGTH_ERROR = 3046; // SQLSTATE: HY000; Message: Length error: %s in function %s.
    case ER_STD_INVALID_ARGUMENT = 3047; // SQLSTATE: HY000; Message: Invalid argument error: %s in function %s.
    case ER_STD_OUT_OF_RANGE_ERROR = 3048; // SQLSTATE: HY000; Message: Out of range error: %s in function %s.
    case ER_STD_OVERFLOW_ERROR = 3049; // SQLSTATE: HY000; Message: Overflow error: %s in function %s.
    case ER_STD_RANGE_ERROR = 3050; // SQLSTATE: HY000; Message: Range error: %s in function %s.
    case ER_STD_UNDERFLOW_ERROR = 3051; // SQLSTATE: HY000; Message: Underflow error: %s in function %s.
    case ER_STD_LOGIC_ERROR = 3052; // SQLSTATE: HY000; Message: Logic error: %s in function %s.
    case ER_STD_RUNTIME_ERROR = 3053; // SQLSTATE: HY000; Message: Runtime error: %s in function %s.
    case ER_STD_UNKNOWN_EXCEPTION = 3054; // SQLSTATE: HY000; Message: Unknown exception: %s in function %s.
    case ER_GIS_DATA_WRONG_ENDIANESS = 3055; // SQLSTATE: HY000; Message: Geometry byte string must be little endian.
    case ER_CHANGE_SOURCE_PASSWORD_LENGTH = 3056; // SQLSTATE: HY000; Message: The password provided for the replication user exceeds the maximum length of 32 characters
    case ER_USER_LOCK_WRONG_NAME = 3057; // SQLSTATE: 42000; Message: Incorrect user-level lock name '%s'. The name is empty, NULL, or can not be expressed in the current character-set.
    case ER_USER_LOCK_DEADLOCK = 3058; // SQLSTATE: HY000; Message: Deadlock found when trying to get user-level lock; try rolling back transaction/releasing locks and restarting lock acquisition.
    case ER_REPLACE_INACCESSIBLE_ROWS = 3059; // SQLSTATE: HY000; Message: REPLACE cannot be executed as it requires deleting rows that are not in the view
    case ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_GIS = 3060; // SQLSTATE: HY000; Message: Do not support online operation on table with GIS index
    case ER_ILLEGAL_USER_VAR = 3061; // SQLSTATE: 42000; Message: User variable name '%s' is illegal
    case ER_GTID_MODE_OFF = 3062; // SQLSTATE: HY000; Message: Cannot %s when GTID_MODE = OFF.
    case ER_INCORRECT_TYPE = 3064; // SQLSTATE: HY000; Message: Incorrect type for argument %s in function %s.
    case ER_FIELD_IN_ORDER_NOT_SELECT = 3065; // SQLSTATE: HY000; Message: Expression #%u of ORDER BY clause is not in SELECT list, references column '%s' which is not in SELECT list; this is incompatible with %s
    case ER_AGGREGATE_IN_ORDER_NOT_SELECT = 3066; // SQLSTATE: HY000; Message: Expression #%u of ORDER BY clause is not in SELECT list, contains aggregate function; this is incompatible with %s
    case ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN = 3067; // SQLSTATE: HY000; Message: Supplied filter list contains a value which is not in the required format 'db_pattern.table_pattern'
    case ER_NET_OK_PACKET_TOO_LARGE = 3068; // SQLSTATE: 08S01; Message: OK packet too large
    case ER_INVALID_JSON_DATA = 3069; // SQLSTATE: HY000; Message: Invalid JSON data provided to function %s: %s
    case ER_INVALID_GEOJSON_MISSING_MEMBER = 3070; // SQLSTATE: HY000; Message: Invalid GeoJSON data provided to function %s: Missing required member '%s'
    case ER_INVALID_GEOJSON_WRONG_TYPE = 3071; // SQLSTATE: HY000; Message: Invalid GeoJSON data provided to function %s: Member '%s' must be of type '%s'
    case ER_INVALID_GEOJSON_UNSPECIFIED = 3072; // SQLSTATE: HY000; Message: Invalid GeoJSON data provided to function %s
    case ER_DIMENSION_UNSUPPORTED = 3073; // SQLSTATE: HY000; Message: Unsupported number of coordinate dimensions in function %s: Found %u, expected %u
    case ER_REPLICA_CHANNEL_DOES_NOT_EXIST = 3074; // SQLSTATE: HY000; Message: Replica channel '%s' does not exist.
    case ER_REPLICA_CHANNEL_NAME_INVALID_OR_TOO_LONG = 3076; // SQLSTATE: HY000; Message: Couldn't create channel: Channel name is either invalid or too long.
    case ER_REPLICA_NEW_CHANNEL_WRONG_REPOSITORY = 3077; // SQLSTATE: HY000; Message: To have multiple channels, repository cannot be of type FILE; Please check the repository configuration and convert them to TABLE.
    case ER_REPLICA_MULTIPLE_CHANNELS_CMD = 3079; // SQLSTATE: HY000; Message: Multiple channels exist on the replica. Please provide channel name as an argument.
    case ER_REPLICA_MAX_CHANNELS_EXCEEDED = 3080; // SQLSTATE: HY000; Message: Maximum number of replication channels allowed exceeded.
    case ER_REPLICA_CHANNEL_MUST_STOP = 3081; // SQLSTATE: HY000; Message: This operation cannot be performed with running replication threads; run STOP REPLICA FOR CHANNEL '%s' first
    case ER_REPLICA_CHANNEL_NOT_RUNNING = 3082; // SQLSTATE: HY000; Message: This operation requires running replication threads; configure replica and run START REPLICA FOR CHANNEL '%s'
    case ER_REPLICA_CHANNEL_WAS_RUNNING = 3083; // SQLSTATE: HY000; Message: Replication thread(s) for channel '%s' are already runnning.
    case ER_REPLICA_CHANNEL_WAS_NOT_RUNNING = 3084; // SQLSTATE: HY000; Message: Replication thread(s) for channel '%s' are already stopped.
    case ER_REPLICA_CHANNEL_SQL_THREAD_MUST_STOP = 3085; // SQLSTATE: HY000; Message: This operation cannot be performed with a running replica sql thread; run STOP REPLICA SQL_THREAD FOR CHANNEL '%s' first.
    case ER_REPLICA_CHANNEL_SQL_SKIP_COUNTER = 3086; // SQLSTATE: HY000; Message: When sql_replica_skip_counter > 0, it is not allowed to start more than one SQL thread by using 'START REPLICA [SQL_THREAD]'. Value of sql_replica_skip_counter can only be used by one SQL thread at a time. Please use 'START REPLICA [SQL_THREAD] FOR CHANNEL' to start the SQL thread which will use the value of sql_replica_skip_counter.
    case ER_WRONG_FIELD_WITH_GROUP_V2 = 3087; // SQLSTATE: HY000; Message: Expression #%u of %s is not in GROUP BY clause and contains nonaggregated column '%s' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
    case ER_MIX_OF_GROUP_FUNC_AND_FIELDS_V2 = 3088; // SQLSTATE: HY000; Message: In aggregated query without GROUP BY, expression #%u of %s contains nonaggregated column '%s'; this is incompatible with sql_mode=only_full_group_by
    case ER_WARN_DEPRECATED_SYSVAR_UPDATE = 3089; // SQLSTATE: HY000; Message: Updating '%s' is deprecated. It will be made read-only in a future release.
    case ER_WARN_DEPRECATED_SQLMODE = 3090; // SQLSTATE: HY000; Message: Changing sql mode '%s' is deprecated. It will be removed in a future release.
    case ER_CANNOT_LOG_PARTIAL_DROP_DATABASE_WITH_GTID = 3091; // SQLSTATE: HY000; Message: DROP DATABASE failed; some tables may have been dropped but the database directory remains. The GTID has not been added to GTID_EXECUTED and the statement was not written to the binary log. Fix this as follows: (1) remove all files from the database directory %s; (2) SET GTID_NEXT='%s'; (3) DROP DATABASE `%s`.
    case ER_GROUP_REPLICATION_CONFIGURATION = 3092; // SQLSTATE: HY000; Message: The server is not configured properly to be an active member of the group. Please see more details on error log.
    case ER_GROUP_REPLICATION_RUNNING = 3093; // SQLSTATE: HY000; Message: The START GROUP_REPLICATION command failed since the group is already running.
    case ER_GROUP_REPLICATION_APPLIER_INIT_ERROR = 3094; // SQLSTATE: HY000; Message: The START GROUP_REPLICATION command failed as the applier module failed to start.
    case ER_GROUP_REPLICATION_STOP_APPLIER_THREAD_TIMEOUT = 3095; // SQLSTATE: HY000; Message: The STOP GROUP_REPLICATION command execution is incomplete: The applier thread got the stop signal while it was busy. The applier thread will stop once the current task is complete.
    case ER_GROUP_REPLICATION_COMMUNICATION_LAYER_SESSION_ERROR = 3096; // SQLSTATE: HY000; Message: The START GROUP_REPLICATION command failed as there was an error when initializing the group communication layer.
    case ER_GROUP_REPLICATION_COMMUNICATION_LAYER_JOIN_ERROR = 3097; // SQLSTATE: HY000; Message: The START GROUP_REPLICATION command failed as there was an error when joining the communication group.
    case ER_BEFORE_DML_VALIDATION_ERROR = 3098; // SQLSTATE: HY000; Message: The table does not comply with the requirements by an external plugin.
    case ER_PREVENTS_VARIABLE_WITHOUT_RBR = 3099; // SQLSTATE: HY000; Message: Cannot change the value of variable %s without binary log format as ROW.
    case ER_RUN_HOOK_ERROR = 3100; // SQLSTATE: HY000; Message: Error on observer while running replication hook '%s'.
    case ER_TRANSACTION_ROLLBACK_DURING_COMMIT = 3101; // SQLSTATE: 40000; Message: Plugin instructed the server to rollback the current transaction.
    case ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED = 3102; // SQLSTATE: HY000; Message: Expression of generated column '%s' contains a disallowed function.
    case ER_UNSUPPORTED_ALTER_INPLACE_ON_VIRTUAL_COLUMN = 3103; // SQLSTATE: HY000; Message: INPLACE ADD or DROP of virtual columns cannot be combined with other ALTER TABLE actions
    case ER_WRONG_FK_OPTION_FOR_GENERATED_COLUMN = 3104; // SQLSTATE: HY000; Message: Cannot define foreign key with %s clause on a generated column.
    case ER_NON_DEFAULT_VALUE_FOR_GENERATED_COLUMN = 3105; // SQLSTATE: HY000; Message: The value specified for generated column '%s' in table '%s' is not allowed.
    case ER_UNSUPPORTED_ACTION_ON_GENERATED_COLUMN = 3106; // SQLSTATE: HY000; Message: '%s' is not supported for generated columns.
    case ER_GENERATED_COLUMN_NON_PRIOR = 3107; // SQLSTATE: HY000; Message: Generated column can refer only to generated columns defined prior to it.
    case ER_DEPENDENT_BY_GENERATED_COLUMN = 3108; // SQLSTATE: HY000; Message: Column '%s' has a generated column dependency.
    case ER_GENERATED_COLUMN_REF_AUTO_INC = 3109; // SQLSTATE: HY000; Message: Generated column '%s' cannot refer to auto-increment column.
    case ER_FEATURE_NOT_AVAILABLE = 3110; // SQLSTATE: HY000; Message: The '%s' feature is not available; you need to remove '%s' or use MySQL built with '%s'
    case ER_CANT_SET_GTID_MODE = 3111; // SQLSTATE: HY000; Message: SET @@GLOBAL.GTID_MODE = %s is not allowed because %s.
    case ER_CANT_USE_AUTO_POSITION_WITH_GTID_MODE_OFF = 3112; // SQLSTATE: HY000; Message: The replication receiver thread%s cannot start in AUTO_POSITION mode: this server uses @@GLOBAL.GTID_MODE = OFF.
    case ER_CANT_ENFORCE_GTID_CONSISTENCY_WITH_ONGOING_GTID_VIOLATING_TX = 3116; // SQLSTATE: HY000; Message: Cannot set ENFORCE_GTID_CONSISTENCY = ON because there are ongoing transactions that violate GTID consistency.
    case ER_ENFORCE_GTID_CONSISTENCY_WARN_WITH_ONGOING_GTID_VIOLATING_TX = 3117; // SQLSTATE: HY000; Message: There are ongoing transactions that violate GTID consistency.
    case ER_ACCOUNT_HAS_BEEN_LOCKED = 3118; // SQLSTATE: HY000; Message: Access denied for user '%s'@'%s'. Account is locked.
    case ER_WRONG_TABLESPACE_NAME = 3119; // SQLSTATE: 42000; Message: Incorrect tablespace name `%s`
    case ER_TABLESPACE_IS_NOT_EMPTY = 3120; // SQLSTATE: HY000; Message: Tablespace `%s` is not empty.
    case ER_WRONG_FILE_NAME = 3121; // SQLSTATE: HY000; Message: Incorrect File Name '%s'.
    case ER_BOOST_GEOMETRY_INCONSISTENT_TURNS_EXCEPTION = 3122; // SQLSTATE: HY000; Message: Inconsistent intersection points.
    case ER_WARN_OPTIMIZER_HINT_SYNTAX_ERROR = 3123; // SQLSTATE: HY000; Message: Optimizer hint syntax error
    case ER_WARN_BAD_MAX_EXECUTION_TIME = 3124; // SQLSTATE: HY000; Message: Unsupported MAX_EXECUTION_TIME
    case ER_WARN_UNSUPPORTED_MAX_EXECUTION_TIME = 3125; // SQLSTATE: HY000; Message: MAX_EXECUTION_TIME hint is supported by top-level standalone SELECT statements only
    case ER_WARN_CONFLICTING_HINT = 3126; // SQLSTATE: HY000; Message: Hint %s is ignored as conflicting/duplicated
    case ER_WARN_UNKNOWN_QB_NAME = 3127; // SQLSTATE: HY000; Message: Query block name %s is not found for %s hint
    case ER_UNRESOLVED_HINT_NAME = 3128; // SQLSTATE: HY000; Message: Unresolved name %s for %s hint
    case ER_WARN_ON_MODIFYING_GTID_EXECUTED_TABLE = 3129; // SQLSTATE: HY000; Message: Please do not modify the %s table. This is a mysql internal system table to store GTIDs for committed transactions. Modifying it can lead to an inconsistent GTID state.
    case ER_PLUGGABLE_PROTOCOL_COMMAND_NOT_SUPPORTED = 3130; // SQLSTATE: HY000; Message: Command not supported by pluggable protocols
    case ER_LOCKING_SERVICE_WRONG_NAME = 3131; // SQLSTATE: 42000; Message: Incorrect locking service lock name '%s'.
    case ER_LOCKING_SERVICE_DEADLOCK = 3132; // SQLSTATE: HY000; Message: Deadlock found when trying to get locking service lock; try releasing locks and restarting lock acquisition.
    case ER_LOCKING_SERVICE_TIMEOUT = 3133; // SQLSTATE: HY000; Message: Service lock wait timeout exceeded.
    case ER_GIS_MAX_POINTS_IN_GEOMETRY_OVERFLOWED = 3134; // SQLSTATE: HY000; Message: Parameter %s exceeds the maximum number of points in a geometry (%lu) in function %s.
    case ER_SQL_MODE_MERGED = 3135; // SQLSTATE: HY000; Message: 'NO_ZERO_DATE', 'NO_ZERO_IN_DATE' and 'ERROR_FOR_DIVISION_BY_ZERO' sql modes should be used with strict mode. They will be merged with strict mode in a future release.
    case ER_VTOKEN_PLUGIN_TOKEN_MISMATCH = 3136; // SQLSTATE: HY000; Message: Version token mismatch for %.*s. Correct value %.*s
    case ER_VTOKEN_PLUGIN_TOKEN_NOT_FOUND = 3137; // SQLSTATE: HY000; Message: Version token %.*s not found.
    case ER_CANT_SET_VARIABLE_WHEN_OWNING_GTID = 3138; // SQLSTATE: HY000; Message: Variable %s cannot be changed by a client that owns a GTID. The client owns %s. Ownership is released on COMMIT or ROLLBACK.
    case ER_REPLICA_CHANNEL_OPERATION_NOT_ALLOWED = 3139; // SQLSTATE: HY000; Message: %s cannot be performed on channel '%s'.
    case ER_INVALID_JSON_TEXT = 3140; // SQLSTATE: 22032; Message: Invalid JSON text: "%s" at position %u in value for column '%s'.
    case ER_INVALID_JSON_TEXT_IN_PARAM = 3141; // SQLSTATE: 22032; Message: Invalid JSON text in argument %u to function %s: "%s" at position %u.%s
    case ER_INVALID_JSON_BINARY_DATA = 3142; // SQLSTATE: HY000; Message: The JSON binary value contains invalid data.
    case ER_INVALID_JSON_PATH = 3143; // SQLSTATE: 42000; Message: Invalid JSON path expression. The error is around character position %u.%s
    case ER_INVALID_JSON_CHARSET = 3144; // SQLSTATE: 22032; Message: Cannot create a JSON value from a string with CHARACTER SET '%s'.
    case ER_INVALID_JSON_CHARSET_IN_FUNCTION = 3145; // SQLSTATE: 22032; Message: Invalid JSON character data provided to function %s: '%s'; utf8 is required.
    case ER_INVALID_TYPE_FOR_JSON = 3146; // SQLSTATE: 22032; Message: Invalid data type for JSON data in argument %u to function %s; a JSON string or JSON type is required.
    case ER_INVALID_CAST_TO_JSON = 3147; // SQLSTATE: 22032; Message: Cannot CAST value to JSON.
    case ER_INVALID_JSON_PATH_CHARSET = 3148; // SQLSTATE: 42000; Message: A path expression must be encoded in the utf8 character set. The path expression '%s' is encoded in character set '%s'.
    case ER_INVALID_JSON_PATH_WILDCARD = 3149; // SQLSTATE: 42000; Message: In this situation, path expressions may not contain the * and ** tokens or an array range.
    case ER_JSON_VALUE_TOO_BIG = 3150; // SQLSTATE: 22032; Message: The JSON value is too big to be stored in a JSON column.
    case ER_JSON_KEY_TOO_BIG = 3151; // SQLSTATE: 22032; Message: The JSON object contains a key name that is too long.
    case ER_JSON_USED_AS_KEY = 3152; // SQLSTATE: 42000; Message: JSON column '%s' supports indexing only via generated columns on a specified JSON path.
    case ER_JSON_VACUOUS_PATH = 3153; // SQLSTATE: 42000; Message: The path expression '$' is not allowed in this context.
    case ER_JSON_BAD_ONE_OR_ALL_ARG = 3154; // SQLSTATE: 42000; Message: The oneOrAll argument to %s may take these values: 'one' or 'all'.
    case ER_NUMERIC_JSON_VALUE_OUT_OF_RANGE = 3155; // SQLSTATE: 22003; Message: Out of range JSON value for CAST to %s%s from column %s at row %ld
    case ER_INVALID_JSON_VALUE_FOR_CAST = 3156; // SQLSTATE: 22018; Message: Invalid JSON value for CAST to %s%s from column %s at row %ld
    case ER_JSON_DOCUMENT_TOO_DEEP = 3157; // SQLSTATE: 22032; Message: The JSON document exceeds the maximum depth.
    case ER_JSON_DOCUMENT_NULL_KEY = 3158; // SQLSTATE: 22032; Message: JSON documents may not contain NULL member names.
    case ER_SECURE_TRANSPORT_REQUIRED = 3159; // SQLSTATE: HY000; Message: Connections using insecure transport are prohibited while --require_secure_transport=ON.
    case ER_NO_SECURE_TRANSPORTS_CONFIGURED = 3160; // SQLSTATE: HY000; Message: No secure transports (SSL or Shared Memory) are configured, unable to set --require_secure_transport=ON.
    case ER_DISABLED_STORAGE_ENGINE = 3161; // SQLSTATE: HY000; Message: Storage engine %s is disabled (Table creation is disallowed).
    case ER_USER_DOES_NOT_EXIST = 3162; // SQLSTATE: HY000; Message: Authorization ID %s does not exist.
    case ER_USER_ALREADY_EXISTS = 3163; // SQLSTATE: HY000; Message: Authorization ID %s already exists.
    case ER_AUDIT_API_ABORT = 3164; // SQLSTATE: HY000; Message: Aborted by Audit API ('%s';%d).
    case ER_INVALID_JSON_PATH_ARRAY_CELL = 3165; // SQLSTATE: 42000; Message: A path expression is not a path to a cell in an array.
    case ER_BUFPOOL_RESIZE_INPROGRESS = 3166; // SQLSTATE: HY000; Message: Another buffer pool resize is already in progress.
    case ER_FEATURE_DISABLED_SEE_DOC = 3167; // SQLSTATE: HY000; Message: The '%s' feature is disabled; see the documentation for '%s'
    case ER_SERVER_ISNT_AVAILABLE = 3168; // SQLSTATE: HY000; Message: Server isn't available
    case ER_SESSION_WAS_KILLED = 3169; // SQLSTATE: HY000; Message: Session was killed
    case ER_CAPACITY_EXCEEDED = 3170; // SQLSTATE: HY000; Message: Memory capacity of %llu bytes for '%s' exceeded. %s
    case ER_CAPACITY_EXCEEDED_IN_RANGE_OPTIMIZER = 3171; // SQLSTATE: HY000; Message: Range optimization was not done for this query.
    case ER_CANT_WAIT_FOR_EXECUTED_GTID_SET_WHILE_OWNING_A_GTID = 3173; // SQLSTATE: HY000; Message: The client holds ownership of the GTID %s. Therefore, WAIT_FOR_EXECUTED_GTID_SET cannot wait for this GTID.
    case ER_CANNOT_ADD_FOREIGN_BASE_COL_VIRTUAL = 3174; // SQLSTATE: HY000; Message: Cannot add foreign key on the base column of indexed virtual column.
    case ER_CANNOT_CREATE_VIRTUAL_INDEX_CONSTRAINT = 3175; // SQLSTATE: HY000; Message: Cannot create index on virtual column whose base column has foreign constraint.
    case ER_ERROR_ON_MODIFYING_GTID_EXECUTED_TABLE = 3176; // SQLSTATE: HY000; Message: Please do not modify the %s table with an XA transaction. This is an internal system table used to store GTIDs for committed transactions. Although modifying it can lead to an inconsistent GTID state, if necessary you can modify it with a non-XA transaction.
    case ER_LOCK_REFUSED_BY_ENGINE = 3177; // SQLSTATE: HY000; Message: Lock acquisition refused by storage engine.
    case ER_UNSUPPORTED_ALTER_ONLINE_ON_VIRTUAL_COLUMN = 3178; // SQLSTATE: HY000; Message: ADD COLUMN col...VIRTUAL, ADD INDEX(col)
    case ER_MASTER_KEY_ROTATION_NOT_SUPPORTED_BY_SE = 3179; // SQLSTATE: HY000; Message: Master key rotation is not supported by storage engine.
    case ER_MASTER_KEY_ROTATION_BINLOG_FAILED = 3181; // SQLSTATE: HY000; Message: Write to binlog failed. However, master key rotation has been completed successfully.
    case ER_MASTER_KEY_ROTATION_SE_UNAVAILABLE = 3182; // SQLSTATE: HY000; Message: Storage engine is not available.
    case ER_TABLESPACE_CANNOT_ENCRYPT = 3183; // SQLSTATE: HY000; Message: This tablespace can't be encrypted.
    case ER_INVALID_ENCRYPTION_OPTION = 3184; // SQLSTATE: HY000; Message: Invalid encryption option.
    case ER_CANNOT_FIND_KEY_IN_KEYRING = 3185; // SQLSTATE: HY000; Message: Can't find master key from keyring, please check in the server log if a keyring is loaded and initialized successfully.
    case ER_CAPACITY_EXCEEDED_IN_PARSER = 3186; // SQLSTATE: HY000; Message: Parser bailed out for this query.
    case ER_UNSUPPORTED_ALTER_ENCRYPTION_INPLACE = 3187; // SQLSTATE: HY000; Message: Cannot alter encryption attribute by inplace algorithm.
    case ER_KEYRING_UDF_KEYRING_SERVICE_ERROR = 3188; // SQLSTATE: HY000; Message: Function '%s' failed because underlying keyring service returned an error. Please check if a keyring is installed and that provided arguments are valid for the keyring you are using.
    case ER_USER_COLUMN_OLD_LENGTH = 3189; // SQLSTATE: HY000; Message: It seems that your db schema is old. The %s column is 77 characters long and should be 93 characters long. Please perform the MySQL upgrade procedure.
    case ER_CANT_RESET_SOURCE = 3190; // SQLSTATE: HY000; Message: RESET BINARY LOGS AND GTIDS is not allowed because %s.
    case ER_GROUP_REPLICATION_MAX_GROUP_SIZE = 3191; // SQLSTATE: HY000; Message: The START GROUP_REPLICATION command failed since the group already has 9 members.
    case ER_CANNOT_ADD_FOREIGN_BASE_COL_STORED = 3192; // SQLSTATE: HY000; Message: Cannot add foreign key on the base column of stored column.
    case ER_TABLE_REFERENCED = 3193; // SQLSTATE: HY000; Message: Cannot complete the operation because table is referenced by another connection.
    case ER_XA_RETRY = 3197; // SQLSTATE: HY000; Message: The resource manager is not able to commit the transaction branch at this time. Please retry later.
    case ER_KEYRING_AWS_UDF_AWS_KMS_ERROR = 3198; // SQLSTATE: HY000; Message: Function %s failed due to: %s.
    case ER_BINLOG_UNSAFE_XA = 3199; // SQLSTATE: HY000; Message: Statement is unsafe because it is being used inside a XA transaction. Concurrent XA transactions may deadlock on replicas when replicated using statements.
    case ER_UDF_ERROR = 3200; // SQLSTATE: HY000; Message: %s UDF failed; %s
    case ER_KEYRING_MIGRATION_FAILURE = 3201; // SQLSTATE: HY000; Message: Can not perform keyring migration : %s
    case ER_KEYRING_ACCESS_DENIED_ERROR = 3202; // SQLSTATE: 42000; Message: Access denied; you need %s privileges for this operation
    case ER_KEYRING_MIGRATION_STATUS = 3203; // SQLSTATE: HY000; Message: Keyring migration %s.
    case ER_AUDIT_LOG_UDF_READ_INVALID_MAX_ARRAY_LENGTH_ARG_VALUE = 3218; // SQLSTATE: HY000; Message: Invalid "max_array_length" argument value.
    case ER_WRITE_SET_EXCEEDS_LIMIT = 3231; // SQLSTATE: HY000; Message: The size of writeset data for the current transaction exceeds a limit imposed by an external component. If using Group Replication check 'group_replication_transaction_size_limit'.
    case ER_AES_INVALID_KDF_NAME = 3235; // SQLSTATE: HY000; Message: KDF method name is not valid. Please use hkdf or pbkdf2_hmac method name
    case ER_AES_INVALID_KDF_ITERATIONS = 3236; // SQLSTATE: HY000; Message: For KDF method pbkdf2_hmac iterations value less than 1000 or more than 65535 is not allowed due to security reasons. Please provide iterations >= 1000 and iterations < 65535
    case WARN_AES_KEY_SIZE = 3237; // SQLSTATE: HY000; Message: AES key size should be %d bytes length or secure KDF methods hkdf or pbkdf2_hmac should be used, please provide exact AES key size or use KDF methods for better security.
    case ER_AES_INVALID_KDF_OPTION_SIZE = 3238; // SQLSTATE: HY000; Message: KDF option size is invalid, please provide valid size < %d bytes and not NULL
    case ER_UNSUPPORT_COMPRESSED_TEMPORARY_TABLE = 3500; // SQLSTATE: HY000; Message: CREATE TEMPORARY TABLE is not allowed with ROW_FORMAT=COMPRESSED or KEY_BLOCK_SIZE.
    case ER_ACL_OPERATION_FAILED = 3501; // SQLSTATE: HY000; Message: The ACL operation failed due to the following error from SE: errcode %d - %s
    case ER_UNSUPPORTED_INDEX_ALGORITHM = 3502; // SQLSTATE: HY000; Message: This storage engine does not support the %s index algorithm, storage engine default was used instead.
    case ER_NO_SUCH_DB = 3503; // SQLSTATE: 42Y07; Message: Database '%s' doesn't exist
    case ER_TOO_BIG_ENUM = 3504; // SQLSTATE: HY000; Message: Too many enumeration values for column %s.
    case ER_TOO_LONG_SET_ENUM_VALUE = 3505; // SQLSTATE: HY000; Message: Too long enumeration/set value for column %s.
    case ER_INVALID_DD_OBJECT = 3506; // SQLSTATE: HY000; Message: %s dictionary object is invalid. (%s)
    case ER_UPDATING_DD_TABLE = 3507; // SQLSTATE: HY000; Message: Failed to update %s dictionary object.
    case ER_INVALID_DD_OBJECT_ID = 3508; // SQLSTATE: HY000; Message: Dictionary object id (%lu) does not exist.
    case ER_INVALID_DD_OBJECT_NAME = 3509; // SQLSTATE: HY000; Message: Dictionary object name '%s' is invalid. (%s)
    case ER_TABLESPACE_MISSING_WITH_NAME = 3510; // SQLSTATE: HY000; Message: Tablespace %s doesn't exist.
    case ER_TOO_LONG_ROUTINE_COMMENT = 3511; // SQLSTATE: HY000; Message: Comment for routine '%s' is too long (max = %lu)
    case ER_SP_LOAD_FAILED = 3512; // SQLSTATE: HY000; Message: Failed to load routine '%s'.
    case ER_INVALID_BITWISE_OPERANDS_SIZE = 3513; // SQLSTATE: HY000; Message: Binary operands of bitwise operators must be of equal length
    case ER_INVALID_BITWISE_AGGREGATE_OPERANDS_SIZE = 3514; // SQLSTATE: HY000; Message: Aggregate bitwise functions cannot accept arguments longer than 511 bytes; consider using the SUBSTRING() function
    case ER_WARN_UNSUPPORTED_HINT = 3515; // SQLSTATE: HY000; Message: Hints aren't supported in %s
    case ER_UNEXPECTED_GEOMETRY_TYPE = 3516; // SQLSTATE: 22S01; Message: %s value is a geometry of unexpected type %s in %s.
    case ER_SRS_PARSE_ERROR = 3517; // SQLSTATE: SR002; Message: Can't parse the spatial reference system definition of SRID %u.
    case ER_SRS_PROJ_PARAMETER_MISSING = 3518; // SQLSTATE: SR003; Message: The spatial reference system definition for SRID %u does not specify the mandatory %s (EPSG %u) projection parameter.
    case ER_WARN_SRS_NOT_FOUND = 3519; // SQLSTATE: 01000; Message: There's no spatial reference system with SRID %u.
    case ER_SRS_NOT_CARTESIAN = 3520; // SQLSTATE: 22S00; Message: Function %s is only defined for Cartesian spatial reference systems, but one of its arguments is in SRID %u, which is not Cartesian.
    case ER_SRS_NOT_CARTESIAN_UNDEFINED = 3521; // SQLSTATE: SR001; Message: Function %s is only defined for Cartesian spatial reference systems, but one of its arguments is in SRID %u, which has not been defined.
    case ER_PK_INDEX_CANT_BE_INVISIBLE = 3522; // SQLSTATE: HY000; Message: A primary key index cannot be invisible
    case ER_UNKNOWN_AUTHID = 3523; // SQLSTATE: HY000; Message: Unknown authorization ID `%s`@`%s`
    case ER_FAILED_ROLE_GRANT = 3524; // SQLSTATE: HY000; Message: Failed to grant %s` to %s
    case ER_OPEN_ROLE_TABLES = 3525; // SQLSTATE: HY000; Message: Failed to open the security system tables
    case ER_FAILED_DEFAULT_ROLES = 3526; // SQLSTATE: HY000; Message: Failed to set default roles
    case ER_COMPONENTS_NO_SCHEME = 3527; // SQLSTATE: HY000; Message: Cannot find schema in specified URN: '%s'.
    case ER_COMPONENTS_NO_SCHEME_SERVICE = 3528; // SQLSTATE: HY000; Message: Cannot acquire scheme load service implementation for schema '%s' in specified URN: '%s'.
    case ER_COMPONENTS_CANT_LOAD = 3529; // SQLSTATE: HY000; Message: Cannot load component from specified URN: '%s'.
    case ER_ROLE_NOT_GRANTED = 3530; // SQLSTATE: HY000; Message: `%s`@`%s` is not granted to `%s`@`%s`
    case ER_FAILED_REVOKE_ROLE = 3531; // SQLSTATE: HY000; Message: Could not revoke role from `%s`@`%s`
    case ER_RENAME_ROLE = 3532; // SQLSTATE: HY000; Message: Renaming of a role identifier is forbidden
    case ER_COMPONENTS_CANT_ACQUIRE_SERVICE_IMPLEMENTATION = 3533; // SQLSTATE: HY000; Message: Cannot acquire specified service implementation: '%s'.
    case ER_COMPONENTS_CANT_SATISFY_DEPENDENCY = 3534; // SQLSTATE: HY000; Message: Cannot satisfy dependency for service '%s' required by component '%s'.
    case ER_COMPONENTS_LOAD_CANT_REGISTER_SERVICE_IMPLEMENTATION = 3535; // SQLSTATE: HY000; Message: Cannot register service implementation '%s' provided by component '%s'.
    case ER_COMPONENTS_LOAD_CANT_INITIALIZE = 3536; // SQLSTATE: HY000; Message: Initialization method provided by component '%s' failed.
    case ER_COMPONENTS_UNLOAD_NOT_LOADED = 3537; // SQLSTATE: HY000; Message: Component specified by URN '%s' to unload has not been loaded before.
    case ER_COMPONENTS_UNLOAD_CANT_DEINITIALIZE = 3538; // SQLSTATE: HY000; Message: De-initialization method provided by component '%s' failed.
    case ER_COMPONENTS_CANT_RELEASE_SERVICE = 3539; // SQLSTATE: HY000; Message: Release of previously acquired service implementation failed.
    case ER_COMPONENTS_UNLOAD_CANT_UNREGISTER_SERVICE = 3540; // SQLSTATE: HY000; Message: Unregistration of service implementation '%s' provided by component '%s' failed during unloading of the component.
    case ER_COMPONENTS_CANT_UNLOAD = 3541; // SQLSTATE: HY000; Message: Cannot unload component from specified URN: '%s'.
    case ER_WARN_UNLOAD_THE_NOT_PERSISTED = 3542; // SQLSTATE: HY000; Message: The Persistent Dynamic Loader was used to unload a component '%s', but it was not used to load that component before.
    case ER_COMPONENT_TABLE_INCORRECT = 3543; // SQLSTATE: HY000; Message: The mysql.component table is missing or has an incorrect definition.
    case ER_COMPONENT_MANIPULATE_ROW_FAILED = 3544; // SQLSTATE: HY000; Message: Failed to manipulate component '%s' persistence data. Error code %d from storage engine.
    case ER_COMPONENTS_UNLOAD_DUPLICATE_IN_GROUP = 3545; // SQLSTATE: HY000; Message: The component with specified URN: '%s' was specified in group more than once.
    case ER_CANT_SET_GTID_PURGED_DUE_SETS_CONSTRAINTS = 3546; // SQLSTATE: HY000; Message: @@GLOBAL.GTID_PURGED cannot be changed: %s
    case ER_CANNOT_LOCK_USER_MANAGEMENT_CACHES = 3547; // SQLSTATE: HY000; Message: Can not lock user management caches for processing.
    case ER_SRS_NOT_FOUND = 3548; // SQLSTATE: SR001; Message: There's no spatial reference system with SRID %u.
    case ER_VARIABLE_NOT_PERSISTED = 3549; // SQLSTATE: HY000; Message: Variables cannot be persisted. Please retry.
    case ER_IS_QUERY_INVALID_CLAUSE = 3550; // SQLSTATE: HY000; Message: Information schema queries do not support the '%s' clause.
    case ER_UNABLE_TO_STORE_STATISTICS = 3551; // SQLSTATE: HY000; Message: Unable to store dynamic %s statistics into data dictionary.
    case ER_NO_SYSTEM_SCHEMA_ACCESS = 3552; // SQLSTATE: HY000; Message: Access to system schema '%s' is rejected.
    case ER_NO_SYSTEM_TABLESPACE_ACCESS = 3553; // SQLSTATE: HY000; Message: Access to system tablespace '%s' is rejected.
    case ER_NO_SYSTEM_TABLE_ACCESS = 3554; // SQLSTATE: HY000; Message: Access to %s '%s.%s' is rejected.
    case ER_NO_SYSTEM_TABLE_ACCESS_FOR_DICTIONARY_TABLE = 3555; // SQLSTATE: HY000; Message: data dictionary table
    case ER_NO_SYSTEM_TABLE_ACCESS_FOR_SYSTEM_TABLE = 3556; // SQLSTATE: HY000; Message: system table
    case ER_NO_SYSTEM_TABLE_ACCESS_FOR_TABLE = 3557; // SQLSTATE: HY000; Message: table
    case ER_INVALID_OPTION_KEY = 3558; // SQLSTATE: 22023; Message: Invalid option key '%s' in function %s.
    case ER_INVALID_OPTION_VALUE = 3559; // SQLSTATE: 22023; Message: Invalid value '%s' for option '%s' in function '%s'.
    case ER_INVALID_OPTION_KEY_VALUE_PAIR = 3560; // SQLSTATE: 22023; Message: The string '%s' is not a valid key %c value pair in function %s.
    case ER_INVALID_OPTION_START_CHARACTER = 3561; // SQLSTATE: 22023; Message: The options argument in function %s starts with the invalid character '%c'.
    case ER_INVALID_OPTION_END_CHARACTER = 3562; // SQLSTATE: 22023; Message: The options argument in function %s ends with the invalid character '%c'.
    case ER_INVALID_OPTION_CHARACTERS = 3563; // SQLSTATE: 22023; Message: The options argument in function %s contains the invalid character sequence '%s'.
    case ER_DUPLICATE_OPTION_KEY = 3564; // SQLSTATE: 22023; Message: Duplicate option key '%s' in funtion '%s'.
    case ER_WARN_SRS_NOT_FOUND_AXIS_ORDER = 3565; // SQLSTATE: 01000; Message: There's no spatial reference system with SRID %u. The axis order is unknown.
    case ER_NO_ACCESS_TO_NATIVE_FCT = 3566; // SQLSTATE: HY000; Message: Access to native function '%s' is rejected.
    case ER_RESET_SOURCE_TO_VALUE_OUT_OF_RANGE = 3567; // SQLSTATE: HY000; Message: The requested value '%llu' for the next binary log index is out of range. Please use a value between '1' and '%lu'.
    case ER_UNRESOLVED_TABLE_LOCK = 3568; // SQLSTATE: HY000; Message: Unresolved table name %s in locking clause.
    case ER_DUPLICATE_TABLE_LOCK = 3569; // SQLSTATE: HY000; Message: Table %s appears in multiple locking clauses.
    case ER_BINLOG_UNSAFE_SKIP_LOCKED = 3570; // SQLSTATE: HY000; Message: Statement is unsafe because it uses SKIP LOCKED. The set of inserted values is non-deterministic.
    case ER_BINLOG_UNSAFE_NOWAIT = 3571; // SQLSTATE: HY000; Message: Statement is unsafe because it uses NOWAIT. Whether the command will succeed or fail is not deterministic.
    case ER_LOCK_NOWAIT = 3572; // SQLSTATE: HY000; Message: Statement aborted because lock(s) could not be acquired immediately and NOWAIT is set.
    case ER_CTE_RECURSIVE_REQUIRES_UNION = 3573; // SQLSTATE: HY000; Message: Recursive Common Table Expression '%s' should contain a UNION
    case ER_CTE_RECURSIVE_REQUIRES_NONRECURSIVE_FIRST = 3574; // SQLSTATE: HY000; Message: Recursive Common Table Expression '%s' should have one or more non-recursive query blocks followed by one or more recursive ones
    case ER_CTE_RECURSIVE_FORBIDS_AGGREGATION = 3575; // SQLSTATE: HY000; Message: Recursive Common Table Expression '%s' can contain neither aggregation nor window functions in recursive query block
    case ER_CTE_RECURSIVE_FORBIDDEN_JOIN_ORDER = 3576; // SQLSTATE: HY000; Message: In recursive query block of Recursive Common Table Expression '%s', the recursive table must neither be in the right argument of a LEFT JOIN, nor be forced to be non-first with join order hints
    case ER_CTE_RECURSIVE_REQUIRES_SINGLE_REFERENCE = 3577; // SQLSTATE: HY000; Message: In recursive query block of Recursive Common Table Expression '%s', the recursive table must be referenced only once, and not in any subquery
    case ER_SWITCH_TMP_ENGINE = 3578; // SQLSTATE: HY000; Message: '%s' requires @@internal_tmp_disk_storage_engine=InnoDB
    case ER_WINDOW_NO_SUCH_WINDOW = 3579; // SQLSTATE: HY000; Message: Window name '%s' is not defined.
    case ER_WINDOW_CIRCULARITY_IN_WINDOW_GRAPH = 3580; // SQLSTATE: HY000; Message: There is a circularity in the window dependency graph.
    case ER_WINDOW_NO_CHILD_PARTITIONING = 3581; // SQLSTATE: HY000; Message: A window which depends on another cannot define partitioning.
    case ER_WINDOW_NO_INHERIT_FRAME = 3582; // SQLSTATE: HY000; Message: Window '%s' has a frame definition, so cannot be referenced by another window.
    case ER_WINDOW_NO_REDEFINE_ORDER_BY = 3583; // SQLSTATE: HY000; Message: Window '%s' cannot inherit '%s' since both contain an ORDER BY clause.
    case ER_WINDOW_FRAME_START_ILLEGAL = 3584; // SQLSTATE: HY000; Message: Window '%s': frame start cannot be UNBOUNDED FOLLOWING.
    case ER_WINDOW_FRAME_END_ILLEGAL = 3585; // SQLSTATE: HY000; Message: Window '%s': frame end cannot be UNBOUNDED PRECEDING.
    case ER_WINDOW_FRAME_ILLEGAL = 3586; // SQLSTATE: HY000; Message: Window '%s': frame start or end is negative, NULL or of non-integral type
    case ER_WINDOW_RANGE_FRAME_ORDER_TYPE = 3587; // SQLSTATE: HY000; Message: Window '%s' with RANGE N PRECEDING/FOLLOWING frame requires exactly one ORDER BY expression, of numeric or temporal type
    case ER_WINDOW_RANGE_FRAME_TEMPORAL_TYPE = 3588; // SQLSTATE: HY000; Message: Window '%s' with RANGE frame has ORDER BY expression of datetime type. Only INTERVAL bound value allowed.
    case ER_WINDOW_RANGE_FRAME_NUMERIC_TYPE = 3589; // SQLSTATE: HY000; Message: Window '%s' with RANGE frame has ORDER BY expression of numeric type, INTERVAL bound value not allowed.
    case ER_WINDOW_RANGE_BOUND_NOT_CONSTANT = 3590; // SQLSTATE: HY000; Message: Window '%s' has a non-constant frame bound.
    case ER_WINDOW_DUPLICATE_NAME = 3591; // SQLSTATE: HY000; Message: Window '%s' is defined twice.
    case ER_WINDOW_ILLEGAL_ORDER_BY = 3592; // SQLSTATE: HY000; Message: Window '%s': ORDER BY or PARTITION BY uses legacy position indication which is not supported, use expression.
    case ER_WINDOW_INVALID_WINDOW_FUNC_USE = 3593; // SQLSTATE: HY000; Message: You cannot use the window function '%s' in this context.'
    case ER_WINDOW_INVALID_WINDOW_FUNC_ALIAS_USE = 3594; // SQLSTATE: HY000; Message: You cannot use the alias '%s' of an expression containing a window function in this context.'
    case ER_WINDOW_NESTED_WINDOW_FUNC_USE_IN_WINDOW_SPEC = 3595; // SQLSTATE: HY000; Message: You cannot nest a window function in the specification of window '%s'.
    case ER_WINDOW_ROWS_INTERVAL_USE = 3596; // SQLSTATE: HY000; Message: Window '%s': INTERVAL can only be used with RANGE frames.
    case ER_WINDOW_NO_GROUP_ORDER_UNUSED = 3597; // SQLSTATE: HY000; Message: ASC or DESC with GROUP BY isn't allowed with window functions; put ASC or DESC in ORDER BY
    case ER_WINDOW_EXPLAIN_JSON = 3598; // SQLSTATE: HY000; Message: To get information about window functions use EXPLAIN FORMAT=JSON
    case ER_WINDOW_FUNCTION_IGNORES_FRAME = 3599; // SQLSTATE: HY000; Message: Window function '%s' ignores the frame clause of window '%s' and aggregates over the whole partition
    case ER_WL9236_NOW_UNUSED = 3600; // SQLSTATE: HY000; Message: Windowing requires @@internal_tmp_mem_storage_engine=TempTable.
    case ER_INVALID_NO_OF_ARGS = 3601; // SQLSTATE: HY000; Message: Too many arguments for function %s: %lu; maximum allowed is %s.
    case ER_FIELD_IN_GROUPING_NOT_GROUP_BY = 3602; // SQLSTATE: HY000; Message: Argument #%u of GROUPING function is not in GROUP BY
    case ER_TOO_LONG_TABLESPACE_COMMENT = 3603; // SQLSTATE: HY000; Message: Comment for tablespace '%s' is too long (max = %lu)
    case ER_ENGINE_CANT_DROP_TABLE = 3604; // SQLSTATE: HY000; Message: Storage engine can't drop table '%s'
    case ER_ENGINE_CANT_DROP_MISSING_TABLE = 3605; // SQLSTATE: HY000; Message: Storage engine can't drop table '%s' because it is missing. Use DROP TABLE IF EXISTS to remove it from data-dictionary.
    case ER_TABLESPACE_DUP_FILENAME = 3606; // SQLSTATE: HY000; Message: Duplicate file name for tablespace '%s'
    case ER_DB_DROP_RMDIR2 = 3607; // SQLSTATE: HY000; Message: Problem while dropping database. Can't remove database directory (%s). Please remove it manually.
    case ER_IMP_NO_FILES_MATCHED = 3608; // SQLSTATE: HY000; Message: No SDI files matched the pattern '%s'
    case ER_IMP_SCHEMA_DOES_NOT_EXIST = 3609; // SQLSTATE: HY000; Message: Schema '%s', referenced in SDI, does not exist.
    case ER_IMP_TABLE_ALREADY_EXISTS = 3610; // SQLSTATE: HY000; Message: Table '%s.%s', referenced in SDI, already exists.
    case ER_IMP_INCOMPATIBLE_MYSQLD_VERSION = 3611; // SQLSTATE: HY000; Message: Imported mysqld_version (%llu) is not compatible with current (%llu)
    case ER_IMP_INCOMPATIBLE_DD_VERSION = 3612; // SQLSTATE: HY000; Message: Imported dd version (%u) is not compatible with current (%u)
    case ER_IMP_INCOMPATIBLE_SDI_VERSION = 3613; // SQLSTATE: HY000; Message: Imported sdi version (%llu) is not compatible with current (%llu)
    case ER_WARN_INVALID_HINT = 3614; // SQLSTATE: HY000; Message: Invalid number of arguments for hint %s
    case ER_VAR_DOES_NOT_EXIST = 3615; // SQLSTATE: HY000; Message: Variable %s does not exist in persisted config file
    case ER_LONGITUDE_OUT_OF_RANGE = 3616; // SQLSTATE: 22S02; Message: Longitude %f is out of range in function %s. It must be within (%f, %f].
    case ER_LATITUDE_OUT_OF_RANGE = 3617; // SQLSTATE: 22S03; Message: Latitude %f is out of range in function %s. It must be within [%f, %f].
    case ER_NOT_IMPLEMENTED_FOR_GEOGRAPHIC_SRS = 3618; // SQLSTATE: 22S00; Message: %s(%s) has not been implemented for geographic spatial reference systems.
    case ER_ILLEGAL_PRIVILEGE_LEVEL = 3619; // SQLSTATE: HY000; Message: Illegal privilege level specified for %s
    case ER_NO_SYSTEM_VIEW_ACCESS = 3620; // SQLSTATE: HY000; Message: Access to system view INFORMATION_SCHEMA.'%s' is rejected.
    case ER_COMPONENT_FILTER_FLABBERGASTED = 3621; // SQLSTATE: HY000; Message: The log-filter component "%s" got confused at "%s" ...
    case ER_PART_EXPR_TOO_LONG = 3622; // SQLSTATE: HY000; Message: Partitioning expression is too long.
    case ER_UDF_DROP_DYNAMICALLY_REGISTERED = 3623; // SQLSTATE: HY000; Message: DROP FUNCTION can't drop a dynamically registered user defined function
    case ER_UNABLE_TO_STORE_COLUMN_STATISTICS = 3624; // SQLSTATE: HY000; Message: Unable to store column statistics for column '%s' in table '%s'.'%s'
    case ER_UNABLE_TO_UPDATE_COLUMN_STATISTICS = 3625; // SQLSTATE: HY000; Message: Unable to update column statistics for column '%s' in table '%s'.'%s'
    case ER_UNABLE_TO_DROP_COLUMN_STATISTICS = 3626; // SQLSTATE: HY000; Message: Unable to remove column statistics for column '%s' in table '%s'.'%s'
    case ER_UNABLE_TO_BUILD_HISTOGRAM = 3627; // SQLSTATE: HY000; Message: Unable to build histogram statistics for column '%s' in table '%s'.'%s'
    case ER_MANDATORY_ROLE = 3628; // SQLSTATE: HY000; Message: The role %s is a mandatory role and can't be revoked or dropped. The restriction can be lifted by excluding the role identifier from the global variable mandatory_roles.
    case ER_MISSING_TABLESPACE_FILE = 3629; // SQLSTATE: HY000; Message: Tablespace '%s' does not have a file named '%s'
    case ER_PERSIST_ONLY_ACCESS_DENIED_ERROR = 3630; // SQLSTATE: 42000; Message: Access denied; you need %s privileges for this operation
    case ER_CMD_NEED_SUPER = 3631; // SQLSTATE: HY000; Message: You need the SUPER privilege for command '%s'
    case ER_PATH_IN_DATADIR = 3632; // SQLSTATE: HY000; Message: Path is within the current data directory '%s'
    case ER_CLONE_DDL_IN_PROGRESS = 3633; // SQLSTATE: HY000; Message: Concurrent DDL is performed during clone operation. Please try again.
    case ER_CLONE_TOO_MANY_CONCURRENT_CLONES = 3634; // SQLSTATE: HY000; Message: Too many concurrent clone operations. Maximum allowed - %d.
    case ER_APPLIER_LOG_EVENT_VALIDATION_ERROR = 3635; // SQLSTATE: HY000; Message: The table in transaction %s does not comply with the requirements by an external plugin.
    case ER_CTE_MAX_RECURSION_DEPTH = 3636; // SQLSTATE: HY000; Message: Recursive query aborted after %u iterations. Try increasing @@cte_max_recursion_depth to a larger value.
    case ER_NOT_HINT_UPDATABLE_VARIABLE = 3637; // SQLSTATE: HY000; Message: Variable %s cannot be set using SET_VAR hint.
    case ER_CREDENTIALS_CONTRADICT_TO_HISTORY = 3638; // SQLSTATE: HY000; Message: Cannot use these credentials for '%.*s@%.*s' because they contradict the password history policy
    case ER_WARNING_PASSWORD_HISTORY_CLAUSES_VOID = 3639; // SQLSTATE: HY000; Message: Non-zero password history clauses ignored for user '%s'@'%s' as its authentication plugin %s does not support password history
    case ER_CLIENT_DOES_NOT_SUPPORT = 3640; // SQLSTATE: HY000; Message: The client doesn't support %s
    case ER_I_S_SKIPPED_TABLESPACE = 3641; // SQLSTATE: HY000; Message: Tablespace '%s' was skipped since its definition is being modified by concurrent DDL statement
    case ER_TABLESPACE_ENGINE_MISMATCH = 3642; // SQLSTATE: HY000; Message: Engine '%s' does not match stored engine '%s' for tablespace '%s'
    case ER_WRONG_SRID_FOR_COLUMN = 3643; // SQLSTATE: HY000; Message: The SRID of the geometry does not match the SRID of the column '%s'. The SRID of the geometry is %lu, but the SRID of the column is %lu. Consider changing the SRID of the geometry or the SRID property of the column.
    case ER_CANNOT_ALTER_SRID_DUE_TO_INDEX = 3644; // SQLSTATE: HY000; Message: The SRID specification on the column '%s' cannot be changed because there is a spatial index on the column. Please remove the spatial index before altering the SRID specification.
    case ER_WARN_BINLOG_PARTIAL_UPDATES_DISABLED = 3645; // SQLSTATE: HY000; Message: When %s, the option binlog_row_value_options=%s will be ignored and updates will be written in full format to binary log.
    case ER_WARN_BINLOG_PARTIAL_UPDATES_SUGGESTS_PARTIAL_IMAGES = 3647; // SQLSTATE: HY000; Message: When %s, the option binlog_row_value_options=%s will be used only for the after-image. Full values will be written in the before-image, so the saving in disk space due to binlog_row_value_options is limited to less than 50%%.
    case ER_COULD_NOT_APPLY_JSON_DIFF = 3648; // SQLSTATE: HY000; Message: Could not apply JSON diff in table %.*s, column %s.
    case ER_CORRUPTED_JSON_DIFF = 3649; // SQLSTATE: HY000; Message: Corrupted JSON diff for table %.*s, column %s.
    case ER_RESOURCE_GROUP_EXISTS = 3650; // SQLSTATE: HY000; Message: Resource Group '%s' exists
    case ER_RESOURCE_GROUP_NOT_EXISTS = 3651; // SQLSTATE: HY000; Message: Resource Group '%s' does not exist.
    case ER_INVALID_VCPU_ID = 3652; // SQLSTATE: HY000; Message: Invalid cpu id %u
    case ER_INVALID_VCPU_RANGE = 3653; // SQLSTATE: HY000; Message: Invalid VCPU range %u-%u
    case ER_INVALID_THREAD_PRIORITY = 3654; // SQLSTATE: HY000; Message: Invalid thread priority value %d for %s resource group %s. Allowed range is [%d, %d].
    case ER_DISALLOWED_OPERATION = 3655; // SQLSTATE: HY000; Message: %s operation is disallowed on %s
    case ER_RESOURCE_GROUP_BUSY = 3656; // SQLSTATE: HY000; Message: Resource group %s is busy.
    case ER_RESOURCE_GROUP_DISABLED = 3657; // SQLSTATE: HY000; Message: Resource group %s is disabled.
    case ER_FEATURE_UNSUPPORTED = 3658; // SQLSTATE: HY000; Message: Feature %s is unsupported (%s).
    case ER_ATTRIBUTE_IGNORED = 3659; // SQLSTATE: HY000; Message: Attribute %s is ignored (%s).
    case ER_INVALID_THREAD_ID = 3660; // SQLSTATE: HY000; Message: Invalid thread id (%llu).
    case ER_RESOURCE_GROUP_BIND_FAILED = 3661; // SQLSTATE: HY000; Message: Unable to bind resource group %s with thread id (%llu).(%s).
    case ER_INVALID_USE_OF_FORCE_OPTION = 3662; // SQLSTATE: HY000; Message: Option FORCE invalid as DISABLE option is not specified.
    case ER_GROUP_REPLICATION_COMMAND_FAILURE = 3663; // SQLSTATE: HY000; Message: The %s command encountered a failure. %s
    case ER_SDI_OPERATION_FAILED = 3664; // SQLSTATE: HY000; Message: Failed to %s SDI '%s.%s' in tablespace '%s'.
    case ER_MISSING_JSON_TABLE_VALUE = 3665; // SQLSTATE: 22035; Message: Missing value for JSON_TABLE column '%s'
    case ER_WRONG_JSON_TABLE_VALUE = 3666; // SQLSTATE: 2203F; Message: Can't store an array or an object in the scalar JSON_TABLE column '%s'
    case ER_TF_MUST_HAVE_ALIAS = 3667; // SQLSTATE: 42000; Message: Every table function must have an alias
    case ER_TF_FORBIDDEN_JOIN_TYPE = 3668; // SQLSTATE: HY000; Message: INNER or LEFT JOIN must be used for LATERAL references made by '%s'
    case ER_JT_VALUE_OUT_OF_RANGE = 3669; // SQLSTATE: 22003; Message: Value is out of range for JSON_TABLE's column '%s'
    case ER_JT_MAX_NESTED_PATH = 3670; // SQLSTATE: 42000; Message: More than supported %u NESTED PATHs were found in JSON_TABLE '%s'
    case ER_PASSWORD_EXPIRATION_NOT_SUPPORTED_BY_AUTH_METHOD = 3671; // SQLSTATE: HY000; Message: The selected authentication method %.*s does not support password expiration
    case ER_INVALID_GEOJSON_CRS_NOT_TOP_LEVEL = 3672; // SQLSTATE: HY000; Message: Invalid GeoJSON data provided to function %s: Member 'crs' must be specified in the top level object.
    case ER_BAD_NULL_ERROR_NOT_IGNORED = 3673; // SQLSTATE: 23000; Message: Column '%s' cannot be null
    case WARN_USELESS_SPATIAL_INDEX = 3674; // SQLSTATE: HY000; Message: The spatial index on column '%s' will not be used by the query optimizer since the column does not have an SRID attribute. Consider adding an SRID attribute to the column.
    case ER_DISK_FULL_NOWAIT = 3675; // SQLSTATE: HY000; Message: Create table/tablespace '%s' failed, as disk is full
    case ER_PARSE_ERROR_IN_DIGEST_FN = 3676; // SQLSTATE: HY000; Message: Could not parse argument to digest function: "%s".
    case ER_UNDISCLOSED_PARSE_ERROR_IN_DIGEST_FN = 3677; // SQLSTATE: HY000; Message: Could not parse argument to digest function.
    case ER_SCHEMA_DIR_EXISTS = 3678; // SQLSTATE: HY000; Message: Schema directory '%s' already exists. This must be resolved manually (e.g. by moving the schema directory to another location).
    case ER_SCHEMA_DIR_MISSING = 3679; // SQLSTATE: HY000; Message: Schema directory '%s' does not exist
    case ER_SCHEMA_DIR_CREATE_FAILED = 3680; // SQLSTATE: HY000; Message: Failed to create schema directory '%s' (errno: %d - %s)
    case ER_SCHEMA_DIR_UNKNOWN = 3681; // SQLSTATE: HY000; Message: Schema '%s' does not exist, but schema directory '%s' was found. This must be resolved manually (e.g. by moving the schema directory to another location).
    case ER_ONLY_IMPLEMENTED_FOR_SRID_0_AND_4326 = 3682; // SQLSTATE: 22S00; Message: Function %s is only defined for SRID 0 and SRID 4326.
    case ER_REGEXP_BUFFER_OVERFLOW = 3684; // SQLSTATE: HY000; Message: The result string is larger than the result buffer.
    case ER_REGEXP_ILLEGAL_ARGUMENT = 3685; // SQLSTATE: HY000; Message: Illegal argument to a regular expression.
    case ER_REGEXP_INDEX_OUTOFBOUNDS_ERROR = 3686; // SQLSTATE: HY000; Message: Index out of bounds in regular expression search.
    case ER_REGEXP_INTERNAL_ERROR = 3687; // SQLSTATE: HY000; Message: Internal error in the regular expression library.
    case ER_REGEXP_RULE_SYNTAX = 3688; // SQLSTATE: HY000; Message: Syntax error in regular expression on line %u, character %u.
    case ER_REGEXP_BAD_ESCAPE_SEQUENCE = 3689; // SQLSTATE: HY000; Message: Unrecognized escape sequence in regular expression.
    case ER_REGEXP_UNIMPLEMENTED = 3690; // SQLSTATE: HY000; Message: The regular expression contains a feature that is not implemented in this library version.
    case ER_REGEXP_MISMATCHED_PAREN = 3691; // SQLSTATE: HY000; Message: Mismatched parenthesis in regular expression.
    case ER_REGEXP_BAD_INTERVAL = 3692; // SQLSTATE: HY000; Message: Incorrect description of a {min,max} interval.
    case ER_REGEXP_MAX_LT_MIN = 3693; // SQLSTATE: HY000; Message: The maximum is less than the minumum in a {min,max} interval.
    case ER_REGEXP_INVALID_BACK_REF = 3694; // SQLSTATE: HY000; Message: Invalid back-reference in regular expression.
    case ER_REGEXP_LOOK_BEHIND_LIMIT = 3695; // SQLSTATE: HY000; Message: The look-behind assertion exceeds the limit in regular expression.
    case ER_REGEXP_MISSING_CLOSE_BRACKET = 3696; // SQLSTATE: HY000; Message: The regular expression contains an unclosed bracket expression.
    case ER_REGEXP_INVALID_RANGE = 3697; // SQLSTATE: HY000; Message: The regular expression contains an [x-y] character range where x comes after y.
    case ER_REGEXP_STACK_OVERFLOW = 3698; // SQLSTATE: HY000; Message: Overflow in the regular expression backtrack stack.
    case ER_REGEXP_TIME_OUT = 3699; // SQLSTATE: HY000; Message: Timeout exceeded in regular expression match.
    case ER_REGEXP_PATTERN_TOO_BIG = 3700; // SQLSTATE: HY000; Message: The regular expression pattern exceeds limits on size or complexity.
    case ER_CANT_SET_ERROR_LOG_SERVICE = 3701; // SQLSTATE: HY000; Message: Value for %s got confusing at or around "%s". Syntax may be wrong, component may not be INSTALLed, or a component that does not support instances may be listed more than once.
    case ER_EMPTY_PIPELINE_FOR_ERROR_LOG_SERVICE = 3702; // SQLSTATE: HY000; Message: Setting an empty %s pipeline disables error logging!
    case ER_COMPONENT_FILTER_DIAGNOSTICS = 3703; // SQLSTATE: HY000; Message: filter %s: %s
    case ER_NOT_IMPLEMENTED_FOR_CARTESIAN_SRS = 3704; // SQLSTATE: 22S00; Message: %s(%s) has not been implemented for Cartesian spatial reference systems.
    case ER_NOT_IMPLEMENTED_FOR_PROJECTED_SRS = 3705; // SQLSTATE: 22S00; Message: %s(%s) has not been implemented for projected spatial reference systems.
    case ER_NONPOSITIVE_RADIUS = 3706; // SQLSTATE: 22003; Message: Invalid radius provided to function %s: Radius must be greater than zero.
    case ER_RESTART_SERVER_FAILED = 3707; // SQLSTATE: HY000; Message: Restart server failed (%s).
    case ER_SRS_MISSING_MANDATORY_ATTRIBUTE = 3708; // SQLSTATE: SR006; Message: Missing mandatory attribute %s.
    case ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS = 3709; // SQLSTATE: SR006; Message: Multiple definitions of attribute %s.
    case ER_SRS_NAME_CANT_BE_EMPTY_OR_WHITESPACE = 3710; // SQLSTATE: SR006; Message: The spatial reference system name can't be an empty string or start or end with whitespace.
    case ER_SRS_ORGANIZATION_CANT_BE_EMPTY_OR_WHITESPACE = 3711; // SQLSTATE: SR006; Message: The organization name can't be an empty string or start or end with whitespace.
    case ER_SRS_ID_ALREADY_EXISTS = 3712; // SQLSTATE: SR004; Message: There is already a spatial reference system with SRID %u.
    case ER_WARN_SRS_ID_ALREADY_EXISTS = 3713; // SQLSTATE: 01S00; Message: There is already a spatial reference system with SRID %u.
    case ER_CANT_MODIFY_SRID_0 = 3714; // SQLSTATE: SR000; Message: SRID 0 is not modifiable.
    case ER_WARN_RESERVED_SRID_RANGE = 3715; // SQLSTATE: 01S01; Message: The SRID range [%u, %u] has been reserved for system use. SRSs in this range may be added, modified or removed without warning during upgrade.
    case ER_CANT_MODIFY_SRS_USED_BY_COLUMN = 3716; // SQLSTATE: SR005; Message: Can't modify SRID %u. There is at least one column depending on it.
    case ER_SRS_INVALID_CHARACTER_IN_ATTRIBUTE = 3717; // SQLSTATE: SR006; Message: Invalid character in attribute %s.
    case ER_SRS_ATTRIBUTE_STRING_TOO_LONG = 3718; // SQLSTATE: SR006; Message: Attribute %s is too long. The maximum length is %u characters.
    case ER_DEPRECATED_UTF8_ALIAS = 3719; // SQLSTATE: HY000; Message: 'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
    case ER_DEPRECATED_NATIONAL = 3720; // SQLSTATE: HY000; Message: NATIONAL/NCHAR/NVARCHAR implies the character set UTF8MB3, which will be replaced by UTF8MB4 in a future release. Please consider using CHAR(x) CHARACTER SET UTF8MB4 in order to be unambiguous.
    case ER_INVALID_DEFAULT_UTF8MB4_COLLATION = 3721; // SQLSTATE: HY000; Message: Invalid default collation %s: utf8mb4_0900_ai_ci or utf8mb4_general_ci expected
    case ER_UNABLE_TO_COLLECT_LOG_STATUS = 3722; // SQLSTATE: HY000; Message: Unable to collect information for column '%s': %s.
    case ER_RESERVED_TABLESPACE_NAME = 3723; // SQLSTATE: HY000; Message: The table '%s' may not be created in the reserved tablespace '%s'.
    case ER_UNABLE_TO_SET_OPTION = 3724; // SQLSTATE: HY000; Message: This option cannot be set %s.
    case ER_REPLICA_POSSIBLY_DIVERGED_AFTER_DDL = 3725; // SQLSTATE: HY000; Message: A commit for an atomic DDL statement was unsuccessful on the source and the replica. The replica supports atomic DDL statements but the source does not, so the action taken by the replica and source might differ. Check that their states have not diverged before proceeding.
    case ER_SRS_NOT_GEOGRAPHIC = 3726; // SQLSTATE: 22S00; Message: Function %s is only defined for geographic spatial reference systems, but one of its arguments is in SRID %u, which is not geographic.
    case ER_POLYGON_TOO_LARGE = 3727; // SQLSTATE: 22023; Message: Function %s encountered a polygon that was too large. Polygons must cover less than half the planet.
    case ER_SPATIAL_UNIQUE_INDEX = 3728; // SQLSTATE: HY000; Message: Spatial indexes can't be primary or unique indexes.
    case ER_INDEX_TYPE_NOT_SUPPORTED_FOR_SPATIAL_INDEX = 3729; // SQLSTATE: HY000; Message: The index type %s is not supported for spatial indexes.
    case ER_FK_CANNOT_DROP_PARENT = 3730; // SQLSTATE: HY000; Message: Cannot drop table '%s' referenced by a foreign key constraint '%s' on table '%s'.
    case ER_GEOMETRY_PARAM_LONGITUDE_OUT_OF_RANGE = 3731; // SQLSTATE: 22S02; Message: A parameter of function %s contains a geometry with longitude %f, which is out of range. It must be within (%f, %f].
    case ER_GEOMETRY_PARAM_LATITUDE_OUT_OF_RANGE = 3732; // SQLSTATE: 22S03; Message: A parameter of function %s contains a geometry with latitude %f, which is out of range. It must be within [%f, %f].
    case ER_FK_CANNOT_USE_VIRTUAL_COLUMN = 3733; // SQLSTATE: HY000; Message: Foreign key '%s' uses virtual column '%s' which is not supported.
    case ER_FK_NO_COLUMN_PARENT = 3734; // SQLSTATE: HY000; Message: Failed to add the foreign key constraint. Missing column '%s' for constraint '%s' in the referenced table '%s'
    case ER_CANT_SET_ERROR_SUPPRESSION_LIST = 3735; // SQLSTATE: HY000; Message: %s: Could not add suppression rule for code "%s". Rule-set may be full, or code may not correspond to an error-log message.
    case ER_SRS_GEOGCS_INVALID_AXES = 3736; // SQLSTATE: SR002; Message: The spatial reference system definition for SRID %u specifies invalid geographic axes '%s' and '%s'. One axis must be NORTH or SOUTH and the other must be EAST or WEST.
    case ER_SRS_INVALID_SEMI_MAJOR_AXIS = 3737; // SQLSTATE: SR002; Message: The length of the semi-major axis must be a positive number.
    case ER_SRS_INVALID_INVERSE_FLATTENING = 3738; // SQLSTATE: SR002; Message: The inverse flattening must be larger than 1.0, or 0.0 if the ellipsoid is a sphere.
    case ER_SRS_INVALID_ANGULAR_UNIT = 3739; // SQLSTATE: SR002; Message: The angular unit conversion factor must be a positive number.
    case ER_SRS_INVALID_PRIME_MERIDIAN = 3740; // SQLSTATE: SR002; Message: The prime meridian must be within (-180, 180] degrees, specified in the SRS angular unit.
    case ER_TRANSFORM_SOURCE_SRS_NOT_SUPPORTED = 3741; // SQLSTATE: 22S00; Message: Transformation from SRID %u is not supported.
    case ER_TRANSFORM_TARGET_SRS_NOT_SUPPORTED = 3742; // SQLSTATE: 22S00; Message: Transformation to SRID %u is not supported.
    case ER_TRANSFORM_SOURCE_SRS_MISSING_TOWGS84 = 3743; // SQLSTATE: 22S00; Message: Transformation from SRID %u is not supported. The spatial reference system has no TOWGS84 clause.
    case ER_TRANSFORM_TARGET_SRS_MISSING_TOWGS84 = 3744; // SQLSTATE: 22S00; Message: Transformation to SRID %u is not supported. The spatial reference system has no TOWGS84 clause.
    case ER_TEMP_TABLE_PREVENTS_SWITCH_SESSION_BINLOG_FORMAT = 3745; // SQLSTATE: HY000; Message: Changing @@session.binlog_format is disallowed when the session has open temporary table(s). You could wait until these temporary table(s) are dropped and try again.
    case ER_TEMP_TABLE_PREVENTS_SWITCH_GLOBAL_BINLOG_FORMAT = 3746; // SQLSTATE: HY000; Message: Changing @@global.binlog_format or @@persist.binlog_format is disallowed when any replication channel has open temporary table(s). You could wait until Replica_open_temp_tables = 0 and try again
    case ER_RUNNING_APPLIER_PREVENTS_SWITCH_GLOBAL_BINLOG_FORMAT = 3747; // SQLSTATE: HY000; Message: Changing @@global.binlog_format or @@persist.binlog_format is disallowed when any replication channel applier thread is running. You could execute STOP REPLICA SQL_THREAD and try again.
    case ER_CLIENT_GTID_UNSAFE_CREATE_DROP_TEMP_TABLE_IN_TRX_IN_SBR = 3748; // SQLSTATE: HY000; Message: Statement violates GTID consistency: CREATE TEMPORARY TABLE and DROP TEMPORARY TABLE are not allowed inside a transaction or inside a procedure in a transactional context when @@session.binlog_format=STATEMENT.
    case ER_TABLE_WITHOUT_PK = 3750; // SQLSTATE: HY000; Message: Unable to create or change a table without a primary key, when the system variable 'sql_require_primary_key' is set. Add a primary key to the table or unset this variable to avoid this message. Note that tables without a primary key can cause performance problems in row-based replication, so please consult your DBA before changing this setting.
    case ER_WARN_DATA_TRUNCATED_FUNCTIONAL_INDEX = 3751; // SQLSTATE: 01000; Message: Data truncated for functional index '%s' at row %ld
    case ER_WARN_DATA_OUT_OF_RANGE_FUNCTIONAL_INDEX = 3752; // SQLSTATE: 22003; Message: Value is out of range for functional index '%s' at row %ld
    case ER_FUNCTIONAL_INDEX_ON_JSON_OR_GEOMETRY_FUNCTION = 3753; // SQLSTATE: 42000; Message: Cannot create a functional index on a function that returns a JSON or GEOMETRY value.
    case ER_FUNCTIONAL_INDEX_REF_AUTO_INCREMENT = 3754; // SQLSTATE: HY000; Message: Functional index '%s' cannot refer to an auto-increment column.
    case ER_CANNOT_DROP_COLUMN_FUNCTIONAL_INDEX = 3755; // SQLSTATE: HY000; Message: Cannot drop column '%s' because it is used by a functional index. In order to drop the column, you must remove the functional index.
    case ER_FUNCTIONAL_INDEX_PRIMARY_KEY = 3756; // SQLSTATE: HY000; Message: The primary key cannot be a functional index
    case ER_FUNCTIONAL_INDEX_ON_LOB = 3757; // SQLSTATE: HY000; Message: Cannot create a functional index on an expression that returns a BLOB or TEXT. Please consider using CAST.
    case ER_FUNCTIONAL_INDEX_FUNCTION_IS_NOT_ALLOWED = 3758; // SQLSTATE: HY000; Message: Expression of functional index '%s' contains a disallowed function.
    case ER_FULLTEXT_FUNCTIONAL_INDEX = 3759; // SQLSTATE: HY000; Message: Fulltext functional index is not supported.
    case ER_SPATIAL_FUNCTIONAL_INDEX = 3760; // SQLSTATE: HY000; Message: Spatial functional index is not supported.
    case ER_WRONG_KEY_COLUMN_FUNCTIONAL_INDEX = 3761; // SQLSTATE: HY000; Message: The used storage engine cannot index the expression '%s'.
    case ER_FUNCTIONAL_INDEX_ON_FIELD = 3762; // SQLSTATE: HY000; Message: Functional index on a column is not supported. Consider using a regular index instead.
    case ER_GENERATED_COLUMN_NAMED_FUNCTION_IS_NOT_ALLOWED = 3763; // SQLSTATE: HY000; Message: Expression of generated column '%s' contains a disallowed function: %s.
    case ER_GENERATED_COLUMN_ROW_VALUE = 3764; // SQLSTATE: HY000; Message: Expression of generated column '%s' cannot refer to a row value.
    case ER_GENERATED_COLUMN_VARIABLES = 3765; // SQLSTATE: HY000; Message: Expression of generated column '%s' cannot refer user or system variables.
    case ER_DEPENDENT_BY_DEFAULT_GENERATED_VALUE = 3766; // SQLSTATE: HY000; Message: Column '%s' of table '%s' has a default value expression dependency and cannot be dropped or renamed.
    case ER_DEFAULT_VAL_GENERATED_NON_PRIOR = 3767; // SQLSTATE: HY000; Message: Default value expression of column '%s' cannot refer to a column defined after it if that column is a generated column or has an expression as default value.
    case ER_DEFAULT_VAL_GENERATED_REF_AUTO_INC = 3768; // SQLSTATE: HY000; Message: Default value expression of column '%s' cannot refer to an auto-increment column.
    case ER_DEFAULT_VAL_GENERATED_FUNCTION_IS_NOT_ALLOWED = 3769; // SQLSTATE: HY000; Message: Default value expression of column '%s' contains a disallowed function.
    case ER_DEFAULT_VAL_GENERATED_NAMED_FUNCTION_IS_NOT_ALLOWED = 3770; // SQLSTATE: HY000; Message: Default value expression of column '%s' contains a disallowed function: %s.
    case ER_DEFAULT_VAL_GENERATED_ROW_VALUE = 3771; // SQLSTATE: HY000; Message: Default value expression of column '%s' cannot refer to a row value.
    case ER_DEFAULT_VAL_GENERATED_VARIABLES = 3772; // SQLSTATE: HY000; Message: Default value expression of column '%s' cannot refer user or system variables.
    case ER_DEFAULT_AS_VAL_GENERATED = 3773; // SQLSTATE: HY000; Message: DEFAULT function cannot be used with default value expressions
    case ER_UNSUPPORTED_ACTION_ON_DEFAULT_VAL_GENERATED = 3774; // SQLSTATE: HY000; Message: '%s' is not supported for default value expressions.
    case ER_GTID_UNSAFE_ALTER_ADD_COL_WITH_DEFAULT_EXPRESSION = 3775; // SQLSTATE: HY000; Message: Statement violates GTID consistency: ALTER TABLE ... ADD COLUMN .. with expression as DEFAULT.
    case ER_FK_CANNOT_CHANGE_ENGINE = 3776; // SQLSTATE: HY000; Message: Cannot change table's storage engine because the table participates in a foreign key constraint.
    case ER_WARN_DEPRECATED_USER_SET_EXPR = 3777; // SQLSTATE: HY000; Message: Setting user variables within expressions is deprecated and will be removed in a future release. Consider alternatives: 'SET variable=expression, ...', or 'SELECT expression(s) INTO variables(s)'.
    case ER_WARN_DEPRECATED_UTF8MB3_COLLATION = 3778; // SQLSTATE: HY000; Message: '%s' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
    case ER_WARN_DEPRECATED_NESTED_COMMENT_SYNTAX = 3779; // SQLSTATE: HY000; Message: Nested comment syntax is deprecated and will be removed in a future release.
    case ER_FK_INCOMPATIBLE_COLUMNS = 3780; // SQLSTATE: HY000; Message: Referencing column '%s' and referenced column '%s' in foreign key constraint '%s' are incompatible.
    case ER_GR_HOLD_WAIT_TIMEOUT = 3781; // SQLSTATE: HY000; Message: Timeout exceeded for held statement while new Group Replication primary member is applying backlog.
    case ER_GR_HOLD_KILLED = 3782; // SQLSTATE: HY000; Message: Held statement aborted because Group Replication plugin got shut down or thread was killed while new primary member was applying backlog.
    case ER_GR_HOLD_MEMBER_STATUS_ERROR = 3783; // SQLSTATE: HY000; Message: Held statement was aborted due to member being in error state, while backlog is being applied during Group Replication primary election.
    case ER_RPL_ENCRYPTION_FAILED_TO_FETCH_KEY = 3784; // SQLSTATE: HY000; Message: Failed to fetch key from keyring, please check if keyring is loaded.
    case ER_RPL_ENCRYPTION_KEY_NOT_FOUND = 3785; // SQLSTATE: HY000; Message: Can't find key from keyring, please check in the server log if a keyring is loaded and initialized successfully.
    case ER_RPL_ENCRYPTION_KEYRING_INVALID_KEY = 3786; // SQLSTATE: HY000; Message: Fetched an invalid key from keyring.
    case ER_RPL_ENCRYPTION_HEADER_ERROR = 3787; // SQLSTATE: HY000; Message: Error reading a replication log encryption header: %s.
    case ER_RPL_ENCRYPTION_FAILED_TO_ROTATE_LOGS = 3788; // SQLSTATE: HY000; Message: Failed to rotate some logs after changing binlog encryption settings. Please fix the problem and rotate the logs manually.
    case ER_RPL_ENCRYPTION_KEY_EXISTS_UNEXPECTED = 3789; // SQLSTATE: HY000; Message: Key %s exists unexpected.
    case ER_RPL_ENCRYPTION_FAILED_TO_GENERATE_KEY = 3790; // SQLSTATE: HY000; Message: Failed to generate key, please check if keyring is loaded.
    case ER_RPL_ENCRYPTION_FAILED_TO_STORE_KEY = 3791; // SQLSTATE: HY000; Message: Failed to store key, please check if keyring is loaded.
    case ER_RPL_ENCRYPTION_FAILED_TO_REMOVE_KEY = 3792; // SQLSTATE: HY000; Message: Failed to remove key, please check if keyring is loaded.
    case ER_RPL_ENCRYPTION_UNABLE_TO_CHANGE_OPTION = 3793; // SQLSTATE: HY000; Message: Failed to change binlog_encryption value. %s.
    case ER_RPL_ENCRYPTION_MASTER_KEY_RECOVERY_FAILED = 3794; // SQLSTATE: HY000; Message: Unable to recover binlog encryption master key, please check if keyring is loaded.
    case ER_SLOW_LOG_MODE_IGNORED_WHEN_NOT_LOGGING_TO_FILE = 3795; // SQLSTATE: HY000; Message: slow query log file format changed as requested, but setting will have no effect when not actually logging to a file.
    case ER_GRP_TRX_CONSISTENCY_NOT_ALLOWED = 3796; // SQLSTATE: HY000; Message: The option group_replication_consistency cannot be used on the current member state.
    case ER_GRP_TRX_CONSISTENCY_BEFORE = 3797; // SQLSTATE: HY000; Message: Error while waiting for group transactions commit on group_replication_consistency= 'BEFORE'.
    case ER_GRP_TRX_CONSISTENCY_AFTER_ON_TRX_BEGIN = 3798; // SQLSTATE: HY000; Message: Error while waiting for transactions with group_replication_consistency= 'AFTER' to commit.
    case ER_GRP_TRX_CONSISTENCY_BEGIN_NOT_ALLOWED = 3799; // SQLSTATE: HY000; Message: The Group Replication plugin is stopping, therefore new transactions are not allowed to start.
    case ER_FUNCTIONAL_INDEX_ROW_VALUE_IS_NOT_ALLOWED = 3800; // SQLSTATE: HY000; Message: Expression of functional index '%s' cannot refer to a row value.
    case ER_RPL_ENCRYPTION_FAILED_TO_ENCRYPT = 3801; // SQLSTATE: HY000; Message: Failed to encrypt content to write into binlog file: %s.
    case ER_PAGE_TRACKING_NOT_STARTED = 3802; // SQLSTATE: HY000; Message: Page Tracking is not started yet.
    case ER_PAGE_TRACKING_RANGE_NOT_TRACKED = 3803; // SQLSTATE: HY000; Message: Tracking was not enabled for the LSN range specified
    case ER_PAGE_TRACKING_CANNOT_PURGE = 3804; // SQLSTATE: HY000; Message: Cannot purge data when concurrent clone is in progress. Try later.
    case ER_RPL_ENCRYPTION_CANNOT_ROTATE_BINLOG_MASTER_KEY = 3805; // SQLSTATE: HY000; Message: Cannot rotate binary log master key when 'binlog-encryption' is off.
    case ER_BINLOG_MASTER_KEY_RECOVERY_OUT_OF_COMBINATION = 3806; // SQLSTATE: HY000; Message: Unable to recover binary log master key, the combination of new_master_key_seqno=%u, master_key_seqno=%u and old_master_key_seqno=%u are wrong.
    case ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_OPERATE_KEY = 3807; // SQLSTATE: HY000; Message: Failed to operate binary log master key on keyring, please check if keyring is loaded. The statement had no effect: the old binary log master key is still in use, the keyring, binary and relay log files are unchanged, and the server could not start using a new binary log master key for encrypting new binary and relay log files.
    case ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_ROTATE_LOGS = 3808; // SQLSTATE: HY000; Message: Failed to rotate one or more binary or relay log files. A new binary log master key was generated and will be used to encrypt new binary and relay log files. There may still exist binary or relay log files using the previous binary log master key.
    case ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_REENCRYPT_LOG = 3809; // SQLSTATE: HY000; Message: %s. A new binary log master key was generated and will be used to encrypt new binary and relay log files. There may still exist binary or relay log files using the previous binary log master key.
    case ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_CLEANUP_UNUSED_KEYS = 3810; // SQLSTATE: HY000; Message: Failed to remove unused binary log encryption keys from the keyring, please check if keyring is loaded. The unused binary log encryption keys may still exist in the keyring, and they will be removed upon server restart or next 'ALTER INSTANCE ROTATE BINLOG MASTER KEY' execution.
    case ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_CLEANUP_AUX_KEY = 3811; // SQLSTATE: HY000; Message: Failed to remove auxiliary binary log encryption key from keyring, please check if keyring is loaded. The cleanup of the binary log master key rotation process did not finish as expected and the cleanup will take place upon server restart or next 'ALTER INSTANCE ROTATE BINLOG MASTER KEY' execution.
    case ER_NON_BOOLEAN_EXPR_FOR_CHECK_CONSTRAINT = 3812; // SQLSTATE: HY000; Message: An expression of non-boolean type specified to a check constraint '%s'.
    case ER_COLUMN_CHECK_CONSTRAINT_REFERENCES_OTHER_COLUMN = 3813; // SQLSTATE: HY000; Message: Column check constraint '%s' references other column.
    case ER_CHECK_CONSTRAINT_NAMED_FUNCTION_IS_NOT_ALLOWED = 3814; // SQLSTATE: HY000; Message: An expression of a check constraint '%s' contains disallowed function: %s.
    case ER_CHECK_CONSTRAINT_FUNCTION_IS_NOT_ALLOWED = 3815; // SQLSTATE: HY000; Message: An expression of a check constraint '%s' contains disallowed function.
    case ER_CHECK_CONSTRAINT_VARIABLES = 3816; // SQLSTATE: HY000; Message: An expression of a check constraint '%s' cannot refer to a user or system variable.
    case ER_CHECK_CONSTRAINT_ROW_VALUE = 3817; // SQLSTATE: HY000; Message: Check constraint '%s' cannot refer to a row value.
    case ER_CHECK_CONSTRAINT_REFERS_AUTO_INCREMENT_COLUMN = 3818; // SQLSTATE: HY000; Message: Check constraint '%s' cannot refer to an auto-increment column.
    case ER_CHECK_CONSTRAINT_VIOLATED = 3819; // SQLSTATE: HY000; Message: Check constraint '%s' is violated.
    case ER_CHECK_CONSTRAINT_REFERS_UNKNOWN_COLUMN = 3820; // SQLSTATE: HY000; Message: Check constraint '%s' refers to non-existing column '%s'.
    case ER_CHECK_CONSTRAINT_NOT_FOUND = 3821; // SQLSTATE: HY000; Message: Check constraint '%s' is not found in the table.
    case ER_CHECK_CONSTRAINT_DUP_NAME = 3822; // SQLSTATE: HY000; Message: Duplicate check constraint name '%s'.
    case ER_CHECK_CONSTRAINT_CLAUSE_USING_FK_REFER_ACTION_COLUMN = 3823; // SQLSTATE: HY000; Message: Column '%s' cannot be used in a check constraint '%s': needed in a foreign key constraint '%s' referential action.
    case WARN_UNENCRYPTED_TABLE_IN_ENCRYPTED_DB = 3824; // SQLSTATE: HY000; Message: Creating an unencrypted table in a database with default encryption enabled.
    case ER_INVALID_ENCRYPTION_REQUEST = 3825; // SQLSTATE: HY000; Message: Request to create %s table while using an %s tablespace.
    case ER_CANNOT_SET_TABLE_ENCRYPTION = 3826; // SQLSTATE: HY000; Message: Table encryption differ from its database default encryption, and user doesn't have enough privilege.
    case ER_CANNOT_SET_DATABASE_ENCRYPTION = 3827; // SQLSTATE: HY000; Message: Database default encryption differ from 'default_table_encryption' setting, and user doesn't have enough privilege.
    case ER_CANNOT_SET_TABLESPACE_ENCRYPTION = 3828; // SQLSTATE: HY000; Message: Tablespace encryption differ from 'default_table_encryption' setting, and user doesn't have enough privilege.
    case ER_TABLESPACE_CANNOT_BE_ENCRYPTED = 3829; // SQLSTATE: HY000; Message: This tablespace can't be encrypted, because one of table's schema has default encryption OFF and user doesn't have enough privilege.
    case ER_TABLESPACE_CANNOT_BE_DECRYPTED = 3830; // SQLSTATE: HY000; Message: This tablespace can't be decrypted, because one of table's schema has default encryption ON and user doesn't have enough privilege.
    case ER_TABLESPACE_TYPE_UNKNOWN = 3831; // SQLSTATE: HY000; Message: Cannot determine the type of the tablespace named '%s'.
    case ER_TARGET_TABLESPACE_UNENCRYPTED = 3832; // SQLSTATE: HY000; Message: Source tablespace is encrypted but target tablespace is not.
    case ER_CANNOT_USE_ENCRYPTION_CLAUSE = 3833; // SQLSTATE: HY000; Message: ENCRYPTION clause is not valid for %s tablespace.
    case ER_INVALID_MULTIPLE_CLAUSES = 3834; // SQLSTATE: HY000; Message: Multiple %s clauses
    case ER_UNSUPPORTED_USE_OF_GRANT_AS = 3835; // SQLSTATE: HY000; Message: GRANT ... AS is currently supported only for global privileges.
    case ER_UKNOWN_AUTH_ID_OR_ACCESS_DENIED_FOR_GRANT_AS = 3836; // SQLSTATE: HY000; Message: Either some of the authorization IDs in the AS clause are invalid or the current user lacks privileges to execute the statement.
    case ER_DEPENDENT_BY_FUNCTIONAL_INDEX = 3837; // SQLSTATE: HY000; Message: Column '%s' has a functional index dependency and cannot be dropped or renamed.
    case ER_PLUGIN_NOT_EARLY = 3838; // SQLSTATE: HY000; Message: Plugin '%s' is not to be used as an "early" plugin. Don't add it to --early-plugin-load, keyring migration etc.
    case ER_INNODB_REDO_LOG_ARCHIVE_START_SUBDIR_PATH = 3839; // SQLSTATE: HY000; Message: Redo log archiving start prohibits path name in 'subdir' argument
    case ER_INNODB_REDO_LOG_ARCHIVE_START_TIMEOUT = 3840; // SQLSTATE: HY000; Message: Redo log archiving start timed out
    case ER_INNODB_REDO_LOG_ARCHIVE_DIRS_INVALID = 3841; // SQLSTATE: HY000; Message: Server variable 'innodb_redo_log_archive_dirs' is NULL or empty
    case ER_INNODB_REDO_LOG_ARCHIVE_LABEL_NOT_FOUND = 3842; // SQLSTATE: HY000; Message: Label '%s' not found in server variable 'innodb_redo_log_archive_dirs'
    case ER_INNODB_REDO_LOG_ARCHIVE_DIR_EMPTY = 3843; // SQLSTATE: HY000; Message: Directory is empty after label '%s' in server variable 'innodb_redo_log_archive_dirs'
    case ER_INNODB_REDO_LOG_ARCHIVE_NO_SUCH_DIR = 3844; // SQLSTATE: HY000; Message: Redo log archive directory '%s' does not exist or is not a directory
    case ER_INNODB_REDO_LOG_ARCHIVE_DIR_CLASH = 3845; // SQLSTATE: HY000; Message: Redo log archive directory '%s' is in, under, or over server directory '%s' - '%s'
    case ER_INNODB_REDO_LOG_ARCHIVE_DIR_PERMISSIONS = 3846; // SQLSTATE: HY000; Message: Redo log archive directory '%s' is accessible to all OS users
    case ER_INNODB_REDO_LOG_ARCHIVE_FILE_CREATE = 3847; // SQLSTATE: HY000; Message: Cannot create redo log archive file '%s' (OS errno: %d - %s)
    case ER_INNODB_REDO_LOG_ARCHIVE_ACTIVE = 3848; // SQLSTATE: HY000; Message: Redo log archiving has been started on '%s' - Call innodb_redo_log_archive_stop() first
    case ER_INNODB_REDO_LOG_ARCHIVE_INACTIVE = 3849; // SQLSTATE: HY000; Message: Redo log archiving is not active
    case ER_INNODB_REDO_LOG_ARCHIVE_FAILED = 3850; // SQLSTATE: HY000; Message: Redo log archiving failed: %s
    case ER_INNODB_REDO_LOG_ARCHIVE_SESSION = 3851; // SQLSTATE: HY000; Message: Redo log archiving has not been started by this session
    case ER_STD_REGEX_ERROR = 3852; // SQLSTATE: HY000; Message: Regex error: %s in function %s.
    case ER_INVALID_JSON_TYPE = 3853; // SQLSTATE: 22032; Message: Invalid JSON type in argument %u to function %s; an %s is required.
    case ER_CANNOT_CONVERT_STRING = 3854; // SQLSTATE: HY000; Message: Cannot convert string '%s' from %s to %s
    case ER_DEPENDENT_BY_PARTITION_FUNC = 3855; // SQLSTATE: HY000; Message: Column '%s' has a partitioning function dependency and cannot be dropped or renamed.
    case ER_WARN_DEPRECATED_FLOAT_AUTO_INCREMENT = 3856; // SQLSTATE: HY000; Message: AUTO_INCREMENT support for FLOAT/DOUBLE columns is deprecated and will be removed in a future release. Consider removing AUTO_INCREMENT from column '%s'.
    case ER_RPL_CANT_STOP_REPLICA_WHILE_LOCKED_BACKUP = 3857; // SQLSTATE: HY000; Message: Cannot stop the replica SQL thread while the instance is locked for backup. Try running `UNLOCK INSTANCE` first.
    case ER_WARN_DEPRECATED_FLOAT_DIGITS = 3858; // SQLSTATE: HY000; Message: Specifying number of digits for floating point data types is deprecated and will be removed in a future release.
    case ER_WARN_DEPRECATED_FLOAT_UNSIGNED = 3859; // SQLSTATE: HY000; Message: UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
    case ER_WARN_DEPRECATED_INTEGER_DISPLAY_WIDTH = 3860; // SQLSTATE: HY000; Message: Integer display width is deprecated and will be removed in a future release.
    case ER_WARN_DEPRECATED_ZEROFILL = 3861; // SQLSTATE: HY000; Message: The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
    case ER_CLONE_DONOR = 3862; // SQLSTATE: HY000; Message: Clone Donor Error: %s.
    case ER_CLONE_PROTOCOL = 3863; // SQLSTATE: HY000; Message: Clone received unexpected response from Donor : %s.
    case ER_CLONE_DONOR_VERSION = 3864; // SQLSTATE: HY000; Message: Clone Donor MySQL version: %s is different from Recipient MySQL version %s.
    case ER_CLONE_OS = 3865; // SQLSTATE: HY000; Message: Clone Donor OS: %s is different from Recipient OS: %s.
    case ER_CLONE_PLATFORM = 3866; // SQLSTATE: HY000; Message: Clone Donor platform: %s is different from Recipient platform: %s.
    case ER_CLONE_CHARSET = 3867; // SQLSTATE: HY000; Message: Clone Donor collation: %s is unavailable in Recipient.
    case ER_CLONE_CONFIG = 3868; // SQLSTATE: HY000; Message: Clone Configuration %s: Donor value: %s is different from Recipient value: %s.
    case ER_CLONE_SYS_CONFIG = 3869; // SQLSTATE: HY000; Message: Clone system configuration: %s
    case ER_CLONE_PLUGIN_MATCH = 3870; // SQLSTATE: HY000; Message: Clone Donor plugin %s is not active in Recipient.
    case ER_CLONE_LOOPBACK = 3871; // SQLSTATE: HY000; Message: Clone cannot use loop back connection while cloning into current data directory.
    case ER_CLONE_ENCRYPTION = 3872; // SQLSTATE: HY000; Message: Clone needs SSL connection for encrypted table.
    case ER_CLONE_DISK_SPACE = 3873; // SQLSTATE: HY000; Message: Clone estimated database size is %s. Available space %s is not enough.
    case ER_CLONE_IN_PROGRESS = 3874; // SQLSTATE: HY000; Message: Concurrent clone in progress. Please try after clone is complete.
    case ER_CLONE_DISALLOWED = 3875; // SQLSTATE: HY000; Message: The clone operation cannot be executed when %s.
    case ER_CANNOT_GRANT_ROLES_TO_ANONYMOUS_USER = 3876; // SQLSTATE: HY000; Message: Cannot grant roles to an anonymous user.
    case ER_SECONDARY_ENGINE_PLUGIN = 3877; // SQLSTATE: HY000; Message: %s
    case ER_SECOND_PASSWORD_CANNOT_BE_EMPTY = 3878; // SQLSTATE: HY000; Message: Empty password can not be retained as second password for user '%s'@'%s'.
    case ER_DB_ACCESS_DENIED = 3879; // SQLSTATE: HY000; Message: Access denied for AuthId `%s`@`%s` to database '%s'.
    case ER_DA_AUTH_ID_WITH_SYSTEM_USER_PRIV_IN_MANDATORY_ROLES = 3880; // SQLSTATE: HY000; Message: Cannot set mandatory_roles: AuthId `%s`@`%s` has '%s' privilege.
    case ER_DA_RPL_GTID_TABLE_CANNOT_OPEN = 3881; // SQLSTATE: HY000; Message: Gtid table is not ready to be used. Table '%s.%s' cannot be opened.
    case ER_GEOMETRY_IN_UNKNOWN_LENGTH_UNIT = 3882; // SQLSTATE: SU001; Message: The geometry passed to function %s is in SRID 0, which doesn't specify a length unit. Can't convert to '%s'.
    case ER_DA_PLUGIN_INSTALL_ERROR = 3883; // SQLSTATE: HY000; Message: Error installing plugin '%s': %s
    case ER_NO_SESSION_TEMP = 3884; // SQLSTATE: HY000; Message: Storage engine could not allocate temporary tablespace for this session.
    case ER_DA_UNKNOWN_ERROR_NUMBER = 3885; // SQLSTATE: HY000; Message: Got unknown error: %d
    case ER_COLUMN_CHANGE_SIZE = 3886; // SQLSTATE: HY000; Message: Could not change column '%s' of table '%s'. The resulting size of index '%s' would exceed the max key length of %d bytes.
    case ER_REGEXP_INVALID_CAPTURE_GROUP_NAME = 3887; // SQLSTATE: HY000; Message: A capture group has an invalid name.
    case ER_DA_SSL_LIBRARY_ERROR = 3888; // SQLSTATE: HY000; Message: Failed to set up SSL because of the following SSL library error: %s
    case ER_SECONDARY_ENGINE = 3889; // SQLSTATE: HY000; Message: Secondary engine operation failed. %s.
    case ER_SECONDARY_ENGINE_DDL = 3890; // SQLSTATE: HY000; Message: DDLs on a table with a secondary engine defined are not allowed.
    case ER_INCORRECT_CURRENT_PASSWORD = 3891; // SQLSTATE: HY000; Message: Incorrect current password. Specify the correct password which has to be replaced.
    case ER_MISSING_CURRENT_PASSWORD = 3892; // SQLSTATE: HY000; Message: Current password needs to be specified in the REPLACE clause in order to change it.
    case ER_CURRENT_PASSWORD_NOT_REQUIRED = 3893; // SQLSTATE: HY000; Message: Do not specify the current password while changing it for other users.
    case ER_PASSWORD_CANNOT_BE_RETAINED_ON_PLUGIN_CHANGE = 3894; // SQLSTATE: HY000; Message: Current password can not be retained for user '%s'@'%s' because authentication plugin is being changed.
    case ER_CURRENT_PASSWORD_CANNOT_BE_RETAINED = 3895; // SQLSTATE: HY000; Message: Current password can not be retained for user '%s'@'%s' because new password is empty.
    case ER_PARTIAL_REVOKES_EXIST = 3896; // SQLSTATE: HY000; Message: At least one partial revoke exists on a database. The system variable '@@partial_revokes' must be set to ON.
    case ER_CANNOT_GRANT_SYSTEM_PRIV_TO_MANDATORY_ROLE = 3897; // SQLSTATE: HY000; Message: AuthId `%s`@`%s` is set as mandatory_roles. Cannot grant the '%s' privilege.
    case ER_XA_REPLICATION_FILTERS = 3898; // SQLSTATE: HY000; Message: The use of replication filters with XA transactions is not supported, and can lead to an undefined state in the replica.
    case ER_UNSUPPORTED_SQL_MODE = 3899; // SQLSTATE: HY000; Message: sql_mode=0x%08x is not supported.
    case ER_REGEXP_INVALID_FLAG = 3900; // SQLSTATE: HY000; Message: Invalid match mode flag in regular expression.
    case ER_PARTIAL_REVOKE_AND_DB_GRANT_BOTH_EXISTS = 3901; // SQLSTATE: HY000; Message: '%s' privilege for database '%s' exists both as partial revoke and mysql.db simultaneously. It could mean that the 'mysql' schema is corrupted.
    case ER_UNIT_NOT_FOUND = 3902; // SQLSTATE: SU001; Message: There's no unit of measure named '%s'.
    case ER_INVALID_JSON_VALUE_FOR_FUNC_INDEX = 3903; // SQLSTATE: 22018; Message: Invalid JSON value for CAST for functional index '%s'.
    case ER_JSON_VALUE_OUT_OF_RANGE_FOR_FUNC_INDEX = 3904; // SQLSTATE: 22003; Message: Out of range JSON value for CAST for functional index '%s'.
    case ER_EXCEEDED_MV_KEYS_NUM = 3905; // SQLSTATE: HY000; Message: Exceeded max number of values per record for multi-valued index '%s' by %u value(s).
    case ER_EXCEEDED_MV_KEYS_SPACE = 3906; // SQLSTATE: HY000; Message: Exceeded max total length of values per record for multi-valued index '%s' by %u bytes.
    case ER_FUNCTIONAL_INDEX_DATA_IS_TOO_LONG = 3907; // SQLSTATE: 22001; Message: Data too long for functional index '%s'.
    case ER_WRONG_MVI_VALUE = 3908; // SQLSTATE: HY000; Message: Cannot store an array or an object in a scalar key part of the index '%s'.
    case ER_WARN_FUNC_INDEX_NOT_APPLICABLE = 3909; // SQLSTATE: HY000; Message: Cannot use functional index '%s' due to type or collation conversion.
    case ER_GRP_RPL_UDF_ERROR = 3910; // SQLSTATE: HY000; Message: The function '%s' failed. %s
    case ER_UPDATE_GTID_PURGED_WITH_GR = 3911; // SQLSTATE: HY000; Message: Cannot update GTID_PURGED with the Group Replication plugin running
    case ER_GROUPING_ON_TIMESTAMP_IN_DST = 3912; // SQLSTATE: HY000; Message: Grouping on temporal is non-deterministic for timezones having DST. Please consider switching to UTC for this query.
    case ER_TABLE_NAME_CAUSES_TOO_LONG_PATH = 3913; // SQLSTATE: HY000; Message: Long database name and identifier for object resulted in a path length too long for table '%s'. Please check the path limit for your OS.
    case ER_AUDIT_LOG_INSUFFICIENT_PRIVILEGE = 3914; // SQLSTATE: HY000; Message: Request ignored for '%s'@'%s'. Role needed to perform operation: '%s'
    case ER_DA_GRP_RPL_STARTED_AUTO_REJOIN = 3916; // SQLSTATE: HY000; Message: Started auto-rejoin procedure attempt %lu of %lu
    case ER_SYSVAR_CHANGE_DURING_QUERY = 3917; // SQLSTATE: HY000; Message: A plugin was loaded or unloaded during a query, a system variable table was changed.
    case ER_GLOBSTAT_CHANGE_DURING_QUERY = 3918; // SQLSTATE: HY000; Message: A plugin was loaded or unloaded during a query, a global status variable was changed.
    case ER_GRP_RPL_MESSAGE_SERVICE_INIT_FAILURE = 3919; // SQLSTATE: HY000; Message: The START GROUP_REPLICATION command failed to start its message service.
    case ER_CHANGE_SOURCE_WRONG_COMPRESSION_ALGORITHM_CLIENT = 3920; // SQLSTATE: HY000; Message: Invalid SOURCE_COMPRESSION_ALGORITHMS '%s' for channel '%s'.
    case ER_CHANGE_SOURCE_WRONG_COMPRESSION_LEVEL_CLIENT = 3921; // SQLSTATE: HY000; Message: Invalid SOURCE_ZSTD_COMPRESSION_LEVEL %u for channel '%s'.
    case ER_WRONG_COMPRESSION_ALGORITHM_CLIENT = 3922; // SQLSTATE: HY000; Message: Invalid compression algorithm '%s'.
    case ER_WRONG_COMPRESSION_LEVEL_CLIENT = 3923; // SQLSTATE: HY000; Message: Invalid zstd compression level for algorithm '%s'.
    case ER_CHANGE_SOURCE_WRONG_COMPRESSION_ALGORITHM_LIST_CLIENT = 3924; // SQLSTATE: HY000; Message: Specified compression algorithm list '%s' exceeds total count of 3 for channel '%s'.
    case ER_CLIENT_PRIVILEGE_CHECKS_USER_CANNOT_BE_ANONYMOUS = 3925; // SQLSTATE: HY000; Message: PRIVILEGE_CHECKS_USER for replication channel '%s' was set to ``@`%s`, but anonymous users are disallowed for PRIVILEGE_CHECKS_USER.
    case ER_CLIENT_PRIVILEGE_CHECKS_USER_DOES_NOT_EXIST = 3926; // SQLSTATE: HY000; Message: PRIVILEGE_CHECKS_USER for replication channel '%s' was set to `%s`@`%s`, but this is not an existing user.
    case ER_CLIENT_PRIVILEGE_CHECKS_USER_CORRUPT = 3927; // SQLSTATE: HY000; Message: Invalid, corrupted PRIVILEGE_CHECKS_USER was found in the replication configuration repository for channel '%s'. Use CHANGE REPLICATION SOURCE TO PRIVILEGE_CHECKS_USER to correct the configuration.
    case ER_CLIENT_PRIVILEGE_CHECKS_USER_NEEDS_RPL_APPLIER_PRIV = 3928; // SQLSTATE: HY000; Message: PRIVILEGE_CHECKS_USER for replication channel '%s' was set to `%s`@`%s`, but this user does not have REPLICATION_APPLIER privilege.
    case ER_WARN_DA_PRIVILEGE_NOT_REGISTERED = 3929; // SQLSTATE: HY000; Message: Dynamic privilege '%s' is not registered with the server.
    case ER_CLIENT_KEYRING_UDF_KEY_INVALID = 3930; // SQLSTATE: HY000; Message: Function '%s' failed because key is invalid.
    case ER_CLIENT_KEYRING_UDF_KEY_TYPE_INVALID = 3931; // SQLSTATE: HY000; Message: Function '%s' failed because key type is invalid.
    case ER_CLIENT_KEYRING_UDF_KEY_TOO_LONG = 3932; // SQLSTATE: HY000; Message: Function '%s' failed because key length is too long.
    case ER_CLIENT_KEYRING_UDF_KEY_TYPE_TOO_LONG = 3933; // SQLSTATE: HY000; Message: Function '%s' failed because key type is too long.
    case ER_JSON_SCHEMA_VALIDATION_ERROR_WITH_DETAILED_REPORT = 3934; // SQLSTATE: HY000; Message: %s.
    case ER_DA_UDF_INVALID_CHARSET_SPECIFIED = 3935; // SQLSTATE: HY000; Message: Invalid character set '%s' was specified. It must be either character set name or collation name as supported by server.
    case ER_DA_UDF_INVALID_CHARSET = 3936; // SQLSTATE: HY000; Message: Invalid character set '%s' was specified. It must be a character set name as supported by server.
    case ER_DA_UDF_INVALID_COLLATION = 3937; // SQLSTATE: HY000; Message: Invalid collation '%s' was specified. It must be a collation name as supported by server.
    case ER_DA_UDF_INVALID_EXTENSION_ARGUMENT_TYPE = 3938; // SQLSTATE: HY000; Message: Invalid extension argument type '%s' was specified. Refer the MySQL manual for the valid UDF extension arguments type.
    case ER_MULTIPLE_CONSTRAINTS_WITH_SAME_NAME = 3939; // SQLSTATE: HY000; Message: Table has multiple constraints with the name '%s'. Please use constraint specific '%s' clause.
    case ER_CONSTRAINT_NOT_FOUND = 3940; // SQLSTATE: HY000; Message: Constraint '%s' does not exist.
    case ER_ALTER_CONSTRAINT_ENFORCEMENT_NOT_SUPPORTED = 3941; // SQLSTATE: HY000; Message: Altering constraint enforcement is not supported for the constraint '%s'. Enforcement state alter is not supported for the PRIMARY, UNIQUE and FOREIGN KEY type constraints.
    case ER_TABLE_VALUE_CONSTRUCTOR_MUST_HAVE_COLUMNS = 3942; // SQLSTATE: HY000; Message: Each row of a VALUES clause must have at least one column, unless when used as source in an INSERT statement.
    case ER_TABLE_VALUE_CONSTRUCTOR_CANNOT_HAVE_DEFAULT = 3943; // SQLSTATE: HY000; Message: A VALUES clause cannot use DEFAULT values, unless used as a source in an INSERT statement.
    case ER_CLIENT_QUERY_FAILURE_INVALID_NON_ROW_FORMAT = 3944; // SQLSTATE: HY000; Message: The query does not comply with variable require_row_format restrictions.
    case ER_REQUIRE_ROW_FORMAT_INVALID_VALUE = 3945; // SQLSTATE: HY000; Message: The requested value %s is invalid for REQUIRE_ROW_FORMAT, must be either 0 or 1.
    case ER_FAILED_TO_DETERMINE_IF_ROLE_IS_MANDATORY = 3946; // SQLSTATE: HY000; Message: Failed to acquire lock on user management service, unable to determine if role `%s`@`%s` is mandatory
    case ER_FAILED_TO_FETCH_MANDATORY_ROLE_LIST = 3947; // SQLSTATE: HY000; Message: Failed to acquire lock on user management service, unable to fetch mandatory role list
    case ER_CLIENT_LOCAL_FILES_DISABLED = 3948; // SQLSTATE: 42000; Message: Loading local data is disabled; this must be enabled on both the client and server sides
    case ER_IMP_INCOMPATIBLE_CFG_VERSION = 3949; // SQLSTATE: HY000; Message: Failed to import %s because the CFG file version (%u) is not compatible with the current version (%u)
    case ER_DA_OOM = 3950; // SQLSTATE: HY000; Message: Out of memory
    case ER_DA_UDF_INVALID_ARGUMENT_TO_SET_CHARSET = 3951; // SQLSTATE: HY000; Message: Character set can be set only for the UDF argument type STRING.
    case ER_DA_UDF_INVALID_RETURN_TYPE_TO_SET_CHARSET = 3952; // SQLSTATE: HY000; Message: Character set can be set only for the UDF RETURN type STRING.
    case ER_MULTIPLE_INTO_CLAUSES = 3953; // SQLSTATE: HY000; Message: Multiple INTO clauses in one query block.
    case ER_MISPLACED_INTO = 3954; // SQLSTATE: HY000; Message: Misplaced INTO clause, INTO is not allowed inside subqueries, and must be placed at end of UNION clauses.
    case ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK = 3955; // SQLSTATE: HY000; Message: Access denied for user '%s'@'%s'. Account is blocked for %s day(s) (%s day(s) remaining) due to %u consecutive failed logins.
    case ER_WARN_DEPRECATED_YEAR_UNSIGNED = 3956; // SQLSTATE: HY000; Message: UNSIGNED for the YEAR data type is deprecated and support for it will be removed in a future release.
    case ER_CLONE_NETWORK_PACKET = 3957; // SQLSTATE: HY000; Message: Clone needs max_allowed_packet value to be %u or more. Current value is %u
    case ER_SDI_OPERATION_FAILED_MISSING_RECORD = 3958; // SQLSTATE: HY000; Message: Failed to %s sdi for %s.%s in %s due to missing record.
    case ER_DEPENDENT_BY_CHECK_CONSTRAINT = 3959; // SQLSTATE: HY000; Message: Check constraint '%s' uses column '%s', hence column cannot be dropped or renamed.
    case ER_GRP_OPERATION_NOT_ALLOWED_GR_MUST_STOP = 3960; // SQLSTATE: HY000; Message: This operation cannot be performed while Group Replication is running; run STOP GROUP_REPLICATION first
    case ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY = 3961; // SQLSTATE: HY000; Message: Specifying an ON EMPTY clause after the ON ERROR clause in a JSON_TABLE column definition is deprecated syntax and will be removed in a future release. Specify ON EMPTY before ON ERROR instead.
    case ER_WARN_DEPRECATED_INNER_INTO = 3962; // SQLSTATE: HY000; Message: The INTO clause is deprecated inside query blocks of query expressions and will be removed in a future release. Please move the INTO clause to the end of statement instead.
    case ER_WARN_DEPRECATED_VALUES_FUNCTION_ALWAYS_NULL = 3963; // SQLSTATE: HY000; Message: The VALUES function is deprecated and will be removed in a future release. It always returns NULL in this context. If you meant to access a value from the VALUES clause of the INSERT statement, consider using an alias (INSERT INTO ... VALUES (...) AS alias) and reference alias.col instead of VALUES(col) in the ON DUPLICATE KEY UPDATE clause.
    case ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS = 3964; // SQLSTATE: HY000; Message: SQL_CALC_FOUND_ROWS is deprecated and will be removed in a future release. Consider using two separate queries instead.
    case ER_WARN_DEPRECATED_FOUND_ROWS = 3965; // SQLSTATE: HY000; Message: FOUND_ROWS() is deprecated and will be removed in a future release. Consider using COUNT(*) instead.
    case ER_MISSING_JSON_VALUE = 3966; // SQLSTATE: 22035; Message: No value was found by '%s' on the specified path.
    case ER_MULTIPLE_JSON_VALUES = 3967; // SQLSTATE: 22034; Message: More than one value was found by '%s' on the specified path.
    case ER_HOSTNAME_TOO_LONG = 3968; // SQLSTATE: HY000; Message: Hostname cannot be longer than %d characters.
    case ER_GROUP_REPLICATION_USER_EMPTY_MSG = 3970; // SQLSTATE: HY000; Message: The START GROUP_REPLICATION command failed since the username provided for recovery channel is empty.
    case ER_GROUP_REPLICATION_USER_MANDATORY_MSG = 3971; // SQLSTATE: HY000; Message: The START GROUP_REPLICATION command failed since the USER option was not provided with PASSWORD for recovery channel.
    case ER_GROUP_REPLICATION_PASSWORD_LENGTH = 3972; // SQLSTATE: HY000; Message: The START GROUP_REPLICATION command failed since the password provided for the recovery channel exceeds the maximum length of 32 characters.
    case ER_SUBQUERY_TRANSFORM_REJECTED = 3973; // SQLSTATE: HY000; Message: Statement requires a transform of a subquery to a non-SET operation (like IN2EXISTS, or subquery-to-LATERAL-derived-table). This is not allowed with optimizer switch 'subquery_to_derived' on.
    case ER_DA_GRP_RPL_RECOVERY_ENDPOINT_FORMAT = 3974; // SQLSTATE: HY000; Message: Invalid input value for recovery socket endpoints '%s'. Please, provide a valid, comma separated, list of endpoints (IP:port).
    case ER_DA_GRP_RPL_RECOVERY_ENDPOINT_INVALID = 3975; // SQLSTATE: HY000; Message: The server is not listening on endpoint '%s'. Only endpoints that the server is listening on are valid recovery endpoints.
    case ER_WRONG_VALUE_FOR_VAR_PLUS_ACTIONABLE_PART = 3976; // SQLSTATE: HY000; Message: Variable '%s' cannot be set to the value of '%s'. %s
    case ER_STATEMENT_NOT_ALLOWED_AFTER_START_TRANSACTION = 3977; // SQLSTATE: HY000; Message: Only BINLOG INSERT, COMMIT and ROLLBACK statements are allowed after CREATE TABLE with START TRANSACTION statement.
    case ER_FOREIGN_KEY_WITH_ATOMIC_CREATE_SELECT = 3978; // SQLSTATE: HY000; Message: Foreign key creation is not allowed with CREATE TABLE as SELECT and CREATE TABLE with START TRANSACTION statement.
    case ER_NOT_ALLOWED_WITH_START_TRANSACTION = 3979; // SQLSTATE: HY000; Message: START TRANSACTION clause cannot be used %s
    case ER_INVALID_JSON_ATTRIBUTE = 3980; // SQLSTATE: HY000; Message: Invalid json attribute, error: "%s" at pos %u: '%s'
    case ER_ENGINE_ATTRIBUTE_NOT_SUPPORTED = 3981; // SQLSTATE: HY000; Message: Storage engine '%s' does not support ENGINE_ATTRIBUTE.
    case ER_INVALID_USER_ATTRIBUTE_JSON = 3982; // SQLSTATE: HY000; Message: The user attribute must be a valid JSON object
    case ER_INNODB_REDO_DISABLED = 3983; // SQLSTATE: HY000; Message: Cannot perform operation as InnoDB redo logging is disabled. Please retry after enabling redo log with ALTER INSTANCE
    case ER_INNODB_REDO_ARCHIVING_ENABLED = 3984; // SQLSTATE: HY000; Message: Cannot perform operation as InnoDB is archiving redo log. Please retry after stopping redo archive by invoking innodb_redo_log_archive_stop()
    case ER_MDL_OUT_OF_RESOURCES = 3985; // SQLSTATE: HY000; Message: Not enough resources to complete lock request.
    case ER_IMPLICIT_COMPARISON_FOR_JSON = 3986; // SQLSTATE: HY000; Message: Evaluating a JSON value in SQL boolean context does an implicit comparison against JSON integer 0; if this is not what you want, consider converting JSON to a SQL numeric type with JSON_VALUE RETURNING
    case ER_FUNCTION_DOES_NOT_SUPPORT_CHARACTER_SET = 3987; // SQLSTATE: HY000; Message: The function %s does not support the character set '%s'.
    case ER_IMPOSSIBLE_STRING_CONVERSION = 3988; // SQLSTATE: HY000; Message: Conversion from collation %s into %s impossible for %s
    case ER_SCHEMA_READ_ONLY = 3989; // SQLSTATE: HY000; Message: Schema '%s' is in read only mode.
    case ER_RPL_ASYNC_RECONNECT_GTID_MODE_OFF = 3990; // SQLSTATE: HY000; Message: Failed to enable Asynchronous Replication Connection Failover feature. The CHANGE REPLICATION SOURCE TO SOURCE_CONNECTION_AUTO_FAILOVER = 1 can only be set when @@GLOBAL.GTID_MODE = ON.
    case ER_RPL_ASYNC_RECONNECT_AUTO_POSITION_OFF = 3991; // SQLSTATE: HY000; Message: Failed to enable Asynchronous Replication Connection Failover feature. The CHANGE REPLICATION SOURCE TO SOURCE_CONNECTION_AUTO_FAILOVER = 1 can only be set when SOURCE_AUTO_POSITION option of CHANGE REPLICATION SOURCE TO is enabled.
    case ER_DISABLE_GTID_MODE_REQUIRES_ASYNC_RECONNECT_OFF = 3992; // SQLSTATE: HY000; Message: The @@GLOBAL.GTID_MODE = %s cannot be executed because Asynchronous Replication Connection Failover is enabled i.e. CHANGE REPLICATION SOURCE TO SOURCE_CONNECTION_AUTO_FAILOVER = 1.
    case ER_DISABLE_AUTO_POSITION_REQUIRES_ASYNC_RECONNECT_OFF = 3993; // SQLSTATE: HY000; Message: CHANGE REPLICATION SOURCE TO SOURCE_AUTO_POSITION = 0 cannot be executed because Asynchronous Replication Connection Failover is enabled i.e. CHANGE REPLICATION SOURCE TO SOURCE_CONNECTION_AUTO_FAILOVER = 1.
    case ER_INVALID_PARAMETER_USE = 3994; // SQLSTATE: HY000; Message: Invalid use of parameters in '%s'
    case ER_CHARACTER_SET_MISMATCH = 3995; // SQLSTATE: HY000; Message: Character set '%s' cannot be used in conjunction with '%s' in call to %s.
    case ER_WARN_VAR_VALUE_CHANGE_NOT_SUPPORTED = 3996; // SQLSTATE: HY000; Message: Changing %s not supported on this platform. Falling back to the default.
    case ER_INVALID_TIME_ZONE_INTERVAL = 3997; // SQLSTATE: HY000; Message: Invalid time zone interval: '%s'
    case ER_INVALID_CAST = 3998; // SQLSTATE: HY000; Message: Cannot cast value to %s.
    case ER_HYPERGRAPH_NOT_SUPPORTED_YET = 3999; // SQLSTATE: 42000; Message: The hypergraph optimizer does not yet support '%s'
    case ER_WARN_HYPERGRAPH_EXPERIMENTAL = 4000; // SQLSTATE: HY000; Message: The hypergraph optimizer is highly experimental and is meant for testing only. Do not enable it unless you are a MySQL developer.
    case ER_DA_NO_ERROR_LOG_PARSER_CONFIGURED = 4001; // SQLSTATE: HY000; Message: None of the log-sinks selected with --log-error-services=... provides a log-parser. The server will not be able to make the previous runs' error-logs available in performance_schema.error_log.
    case ER_DA_ERROR_LOG_TABLE_DISABLED = 4002; // SQLSTATE: HY000; Message: None of the log-sinks selected in @@global.log_error_services supports writing to the performance schema. The server will not be able to make the current runs' error events available in performance_schema.error_log. To change this, add a log-sink that supports the performance schema to @@global.log_error_services.
    case ER_DA_ERROR_LOG_MULTIPLE_FILTERS = 4003; // SQLSTATE: HY000; Message: @@global.log_error_services lists more than one log-filter service. This is discouraged as it will make it hard to understand which rule in which filter affected a log-event.
    case ER_DA_CANT_OPEN_ERROR_LOG = 4004; // SQLSTATE: HY000; Message: Could not open file '%s' for error logging%s%s
    case ER_USER_REFERENCED_AS_DEFINER = 4005; // SQLSTATE: HY000; Message: User %s is referenced as a definer account in %s.
    case ER_CANNOT_USER_REFERENCED_AS_DEFINER = 4006; // SQLSTATE: HY000; Message: Operation %s failed for %s as it is referenced as a definer account in %s.
    case ER_REGEX_NUMBER_TOO_BIG = 4007; // SQLSTATE: HY000; Message: Decimal number in regular expression is too large.
    case ER_SPVAR_NONINTEGER_TYPE = 4008; // SQLSTATE: HY000; Message: The variable "%s" has a non-integer based type
    case WARN_UNSUPPORTED_ACL_TABLES_READ = 4009; // SQLSTATE: HY000; Message: Reads with serializable isolation/SELECT FOR SHARE are not supported for ACL tables.
    case ER_BINLOG_UNSAFE_ACL_TABLE_READ_IN_DML_DDL = 4010; // SQLSTATE: HY000; Message: The statement is unsafe because it updates a table depending on ACL table read operation. As storage engine row locks are skipped for ACL table, it may not have same effect on source and replica.
    case ER_STOP_REPLICA_MONITOR_IO_THREAD_TIMEOUT = 4011; // SQLSTATE: HY000; Message: STOP REPLICA command execution is incomplete: Replica Monitor thread got the stop signal, thread is busy, Monitor thread will stop once the current task is complete.
    case ER_STARTING_REPLICA_MONITOR_IO_THREAD = 4012; // SQLSTATE: HY000; Message: The Replica Monitor thread failed to start.
    case ER_CANT_USE_ANONYMOUS_TO_GTID_WITH_GTID_MODE_NOT_ON = 4013; // SQLSTATE: HY000; Message: Replication cannot start%s with ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS = LOCAL|<UUID> as this server uses @@GLOBAL.GTID_MODE <> ON.
    case ER_CANT_COMBINE_ANONYMOUS_TO_GTID_AND_AUTOPOSITION = 4014; // SQLSTATE: HY000; Message: The options ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS = LOCAL|<UUID> and SOURCE_AUTO_POSITION = 1 cannot be used together.
    case ER_ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_REQUIRES_GTID_MODE_ON = 4015; // SQLSTATE: HY000; Message: CHANGE REPLICATION SOURCE TO ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS = LOCAL|<UUID> cannot be executed because @@GLOBAL.GTID_MODE <> ON.
    case ER_SQL_REPLICA_SKIP_COUNTER_USED_WITH_GTID_MODE_ON = 4016; // SQLSTATE: HY000; Message: The value of sql_replica_skip_counter will only take effect for channels running with ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS <> OFF.
    case ER_USING_ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_AS_LOCAL_OR_UUID = 4017; // SQLSTATE: HY000; Message: Using ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS creates limitations on the replication topology - you cannot fail over between downstream and upstream servers. Only use this option if it is not possible to enable GTIDs on the source, for instance, because of lack of permissions. If possible, use the procedure for enabling GTID transactions online instead, as described in the documentation.
    case ER_CANT_SET_SQL_AFTER_OR_BEFORE_GTIDS_WITH_ANONYMOUS_TO_GTID = 4019; // SQLSTATE: HY000; Message: The SQL_AFTER_GTIDS or SQL_BEFORE_GTIDS clauses for START REPLICA cannot be used when the replication channel is configured with ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS = LOCAL|<UUID>.
    case ER_ANONYMOUS_TO_GTID_UUID_SAME_AS_GROUP_NAME = 4020; // SQLSTATE: HY000; Message: Replication '%s' is configured with ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS = <UUID> where the UUID value is equal to the group_replication_group_name
    case ER_CANT_USE_SAME_UUID_AS_GROUP_NAME = 4021; // SQLSTATE: HY000; Message: CHANGE REPLICATION SOURCE TO ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS = <UUID> cannot be executed because the UUID value is equal to the group_replication_group_name.
    case ER_GRP_RPL_RECOVERY_CHANNEL_STILL_RUNNING = 4022; // SQLSTATE: HY000; Message: The group_replication_recovery channel is still running, most likely it is waiting for a database/table lock, which is preventing the channel from stopping. Please check database/table locks, including the ones created by backup tools.
    case ER_INNODB_INVALID_AUTOEXTEND_SIZE_VALUE = 4023; // SQLSTATE: HY000; Message: AUTOEXTEND_SIZE should be a multiple of %uM
    case ER_INNODB_INCOMPATIBLE_WITH_TABLESPACE = 4024; // SQLSTATE: HY000; Message: InnoDB: "%s" not allowed with general tablespaces
    case ER_INNODB_AUTOEXTEND_SIZE_OUT_OF_RANGE = 4025; // SQLSTATE: HY000; Message: AUTOEXTEND_SIZE value should be between %uM and %uM
    case ER_CANNOT_USE_AUTOEXTEND_SIZE_CLAUSE = 4026; // SQLSTATE: HY000; Message: AUTOEXTEND_SIZE clause is not valid for %s tablespace.
    case ER_ROLE_GRANTED_TO_ITSELF = 4027; // SQLSTATE: HY000; Message: User account %s is directly or indirectly granted to the role %s. The GRANT would create a loop
    case ER_TABLE_MUST_HAVE_A_VISIBLE_COLUMN = 4028; // SQLSTATE: HY000; Message: A table must have at least one visible column.
    case ER_INNODB_COMPRESSION_FAILURE = 4029; // SQLSTATE: HY000; Message: Compression failed with the following error : %s
    case ER_WARN_ASYNC_CONN_FAILOVER_NETWORK_NAMESPACE = 4030; // SQLSTATE: HY000; Message: The parameter network_namespace is reserved for future use. Please use the CHANGE REPLICATION SOURCE command to set channel network_namespace parameter.
    case ER_CLIENT_INTERACTION_TIMEOUT = 4031; // SQLSTATE: HY000; Message: The client was disconnected by the server because of inactivity. See wait_timeout and interactive_timeout for configuring this behavior.
    case ER_INVALID_CAST_TO_GEOMETRY = 4032; // SQLSTATE: 22S01; Message: Invalid cast from %s to %s.
    case ER_INVALID_CAST_POLYGON_RING_DIRECTION = 4033; // SQLSTATE: 22S04; Message: Invalid cast from %s to %s. A polygon ring is in the wrong direction.
    case ER_GIS_DIFFERENT_SRIDS_AGGREGATION = 4034; // SQLSTATE: 22S05; Message: Arguments to function %s contains geometries with different SRIDs: %u and %u. All geometries must have the same SRID.
    case ER_RELOAD_KEYRING_FAILURE = 4035; // SQLSTATE: HY000; Message: Keyring reload failed. Please check error log for more details.
    case ER_SDI_GET_KEYS_INVALID_TABLESPACE = 4036; // SQLSTATE: HY000; Message: Tablespace '%s' is invalid for SDI operations.
    case ER_CHANGE_RPL_SRC_WRONG_COMPRESSION_ALGORITHM_SIZE = 4037; // SQLSTATE: HY000; Message: Value too long setting SOURCE_COMPRESSION_ALGORITHMS option to a %d chars long string for channel '%s'.
    case ER_CANT_USE_SAME_UUID_AS_VIEW_CHANGE_UUID = 4039; // SQLSTATE: HY000; Message: CHANGE REPLICATION SOURCE TO ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS = <UUID> cannot be executed because the UUID value is equal to the group_replication_view_change_uuid.
    case ER_ANONYMOUS_TO_GTID_UUID_SAME_AS_VIEW_CHANGE_UUID = 4040; // SQLSTATE: HY000; Message: Replication '%s' is configured with ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS = <UUID> where the UUID value is equal to the group_replication_view_change_uuid
    case ER_GRP_RPL_VIEW_CHANGE_UUID_FAIL_GET_VARIABLE = 4041; // SQLSTATE: HY000; Message: Unable to retrieve group_replication_view_change_uuid variable during server checks on replication operations.
    case ER_WARN_ADUIT_LOG_MAX_SIZE_AND_PRUNE_SECONDS = 4042; // SQLSTATE: HY000; Message: Both audit_log_max_size and audit_log_prune_seconds are set to non-zero. audit_log_max_size takes precedence and audit_log_prune_seconds is ignored
    case ER_WARN_ADUIT_LOG_MAX_SIZE_CLOSE_TO_ROTATE_ON_SIZE = 4043; // SQLSTATE: HY000; Message: audit_log_rotate_on_size is not granular enough for the value of audit_log_max_size supplied. Should be at least %d times smaller.
    case ER_KERBEROS_CREATE_USER = 4044; // SQLSTATE: HY000; Message: Create/Alter user has failed, Configured user realm as authentication string is empty, Please make sure to configure authentication string as user realm.
    case ER_INSTALL_PLUGIN_CONFLICT_CLIENT = 4045; // SQLSTATE: HY000; Message: Cannot install the %s plugin when the %s plugin is installed.
    case ER_DA_ERROR_LOG_COMPONENT_FLUSH_FAILED = 4046; // SQLSTATE: HY000; Message: %d error logging component(s) failed to flush. For file-based logs this can happen when the path or permissions of the log-file have changed. Failure to flush filed-based logs may affect log-rotation.
    case ER_WARN_SQL_AFTER_MTS_GAPS_GAP_NOT_CALCULATED = 4047; // SQLSTATE: HY000; Message: The until clause SQL_AFTER_MTS_GAPS is being used for channel '%s' when GTID_MODE = ON and SOURCE_AUTO_POSITION=1 meaning the server did not compute internally what gaps may exist in the relay log transaction execution. To close any execution gaps use either the SQL_BEFORE_GTIDS or SQL_AFTER_GTIDS until clause.
    case ER_INVALID_ASSIGNMENT_TARGET = 4048; // SQLSTATE: 42000; Message: Invalid target for assignment in INSERT or UPDATE statement '%s'.
    case ER_OPERATION_NOT_ALLOWED_ON_GR_SECONDARY = 4049; // SQLSTATE: HY000; Message: This operation cannot be performed on a Group Replication secondary member, it must be done on the group primary.
    case ER_GRP_RPL_FAILOVER_CHANNEL_STATUS_PROPAGATION = 4050; // SQLSTATE: HY000; Message: Unable to propagate the SOURCE_CONNECTION_AUTO_FAILOVER value for channel '%s' to group replication members. Please retry the operation.
    case ER_WARN_AUDIT_LOG_FORMAT_UNIX_TIMESTAMP_ONLY_WHEN_JSON = 4051; // SQLSTATE: HY000; Message: audit_log_format_unix_timestamp is applicable only when audit_log_format = JSON.
    case ER_INVALID_MFA_PLUGIN_SPECIFIED = 4052; // SQLSTATE: HY000; Message: Invalid plugin "%s" specified as %d factor during "%s".
    case ER_IDENTIFIED_BY_UNSUPPORTED = 4053; // SQLSTATE: HY000; Message: IDENTIFIED BY clause during "%s" not supported for plugin "%s".
    case ER_INVALID_PLUGIN_FOR_REGISTRATION = 4054; // SQLSTATE: HY000; Message: This operation is not supported for plugin "%s".
    case ER_PLUGIN_REQUIRES_REGISTRATION = 4055; // SQLSTATE: HY000; Message: Authentication plugin requires registration. Please refer ALTER USER syntax or set --register-factor command line option to do registration.
    case ER_MFA_METHOD_EXISTS = 4056; // SQLSTATE: HY000; Message: %d factor authentication method exists. Please do ALTER USER... DROP %d factor before doing this operation OR do ALTER USER... MODIFY %d factor... to modify existing %d factor authentication method.
    case ER_MFA_METHOD_NOT_EXISTS = 4057; // SQLSTATE: HY000; Message: %d factor authentication method doesn't exist. Please do ALTER USER... ADD %d factor... before doing this operation.
    case ER_AUTHENTICATION_POLICY_MISMATCH = 4058; // SQLSTATE: HY000; Message: %d factor authentication method does not match against authentication policy. Please refer @@authentication_policy system variable.
    case ER_PLUGIN_REGISTRATION_DONE = 4059; // SQLSTATE: HY000; Message: The registration for %d factor authentication method is already completed. You cannot perform registration multiple times.
    case ER_INVALID_USER_FOR_REGISTRATION = 4060; // SQLSTATE: HY000; Message: The registration operation is not allowed for user '%s'@'%s'. The operation can only be performed in user's own session.
    case ER_USER_REGISTRATION_FAILED = 4061; // SQLSTATE: HY000; Message: Authentication plugin's registration failed.
    case ER_MFA_METHODS_INVALID_ORDER = 4062; // SQLSTATE: HY000; Message: %d factor authentication method should be added before %d factor authentication method.
    case ER_MFA_METHODS_IDENTICAL = 4063; // SQLSTATE: HY000; Message: Authentication factor should be different.
    case ER_INVALID_MFA_OPERATIONS_FOR_PASSWORDLESS_USER = 4064; // SQLSTATE: HY000; Message: The operation "%s" cannot be performed for user '%s'@'%s' configured to connect without a password.
    case ER_CHANGE_REPLICATION_SOURCE_NO_OPTIONS_FOR_GTID_ONLY = 4065; // SQLSTATE: HY000; Message: GTID_ONLY cannot be enabled for replication channel '%s'. You need GTID_MODE = ON, SOURCE_AUTO_POSITION = 1 and REQUIRE_ROW_FORMAT = 1.
    case ER_CHANGE_REP_SOURCE_CANT_DISABLE_REQ_ROW_FORMAT_WITH_GTID_ONLY = 4066; // SQLSTATE: HY000; Message: REQUIRE_ROW_FORMAT cannot be disabled for replication channel '%s' when GTID_ONLY=1.
    case ER_CHANGE_REP_SOURCE_CANT_DISABLE_AUTO_POSITION_WITH_GTID_ONLY = 4067; // SQLSTATE: HY000; Message: SOURCE_AUTO_POSITION cannot be disabled for replication channel '%s' when GTID_ONLY=1.
    case ER_CHANGE_REP_SOURCE_CANT_DISABLE_GTID_ONLY_WITHOUT_POSITIONS = 4068; // SQLSTATE: HY000; Message: When disabling GTID_ONLY and SOURCE_AUTO_POSITION FOR CHANNEL '%s' you must provide SOURCE_LOG_FILE and SOURCE_LOG_POS as source positions are invalid.
    case ER_CHANGE_REP_SOURCE_CANT_DISABLE_AUTO_POS_WITHOUT_POSITIONS = 4069; // SQLSTATE: HY000; Message: When disabling SOURCE_AUTO_POSITION FOR CHANNEL '%s' you must provide SOURCE_LOG_FILE and SOURCE_LOG_POS as source positions are invalid.
    case ER_CHANGE_REP_SOURCE_GR_CHANNEL_WITH_GTID_MODE_NOT_ON = 4070; // SQLSTATE: HY000; Message: When configuring a group replication channel you must do it when GTID_MODE = ON.
    case ER_CANT_USE_GTID_ONLY_WITH_GTID_MODE_NOT_ON = 4071; // SQLSTATE: HY000; Message: Replication cannot start%s with GTID_ONLY = 1 as this server uses @@GLOBAL.GTID_MODE <> ON.
    case ER_WARN_C_DISABLE_GTID_ONLY_WITH_SOURCE_AUTO_POS_INVALID_POS = 4072; // SQLSTATE: HY000; Message: The replication positions relative to the source may be out-of-date on channel '%s', due to the use of GTID_ONLY=1. The out-of-date positions can still be used in some cases so, in order to update them, we suggest that you start the replication to receive and apply at least one transaction, which will set the positions to valid values.
    case ER_DA_SSL_FIPS_MODE_ERROR = 4073; // SQLSTATE: HY000; Message: SSL fips mode error: %s
    case ER_VALUE_OUT_OF_RANGE = 4074; // SQLSTATE: HY000; Message: %s=%llu is outside the valid range [%llu,%llu]. %llu will be used.
    case ER_FULLTEXT_WITH_ROLLUP = 4075; // SQLSTATE: HY000; Message: MATCH does not support ROLLUP columns.
    case ER_REGEXP_MISSING_RESOURCE = 4076; // SQLSTATE: HY000; Message: Missing locale resource in regular expression library.
    case ER_WARN_REGEXP_USING_DEFAULT = 4077; // SQLSTATE: HY000; Message: Regular expression library used default (root) locale.
    case ER_REGEXP_MISSING_FILE = 4078; // SQLSTATE: HY000; Message: Missing data file in regular expression library.
    case ER_WARN_DEPRECATED_COLLATION = 4079; // SQLSTATE: HY000; Message: '%s' is a collation of the deprecated character set %s. Please consider using %s with an appropriate collation instead.
    case ER_CONCURRENT_PROCEDURE_USAGE = 4080; // SQLSTATE: HY000; Message: The %s was called when there was already another concurrent call to this procedure. No action was taken. Wait for other calls to %s to finish before retrying.
    case ER_DA_GLOBAL_CONN_LIMIT = 4081; // SQLSTATE: HY000; Message: Connection closed. Global connection memory limit %llu bytes exceeded. Consumed %llu bytes.
    case ER_DA_CONN_LIMIT = 4082; // SQLSTATE: HY000; Message: Connection closed. Connection memory limit %llu bytes exceeded. Consumed %llu bytes.
    case ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE_INSTANT = 4083; // SQLSTATE: HY000; Message: Need to rebuild the table to change column type
    case ER_WARN_SF_UDF_NAME_COLLISION = 4084; // SQLSTATE: HY000; Message: This function '%s' has the same name as a loadable function (UDF). To invoke the stored function, it is necessary to qualify it with the schema name.
    case ER_CANNOT_PURGE_BINLOG_WITH_BACKUP_LOCK = 4085; // SQLSTATE: HY000; Message: Could not purge binary logs since another session is executing LOCK INSTANCE FOR BACKUP. Wait for that session to release the lock.
    case ER_TOO_MANY_WINDOWS = 4086; // SQLSTATE: HY000; Message: Too many windows in SELECT: %d. Maximum allowed is %d. Use named windows to share windows between window functions.
    case ER_MYSQLBACKUP_CLIENT_MSG = 4087; // SQLSTATE: HY000; Message: %s
    case ER_COMMENT_CONTAINS_INVALID_STRING = 4088; // SQLSTATE: HY000; Message: Comment for %s '%s' contains an invalid %s character string: '%s'.
    case ER_DEFINITION_CONTAINS_INVALID_STRING = 4089; // SQLSTATE: HY000; Message: Definition of %s '%s.%s' contains an invalid %s character string: '%s'.
    case ER_CANT_EXECUTE_COMMAND_WITH_ASSIGNED_GTID_NEXT = 4090; // SQLSTATE: HY000; Message: Can't execute the given command when @@SESSION.GTID_NEXT == 'UUID:NUMBER'.
    case ER_XA_TEMP_TABLE = 4091; // SQLSTATE: HY000; Message: XA: Temporary tables cannot be accessed inside XA transactions when xa_detach_on_prepare=ON
    case ER_INNODB_MAX_ROW_VERSION = 4092; // SQLSTATE: HY000; Message: Maximum row versions reached for table %s. No more columns can be added or dropped instantly. Please use COPY/INPLACE.
    case ER_OPERATION_NOT_ALLOWED_WHILE_PRIMARY_CHANGE_IS_RUNNING = 4094; // SQLSTATE: HY000; Message: All queries have been blocked while function 'group_replication_set_as_primary()' is executing. Please refer timeout parameter of function 'group_replication_set_as_primary()'.
    case ER_WARN_DEPRECATED_DATETIME_DELIMITER = 4095; // SQLSTATE: HY000; Message: Delimiter '%s' in position %d in datetime value '%s' at row %d is deprecated. Prefer the standard '%c'.
    case ER_WARN_DEPRECATED_SUPERFLUOUS_DELIMITER = 4096; // SQLSTATE: HY000; Message: Delimiter '%s' in position %d in datetime value '%s' at row %d is superfluous and is deprecated. Please remove.
    case ER_CANNOT_PERSIST_SENSITIVE_VARIABLES = 4097; // SQLSTATE: HY000; Message: Cannot persist SENSITIVE system variable '%s' because keyring component support is unavailable.
    case ER_WARN_CANNOT_SECURELY_PERSIST_SENSITIVE_VARIABLES = 4098; // SQLSTATE: HY000; Message: SENSITIVE system variable '%s' was persisted without encryption. Consider restarting server with keyring component support to persist SENSITIVE variables securely.
    case ER_WARN_TRG_ALREADY_EXISTS = 4099; // SQLSTATE: HY000; Message: Trigger '%s' already exists on the table '%s'.'%s'.
    case ER_IF_NOT_EXISTS_UNSUPPORTED_TRG_EXISTS_ON_DIFFERENT_TABLE = 4100; // SQLSTATE: HY000; Message: Trigger '%s'.'%s' already exists on a different table. The 'IF NOT EXISTS' clause is only supported for triggers associated with the same table.
    case ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION = 4101; // SQLSTATE: HY000; Message: This function '%s' has the same name as a native function. The 'IF NOT EXISTS' clause is not supported while creating a loadable function with the same name as a native function.
    case ER_SET_PASSWORD_AUTH_PLUGIN_ERROR = 4102; // SQLSTATE: HY000; Message: SET PASSWORD has no significance for user '%s'@'%s' as the authentication method used doesn't store authentication data in the MySQL server. Please consider using ALTER USER instead if you want to change authentication parameters.
    case ER_SRS_INVALID_LATITUDE_OF_ORIGIN = 4105; // SQLSTATE: SR002; Message: Latitude of origin must be within [-90, 90] degrees, specified in the SRS angular unit.
    case ER_SRS_INVALID_LONGITUDE_OF_ORIGIN = 4106; // SQLSTATE: SR002; Message: Longitude of origin must be within (-180, 180] degrees, specified in the SRS angular unit.
    case ER_SRS_UNUSED_PROJ_PARAMETER_PRESENT = 4107; // SQLSTATE: SR002; Message: The spatial reference system definition for SRID %u contains unused projection parameter "%s".
    case ER_GIPK_COLUMN_EXISTS = 4108; // SQLSTATE: HY000; Message: Failed to generate invisible primary key. Column 'my_row_id' already exists.
    case ER_GIPK_FAILED_AUTOINC_COLUMN_EXISTS = 4109; // SQLSTATE: HY000; Message: Failed to generate invisible primary key. Auto-increment column already exists.
    case ER_GIPK_COLUMN_ALTER_NOT_ALLOWED = 4110; // SQLSTATE: HY000; Message: Altering generated invisible primary key column 'my_row_id' is not allowed.
    case ER_DROP_PK_COLUMN_TO_DROP_GIPK = 4111; // SQLSTATE: HY000; Message: Please drop primary key column to be able to drop generated invisible primary key.
    case ER_CREATE_SELECT_WITH_GIPK_DISALLOWED_IN_SBR = 4112; // SQLSTATE: HY000; Message: Generating an invisible primary key for a table created using CREATE TABLE ... SELECT ... is disallowed when binlog_format=STATEMENT. It cannot be guaranteed that the SELECT retrieves rows in the same order on source and replica. Therefore, it cannot be guaranteed that the value generated for the generated implicit primary key column will be the same on source and replica for all rows. Use binlog_format=ROW or MIXED to execute this statement.
    case ER_CTE_RECURSIVE_NOT_UNION = 4114; // SQLSTATE: HY000; Message: Recursive table reference in EXCEPT or INTERSECT operand is not allowed.
    case ER_COMMAND_BACKEND_FAILED_TO_FETCH_SECURITY_CTX = 4115; // SQLSTATE: HY000; Message: Error when trying to fetch information from security context object, when trying to connect the server.
    case ER_COMMAND_SERVICE_BACKEND_FAILED = 4116; // SQLSTATE: HY000; Message: Error in command service backend interface, because of : "%s"
    case ER_CLIENT_FILE_PRIVILEGE_FOR_REPLICATION_CHECKS = 4117; // SQLSTATE: HY000; Message: The PRIVILEGE_CHECKS_USER for channel '%s' would need FILE privilege to execute a LOAD DATA INFILE statement replicated in statement format. Consider using binlog_format=ROW on source. If the replicated events are trusted, recover from the failure by temporarily granting FILE to the PRIVILEGE_CHECKS_USER.
    case ER_GROUP_REPLICATION_FORCE_MEMBERS_COMMAND_FAILURE = 4118; // SQLSTATE: HY000; Message: The 'SET GLOBAL group_replication_force_members=%s' command encountered a failure. %s
    case ER_WARN_DEPRECATED_IDENT = 4119; // SQLSTATE: HY000; Message: Using %s as unquoted identifier is deprecated, please use quotes or rename the identifier.
    case ER_INTERSECT_ALL_MAX_DUPLICATES_EXCEEDED = 4120; // SQLSTATE: HY000; Message: Max number of duplicate rows in INTERSECT ALL exceeded.
    case ER_TP_QUERY_THRS_PER_GRP_EXCEEDS_TXN_THR_LIMIT = 4121; // SQLSTATE: HY000; Message: Query threads count(%u) exceeds transaction threads limit(%u) per group. Please use query threads count per group smaller or equal to max transaction threads limit per group
    case ER_BAD_TIMESTAMP_FORMAT = 4122; // SQLSTATE: HY000; Message: Invalid timestamp format in %s udf
    case ER_SHAPE_PRIDICTION_UDF = 4123; // SQLSTATE: HY000; Message: SHAPE_PREDICTION UDF %s got error because of %s.
    case ER_SRS_INVALID_HEIGHT = 4124; // SQLSTATE: SR002; Message: Height parameter must be non negative.
    case ER_SRS_INVALID_SCALING = 4125; // SQLSTATE: SR002; Message: Scaling parameter must be non negative.
    case ER_SRS_INVALID_ZONE_WIDTH = 4126; // SQLSTATE: SR002; Message: Zone width parameter must be an integer between 1-60.
    case ER_SRS_INVALID_LATITUDE_POLAR_STERE_VAR_A = 4127; // SQLSTATE: SR002; Message: Latitude of origin must be +-90 degrees, specified in the SRS angular unit, in Polar Stereographic (variant A) projection method (EPSG:9810).
    case ER_WARN_DEPRECATED_CLIENT_NO_SCHEMA_OPTION = 4128; // SQLSTATE: HY000; Message: The client is using a deprecated CLIENT_NO_SCHEMA client option. CLIENT_NO_SCHEMA will be removed in a future release.
    case ER_TABLE_NOT_EMPTY = 4129; // SQLSTATE: HY000; Message: Table '%s' is not empty.
    case ER_TABLE_NO_PRIMARY_KEY = 4130; // SQLSTATE: HY000; Message: Table '%s' has no primary key.
    case ER_TABLE_IN_SHARED_TABLESPACE = 4131; // SQLSTATE: HY000; Message: Table '%s' is in a shared tablespace.
    case ER_INDEX_OTHER_THAN_PK = 4132; // SQLSTATE: HY000; Message: Table '%s' has indexes other than primary key.
    case ER_LOAD_BULK_DATA_UNSORTED = 4133; // SQLSTATE: HY000; Message: [IN PRIMARY KEY ORDER] specified but data not sorted: '%s'
    case ER_BULK_EXECUTOR_ERROR = 4134; // SQLSTATE: HY000; Message: Bulk executor error: %s
    case ER_BULK_READER_LIBCURL_INIT_FAILED = 4135; // SQLSTATE: HY000; Message: Bulk reader failed to initialize libcurl
    case ER_BULK_READER_LIBCURL_ERROR = 4136; // SQLSTATE: HY000; Message: Bulk reader got libcurl error: %s
    case ER_BULK_READER_SERVER_ERROR = 4137; // SQLSTATE: HY000; Message: Bulk reader got error response from server: %ld
    case ER_BULK_READER_COMMUNICATION_ERROR = 4138; // SQLSTATE: HY000; Message: Bulk reader got error in communication with source server, check the error log for additional details.
    case ER_BULK_LOAD_DATA_FAILED = 4139; // SQLSTATE: HY000; Message: Bulk loader failed in Innodb storage engine, check the error log for additional details.
    case ER_BULK_LOADER_COLUMN_TOO_BIG_FOR_LEFTOVER_BUFFER = 4140; // SQLSTATE: HY000; Message: CSV column too big for leftover buffer.
    case ER_BULK_LOADER_COMPONENT_ERROR = 4141; // SQLSTATE: HY000; Message: Bulk loader component error: %s
    case ER_BULK_LOADER_FILE_CONTAINS_LESS_LINES_THAN_IGNORE_CLAUSE = 4142; // SQLSTATE: HY000; Message: The first file being loaded contained less lines than the ignore clause
    case ER_BULK_PARSER_MISSING_ENCLOSED_BY = 4143; // SQLSTATE: HY000; Message: Missing ENCLOSED BY character at row %ld in file '%s'. Add OPTIONALLY to the ENCLOSED BY clause to allow this input.
    case ER_BULK_PARSER_ROW_BUFFER_MAX_TOTAL_COLS_EXCEEDED = 4144; // SQLSTATE: HY000; Message: The number of input columns that need to be buffered for parsing exceeded predefined buffer max size for file '%s'.
    case ER_BULK_PARSER_COPY_BUFFER_SIZE_EXCEEDED = 4145; // SQLSTATE: HY000; Message: The column data that needed to be copied due to escaped characters exceeded the size of the internal copy buffer for file '%s'.
    case ER_BULK_PARSER_UNEXPECTED_END_OF_INPUT = 4146; // SQLSTATE: HY000; Message: Unexpected end of input found at row %ld in file '%s'. Data for some columns is missing.
    case ER_BULK_PARSER_UNEXPECTED_ROW_TERMINATOR = 4147; // SQLSTATE: HY000; Message: Unexpected row terminator found at row %ld in file '%s'. Data for some columns is missing.
    case ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_ENDING_ENCLOSED_BY = 4148; // SQLSTATE: HY000; Message: Unexpected characters after ending ENCLOSED BY character found at row %ld in file '%s'.
    case ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_NULL_ESCAPE = 4149; // SQLSTATE: HY000; Message: Unexpected characters after NULL escape (\\N) found at row %ld in file '%s'.
    case ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_COLUMN_TERMINATOR = 4150; // SQLSTATE: HY000; Message: Unexpected characters after column terminator found at row %ld in file '%s'.
    case ER_BULK_PARSER_INCOMPLETE_ESCAPE_SEQUENCE = 4151; // SQLSTATE: HY000; Message: Unexpected end of input found at row %ld in file '%s' resulting in incomplete escape sequence.
    case ER_LOAD_BULK_DATA_FAILED = 4152; // SQLSTATE: HY000; Message: LOAD BULK DATA into table '%s' failed: %s
    case ER_LOAD_BULK_DATA_WRONG_VALUE_FOR_FIELD = 4153; // SQLSTATE: HY000; Message: Incorrect %s value: '%s' for column '%s' at row %ld in file '%s'
    case ER_LOAD_BULK_DATA_WARN_NULL_TO_NOTNULL = 4154; // SQLSTATE: HY000; Message: NULL supplied to NOT NULL column '%s' at row %ld in file '%s'
    case ER_REQUIRE_TABLE_PRIMARY_KEY_CHECK_GENERATE_WITH_GR = 4155; // SQLSTATE: HY000; Message: On a Group Replication channel, setting REQUIRE_TABLE_PRIMARY_KEY_CHECK to 'GENERATE' is not allowed.
    case ER_CANT_CHANGE_SYS_VAR_IN_READ_ONLY_MODE = 4156; // SQLSTATE: HY000; Message: Cannot change the '%s' system variable in read-only mode.
    case ER_INNODB_INSTANT_ADD_DROP_NOT_SUPPORTED_MAX_SIZE = 4157; // SQLSTATE: HY000; Message: Column can't be added or dropped with ALGORITHM=INSTANT as either max possible row size already crosses max permissible row size or may cross it after add. Try ALGORITHM=INPLACE/COPY.
    case ER_INNODB_INSTANT_ADD_NOT_SUPPORTED_MAX_FIELDS = 4158; // SQLSTATE: HY000; Message: Column can't be added to '%s' with ALGORITHM=INSTANT anymore. Please try ALGORITHM=INPLACE/COPY.
    case ER_CANT_SET_PERSISTED = 4159; // SQLSTATE: HY000; Message: Failed to set persisted options.
    case ER_INSTALL_COMPONENT_SET_NULL_VALUE = 4160; // SQLSTATE: HY000; Message: The value supplied for %s in the SET list cannot be null
    case ER_INSTALL_COMPONENT_SET_UNUSED_VALUE = 4161; // SQLSTATE: HY000; Message: The assignment of %s in SET doesn't match any of the variables registered by the component(s)
    case ER_WARN_DEPRECATED_USER_DEFINED_COLLATIONS = 4162; // SQLSTATE: HY000; Message: '%s' is a user defined collation. User defined collations are deprecated and will be removed in a future release. Consider using a compiled collation instead.
    case ER_USER_LOCK_OVERLONG_NAME = 4163; // SQLSTATE: 42000; Message: User-level lock name '%s' should not exceed %d characters.
    case ER_WARN_NO_SPACE_VERSION_COMMENT = 4164; // SQLSTATE: HY000; Message: Immediately starting the version comment after the version number is deprecated and may change behavior in a future release. Please insert a white-space character after the version number.
    case ER_VALIDATE_PASSWORD_INSUFFICIENT_CHANGED_CHARACTERS = 4165; // SQLSTATE: HY000; Message: The new password must have at least '%u' characters that are different from the old password. It has only '%u' character(s) different. For this comparison, uppercase letters and lowercase letters are considered to be equal.
    case ER_WARN_DEPRECATED_WITH_NOTE = 4166; // SQLSTATE: HY000; Message: '%s' is deprecated and will be removed in a future release. %s
    case ER_LANGUAGE_COMPONENT = 6000; // SQLSTATE: HY000; Message: %s
    case ER_LANGUAGE_COMPONENT_NOT_AVAILABLE = 6001; // SQLSTATE: HY000; Message: Language component: Not available.
    case ER_LANGUAGE_COMPONENT_UNSUPPORTED_LANGUAGE = 6002; // SQLSTATE: HY000; Message: Language component: Unsupported language '%s'
    case ER_LANGUAGE_COMPONENT_CANNOT_UNINSTALL = 6003; // SQLSTATE: HY000; Message: Language component: Cannot uninstall due to connected sessions. Please disconnect all sessions and try again.
    case ER_SP_NO_ALTER_LANGUAGE = 6004; // SQLSTATE: HY000; Message: Altering the language of an existing routine is not possible.
    case ER_EXPLAIN_INTO_ANALYZE_NOT_SUPPORTED = 6005; // SQLSTATE: 0A000; Message: EXPLAIN ANALYZE does not support the INTO clause.
    case ER_EXPLAIN_INTO_IMPLICIT_FORMAT_NOT_SUPPORTED = 6006; // SQLSTATE: 0A000; Message: EXPLAIN INTO does not support implicit FORMAT.
    case ER_EXPLAIN_INTO_FORMAT_NOT_SUPPORTED = 6007; // SQLSTATE: 0A000; Message: EXPLAIN INTO does not support FORMAT=%s.
    case ER_NULL_CANT_BE_PERSISTED_FOR_READONLY = 6008; // SQLSTATE: HY000; Message: Trying to persist a NULL into a variable '%s' that's settable only on command line is not supported
    case ER_EXPLAIN_INTO_FOR_CONNECTION_NOT_SUPPORTED = 6009; // SQLSTATE: 0A000; Message: EXPLAIN FOR CONNECTION does not support the INTO clause.
    case ER_INNODB_IMPORT_WRONG_DROPPED_ENUM_LENGTH = 6010; // SQLSTATE: HY000; Message: Enum element name length %lu, is invalid for column %s
    case ER_INNODB_IMPORT_WRONG_NUMBER_OF_INDEXES_ZERO = 6011; // SQLSTATE: HY000; Message: Number of indexes in meta-data file is 0
    case ER_INNODB_IMPORT_WRONG_NUMBER_OF_INDEXES_TOO_HIGH = 6012; // SQLSTATE: HY000; Message: Number of indexes in meta-data file is too high: %llu
    case ER_INNODB_IMPORT_DROP_COL_METADATA_MISMATCH = 6013; // SQLSTATE: HY000; Message: DD metadata for INSTANT DROP column %s in target table doesn't match with CFG.
    case ER_INNODB_IMPORT_ENUM_NULL_TERMINATOR_MISSING = 6014; // SQLSTATE: HY000; Message: Enum/Set element name missing null terminator for column '%s'
    case ER_SIMULATED_INJECTION_ERROR = 6015; // SQLSTATE: HY000; Message: %s %s %zu.
    case ER_WARN_DEPRECATED_DYNAMIC_PRIV_IN_GRANT = 6016; // SQLSTATE: HY000; Message: The privilege '%s' is deprecated.
    case ER_BULK_MULTI_READER_OPEN_FILE_FAILED = 6017; // SQLSTATE: HY000; Message: Bulk Multi Reader: Failed to open file
    case ER_BULK_MULTI_READER_READ_FILE_FAILED = 6018; // SQLSTATE: HY000; Message: Bulk Multi Reader: Failed to read file
    case ER_BULK_MERGE_INVALID_CHUNK = 6019; // SQLSTATE: HY000; Message: Bulk Merge Loader: Invalid Chunk
    case ER_BULK_MERGE_NOT_ALL_CHUNKS_CONSUMED = 6020; // SQLSTATE: HY000; Message: Bulk Merge Loader: Not all chunks consumed
    case ER_BULK_WRITER_LIBCURL_INIT_FAILED = 6021; // SQLSTATE: HY000; Message: Bulk writer failed to initialize libcurl
    case ER_BULK_WRITER_LIBCURL_ERROR = 6022; // SQLSTATE: HY000; Message: Bulk writer got libcurl error: %s
    case ER_BULK_SORTING_LOADER_WRITE = 6023; // SQLSTATE: HY000; Message: Bulk Sorting Loader: Failed to write data to temporary file
    case ER_BULK_SORTING_LOADER_WAIT = 6024; // SQLSTATE: HY000; Message: Bulk Sorting Loader: Interrupted while waiting
    case ER_BULK_READER_OPEN_FILE_FAILED = 6025; // SQLSTATE: HY000; Message: Bulk Reader: Failed to access file %s
    case ER_BULK_LOAD_TABLE_HAS_INSTANT_COLS = 6026; // SQLSTATE: HY000; Message: Bulk Loader: Table '%s' has instantly added/dropped columns. Please TRUNCATE TABLE and retry.
    case ER_BULK_LOAD_RESOURCE = 6027; // SQLSTATE: HY000; Message: Bulk Loader: Not enough memory available. Memory needed for loading %s data: %s for %u threads, %s with minimal configuration. Total configured memory is %s, Available memory is %s.
    case ER_BULK_LOAD_SECONDARY_ENGINE = 6028; // SQLSTATE: HY000; Message: LOAD DATA with BULK Algorithm is not supported on a table with secondary engine.
    case ER_BULK_READER_ERROR = 6029; // SQLSTATE: HY000; Message: Bulk reader error: %s
    case ER_BULK_READER_FILE_DOESNT_EXIST = 6030; // SQLSTATE: HY000; Message: File not found, check whether it exists: %s
    case ER_BULK_READER_COULDNT_RESOLVE_HOST = 6031; // SQLSTATE: HY000; Message: Couldn't resolve host: %s
    case ER_START_REPLICA_CHANNEL_INVALID_CONFIGURATION = 6032; // SQLSTATE: HY000; Message: Cannot start replication channel '%s' because %s.
    case ER_CANNOT_EXECUTE_IN_PRIMARY = 6033; // SQLSTATE: HY000; Message: '%s' is not supported
    case ER_TOO_MANY_GROUP_BY_MODIFIER_BRANCHES = 6034; // SQLSTATE: HY000; Message: '%s' is supported with maximum %d elements in the GROUP BY list
    case ER_WARN_DEPRECATED_ENGINE_SYNTAX_NO_REPLACEMENT = 6035; // SQLSTATE: HY000; Message: '%s' for '%s' storage engine is deprecated and will be removed in a future release.
    case ER_QUALIFY_WITHOUT_WINDOW_FUNCTION = 6036; // SQLSTATE: HY000; Message: QUALIFY clause cannot be used without a window function.
    case ER_SUPPORTED_ONLY_WITH_HYPERGRAPH = 6037; // SQLSTATE: HY000; Message: '%s' can be used only if the hypergraph optimizer is enabled.
    case ER_SPECIFIC_ACCESS_DENIED = 6038; // SQLSTATE: HY000; Message: Access denied; you need %s privilege(s) for this operation
    case ER_CANT_SET_GTID_NEXT_TO_AUTOMATIC_TAGGED_WHEN_GTID_MODE_IS_OFF = 6039; // SQLSTATE: HY000; Message: @@SESSION.GTID_NEXT cannot be set to AUTOMATIC:<TAG> when @@GLOBAL.GTID_MODE = OFF or OFF_PERMISSIVE
    case ER_GTID_NEXT_TAG_GTID_MODE_OFF = 6040; // SQLSTATE: HY000; Message: @@SESSION.GTID_NEXT cannot be set to UUID:TAG:NUMBER when @@GLOBAL.GTID_MODE = OFF.
    case ER_LH_COL_NOT_NULLABLE = 6041; // SQLSTATE: HY000; Message: Column %d of %s : Column contains null but it is not nullable.
    case ER_LH_WARN_COL_MISSING_NOT_NULLABLE = 6042; // SQLSTATE: HY000; Message: Column %d of %s : Column is missing, but it is not nullable and no explicit default value is provided.
    case ER_LH_COL_IS_EMPTY = 6043; // SQLSTATE: HY000; Message: Column %d of %s : Column is empty.
    case ER_LH_COL_IS_EMPTY_WARN = 6044; // SQLSTATE: HY000; Message: Column %d of %s : Column is empty, setting default value.
    case ER_LH_BAD_VALUE = 6045; // SQLSTATE: HY000; Message: Column %d of %s : Invalid %s value.
    case ER_LH_DECIMAL_UNKNOWN_ERR = 6046; // SQLSTATE: HY000; Message: Column %d of %s : Unknown error while parsing decimal.
    case ER_LH_DECIMAL_OOM_ERR = 6047; // SQLSTATE: HY000; Message: Column %d of %s : Out of memory loading decimal.
    case ER_LH_WARN_DECIMAL_ROUNDING = 6048; // SQLSTATE: HY000; Message: Column %d of %s : Fraction exceeds schema, rounding value.
    case ER_LH_DECIMAL_PRECISION_EXCEEDS_SCHEMA = 6049; // SQLSTATE: HY000; Message: Column %d of %s : decimal precision exceeds schema.
    case ER_LH_EXCEEDS_MIN = 6050; // SQLSTATE: HY000; Message: Column %d of %s : %s exceeds min.
    case ER_LH_EXCEEDS_MAX = 6051; // SQLSTATE: HY000; Message: Column %d of %s : %s exceeds max.
    case ER_LH_WARN_EXCEEDS_MIN_TRUNCATING = 6052; // SQLSTATE: HY000; Message: Column %d of %s : %s exceeds min, setting to min value possible.
    case ER_LH_WARN_EXCEEDS_MAX_TRUNCATING = 6053; // SQLSTATE: HY000; Message: Column %d of %s : %s exceeds max, setting to max value possible.
    case ER_LH_REAL_IS_NAN = 6054; // SQLSTATE: HY000; Message: Column %d of %s : Real value is NaN.
    case ER_LH_OUT_OF_RANGE = 6055; // SQLSTATE: HY000; Message: Column %d of %s : %s value is out of range.
    case ER_LH_DATETIME_FORMAT = 6056; // SQLSTATE: HY000; Message: Column %d of %s : Error while applying %s format.
    case ER_LH_WARN_TRUNCATED = 6057; // SQLSTATE: HY000; Message: Column %d of %s : %s value was truncated.
    case ER_LH_CANNOT_CONVERT_STRING = 6058; // SQLSTATE: HY000; Message: Column %d of %s : Cannot convert string %s.
    case ER_LH_RESOURCE_PRINCIPAL_ERR = 6059; // SQLSTATE: HY000; Message: Resource principal error.
    case ER_LH_AWS_AUTH_ERR = 6060; // SQLSTATE: HY000; Message: AWS authentication error.
    case ER_LH_CSV_PARSING_ERR = 6061; // SQLSTATE: HY000; Message: %s:%lu: Parsing error found. %s.
    case ER_LH_COLUMN_MISMATCH_ERR = 6062; // SQLSTATE: HY000; Message: %s: Mismatch in the number of columns. Expected %u, found %u.
    case ER_LH_COLUMN_MAX_ERR = 6063; // SQLSTATE: HY000; Message: %s: More than %u column(s) found.
    case ER_LH_CHARSET_UNSUPPORTED = 6064; // SQLSTATE: HY000; Message: Column %d in %s: Charset is not supported.
    case ER_LH_PARQUET_DECIMAL_CONVERSION_ERR = 6065; // SQLSTATE: HY000; Message: Column %d in %s: Decimal conversion error.
    case ER_LH_STRING_TOO_LONG = 6066; // SQLSTATE: HY000; Message: Column %d in %s: String is too long.
    case ER_LH_RESOURCE_PRINCIPAL_BUCKET_ERR = 6067; // SQLSTATE: HY000; Message: Resource Principal endpoint is not configured. Cannot access following buckets: %s.
    case ER_LH_NO_FILES_FOUND = 6068; // SQLSTATE: HY000; Message: No files found corresponding to the following data locations: %s.
    case ER_LH_EMPTY_FILE = 6069; // SQLSTATE: HY000; Message: File %s is empty.
    case ER_LH_DUPLICATE_FILE = 6070; // SQLSTATE: HY000; Message: File %s was not processed (duplicate).
    case ER_LH_AVRO_SCHEMA_DEPTH_EXCEEDS_MAX = 6071; // SQLSTATE: HY000; Message: File %s: Avro schema depth exceeds max allowed depth.
    case ER_LH_AVRO_HEADER_MISMATCH = 6072; // SQLSTATE: HY000; Message: File %s: Header does not match other files.
    case ER_LH_AVRO_ENUM_CANNOT_CONVERT_CHARSET = 6073; // SQLSTATE: HY000; Message: File %s: Enum symbol can't convert to column charset.
    case ER_LH_AVRO_ENUM_MISMATCH = 6074; // SQLSTATE: HY000; Message: File %s: Enum symbols are not the same, or are not in the same order.
    case ER_LH_AVRO_TYPE_CANNOT_CONVERT = 6075; // SQLSTATE: HY000; Message: Column %d in %s: Avro value of physical type %.*s logical type %.*s cannot be converted to mysql type %s.
    case ER_LH_AVRO_FILE_ENDS_UNEXPECTEDLY = 6076; // SQLSTATE: HY000; Message: File %.*s: Ends unexpectedly.
    case ER_LH_AVRO_FILE_DATA_CORRUPT = 6077; // SQLSTATE: HY000; Message: File %.*s: File data might be corrupt.
    case ER_LH_AVRO_INVALID_UNION = 6078; // SQLSTATE: HY000; Message: Column %d in %s: Invalid union encountered. Unions are only supported to represent nullable columns. One of the two types of the union must be null.
    case ER_LH_AVRO_INVALID_BLOCK_SIZE = 6079; // SQLSTATE: HY000; Message: File %.*s: Invalid avro block size.
    case ER_LH_AVRO_INVALID_BLOCK_RECORD_COUNT = 6080; // SQLSTATE: HY000; Message: File %.*s: Invalid Avro block record count.
    case ER_LH_FORMAT_HEADER_NO_MAGIC_BYTES = 6081; // SQLSTATE: HY000; Message: File %.*s: Cannot locate %s specific metadata. Either the file is corrupted or this is not an %s file.
    case ER_LH_AVRO_HEADER_METADATA_ERR = 6082; // SQLSTATE: HY000; Message: File %.*s: Could not process Avro header metadata. The metadata is corrupted or invalid.
    case ER_LH_AVRO_HEADER_NO_SCHEMA = 6083; // SQLSTATE: HY000; Message: File %.*s: No schema in Avro header metadata.
    case ER_LH_AVRO_NO_CODEC_IN_HEADER = 6084; // SQLSTATE: HY000; Message: File %.*s: No codec in Avro header metadata.
    case ER_LH_AVRO_INVALID_NAME_IN_SCHEMA = 6085; // SQLSTATE: HY000; Message: File %.*s: Invalid name in Avro schema.
    case ER_LH_AVRO_DECODING_ERR = 6086; // SQLSTATE: HY000; Message: File %.*s: Error decoding Avro %.*s. %s
    case ER_LH_PARQUET_NON_UTF8_FILE_ENC = 6087; // SQLSTATE: HY000; Message: Column %d in %s: String with non-utf8 file encoding.
    case ER_LH_PARQUET_SCHEMA_MISMATCH = 6088; // SQLSTATE: HY000; Message: Difference in schema among Parquet files.
    case ER_LH_PARQUET_ROW_GROUP_SIZE_EXCEEDS_MAX = 6089; // SQLSTATE: HY000; Message: File %s: Size of row group %ld is larger than maximum allowed size (%d).
    case ER_LH_PARQUET_CANNOT_LOCATE_OFFSET = 6090; // SQLSTATE: HY000; Message: File %s: Cannot locate offset of row group %ld in metadata.
    case ER_LH_PARQUET_TYPE_CANNOT_CONVERT = 6091; // SQLSTATE: HY000; Message: Column %d in parquet table cannot be converted to mysql format.
    case ER_LH_PARQUET_CANNOT_LOCATE_SCHEMA = 6092; // SQLSTATE: HY000; Message: Cannot locate schema in %s.
    case ER_LH_INFER_SCHEMA_MISMATCH = 6093; // SQLSTATE: HY000; Message: Found files with mismatched schemas.
    case ER_LH_OOM = 6094; // SQLSTATE: HY000; Message: Insufficient memory.
    case ER_LH_WARN_INFER_SKIPPED_LINES = 6095; // SQLSTATE: HY000; Message: Skipped %lu line(s) due to mismatched num of cols.
    case ER_LH_WARN_INFER_SKIPPED_FILES = 6096; // SQLSTATE: HY000; Message: Skipped %lu file(s) due to mismatched num of cols.
    case ER_LH_INFER_FILE_HAS_NO_DATA = 6097; // SQLSTATE: HY000; Message: File %s is skipped because it has no valid data. File is either empty or all rows are skipped.
    case ER_LH_INFER_NO_DATA = 6098; // SQLSTATE: HY000; Message: No valid data found for processing.
    case ER_LH_INFER_NO_FILES = 6099; // SQLSTATE: HY000; Message: No valid files found for processing.
    case ER_LH_WARN_INFER_USE_DEFAULT_COL_NAMES = 6100; // SQLSTATE: HY000; Message: Used default column names for column index(s) %s as they are %s.
    case ER_LH_PARQUET_CANNOT_READ_HEADER = 6101; // SQLSTATE: HY000; Message: File %s: Unable to read Parquet header.
    case ER_LH_INFER_WARN_GOT_EXCEPTION = 6102; // SQLSTATE: HY000; Message: Got an exception while trying to process file task.
    case ER_LH_AVRO_CANNOT_PARSE_HEADER = 6103; // SQLSTATE: HY000; Message: File %.*s: Could not parse avro header. Probably corrupted avro file.
    case ER_LH_PARQUET_CANT_OPEN_FILE = 6104; // SQLSTATE: HY000; Message: Parquet reader cannot open %s. %s
    case ER_LH_TOO_LARGE_VALUE_ERR = 6105; // SQLSTATE: HY000; Message: File %.*s: %s
    case ER_LH_TOO_LARGE_ROW_ERR = 6106; // SQLSTATE: HY000; Message: File %.*s: %s
    case ER_TABLESAMPLE_PERCENTAGE = 6107; // SQLSTATE: 2202H; Message: Tablesample percentage should range between 0 and 100.
    case ER_TABLESAMPLE_ONLY_ON_BASE_TABLES = 6108; // SQLSTATE: HY000; Message: Tablesample can be applied only on base tables.
    case ER_RESULT_SIZE_LIMIT_EXCEEDED = 6110; // SQLSTATE: HY000; Message: Result size limit exceeded.
    case ER_LANGUAGE_COMPONENT_INTERNAL = 6111; // SQLSTATE: HY000; Message: Language component: Internal error.
    case ER_LANGUAGE_COMPONENT_CONCURRENCY_LIMIT = 6112; // SQLSTATE: HY000; Message: Language component: Concurrency limit (%s) has been reached.
    case ER_LANGUAGE_COMPONENT_RUNTIME = 6113; // SQLSTATE: HY000; Message: %s> %s
    case ER_LANGUAGE_COMPONENT_TIMEZONE = 6114; // SQLSTATE: HY000; Message: %s> Time zone %s is not supported.
    case ER_LANGUAGE_COMPONENT_KEYWORD = 6115; // SQLSTATE: HY000; Message: %s> The identifier '%s' is a reserved word.
    case ER_LANGUAGE_COMPONENT_SET_SYSTEM_VARIABLE = 6116; // SQLSTATE: HY000; Message: Language component: System variable '%s' cannot be configured when component is active.
    case ER_LANGUAGE_COMPONENT_UNSUPPORTED_TYPE = 6117; // SQLSTATE: HY000; Message: %s> %s
    case ER_LANGUAGE_COMPONENT_CONVERSION = 6118; // SQLSTATE: HY000; Message: %s> %s
    case ER_WARN_SP_STATEMENT_PARTIALLY_EXECUTED = 6119; // SQLSTATE: HY000; Message: Stored program statement is partially completed. Result set might not contain all the rows.
    case ER_STMT_EXECUTION_NOT_ALLOWED_WITHIN_SP_OR_TRG_OR_UDF = 6120; // SQLSTATE: HY000; Message: Executing SQL statement using %s Statement Handle Interface is not allowed within stored function, trigger or loadable function (UDF).
    case ER_LH_JSON_PARSING = 6121; // SQLSTATE: HY000; Message: Column %d of %s : %s
    case ER_ENGINE_CANNOT_BE_DEFAULT = 6122; // SQLSTATE: HY000; Message: Engine %s cannot be set as default_storage_engine.
    case ER_PARTITION_PREFIX_KEY_NOT_SUPPORTED = 6123; // SQLSTATE: HY000; Message: Column '%s.%s.%s' having prefix key part '%s(%u)' in the PARTITION BY KEY() clause is not supported.
    case ER_WARN_DEPRECATED_NON_STANDARD_KEY = 6124; // SQLSTATE: HY000; Message: Foreign key '%s' refers to non-unique key or partial key. This is deprecated and will be removed in a future release.
    case ER_FK_NO_UNIQUE_INDEX_PARENT = 6125; // SQLSTATE: HY000; Message: Failed to add the foreign key constraint. Missing unique key for constraint '%s' in the referenced table '%s'
    case ER_ACCESS_DENIED_NO_PROXY_GRANT = 6126; // SQLSTATE: HY000; Message: Access denied for user '%s'@'%s', missing proxy privilege.
    case ER_ACCESS_DENIED_NO_PROXY = 6127; // SQLSTATE: HY000; Message: Access denied for user '%s'@'%s', proxied user doesn't exist.
    case ER_LH_USER_DATA_ACCESS_FAILED = 6128; // SQLSTATE: HY000; Message: Unable to access the following data locations: %s
    case ER_BULK_READER_ZSTD_ERROR = 6129; // SQLSTATE: HY000; Message: ZSTD decompression failed: %s
    case ER_BULK_PARSER_ERROR = 6130; // SQLSTATE: HY000; Message: %s
    case ER_LH_INVALID_JSON_FILE_FORMAT_SCHEMA = 6131; // SQLSTATE: HY000; Message: Invalid json file format schema: %s
    case ER_LH_INFER_JSON_INVALID_SCHEMA = 6132; // SQLSTATE: HY000; Message: Inferred invalid schema. A single column with JSON type is the only valid schema for JSON file format.
    case ER_LH_JSON_FILE_FORMAT_WARN_INFER_SCHEMA = 6133; // SQLSTATE: HY000; Message: Altered the inferred schema to a single JSON column.
    case ER_NON_SCALAR_USED_AS_KEY = 6134; // SQLSTATE: HY000; Message: Non-scalar (e.g., vector) column '%s' cannot be used as key.
    case ER_INCOMPATIBLE_TYPE_AGG = 6135; // SQLSTATE: HY000; Message: Columns aggregated with incompatible types: '%s', '%s'.
    case ER_DATA_INCOMPATIBLE_WITH_VECTOR = 6136; // SQLSTATE: HY000; Message: Value of type '%s, size: %zu' cannot be converted to 'vector' type.
    case ER_EXCEEDS_VECTOR_MAX_DIMENSIONS = 6137; // SQLSTATE: HY000; Message: Data size (%zu Bytes, %u dimensions) exceeds VECTOR max (%zu Bytes, %u dimensions) for column: '%s'
    case ER_TO_VECTOR_CONVERSION = 6138; // SQLSTATE: HY000; Message: Data cannot be converted to a valid vector: '%.*s'
    case ER_EXTERNAL_UNSUPPORTED_INDEX_ALGORITHM = 6139; // SQLSTATE: HY000; Message: This storage engine ignores the %s index algorithm.
    case ER_TP_CANNOT_DISABLE_MTL_WITH_DL = 6140; // SQLSTATE: HY000; Message: The variable thread_pool_max_transactions_limit cannot be set to 0 when thread_pool_dedicated_listernes is ON.

    /** @phpstan-return string[]|null */
    public function scanMessage(string $message): ?array
    {
        $regex = match ($this) {
            self::ER_CANT_CREATE_FILE => 'Can\'t create file \'(.*?)\' \\(errno\\: (\\d+?) \\- (.*?)\\)',
            self::ER_CANT_CREATE_TABLE => 'Can\'t create table \'(.*?)\' \\(errno\\: (\\d+?) \\- (.*?)\\)',
            self::ER_CANT_CREATE_DB => 'Can\'t create database \'(.*?)\' \\(errno\\: (\\d+?) \\- (.*?)\\)',
            self::ER_DB_CREATE_EXISTS => 'Can\'t create database \'(.*?)\'; database exists',
            self::ER_DB_DROP_EXISTS => 'Can\'t drop database \'(.*?)\'; database doesn\'t exist',
            self::ER_DB_DROP_RMDIR => 'Error dropping database \\(can\'t rmdir \'(.*?)\', errno\\: (\\d+?) \\- (.*?)\\)',
            self::ER_CANT_GET_STAT => 'Can\'t get status of \'(.*?)\' \\(errno\\: (\\d+?) \\- (.*?)\\)',
            self::ER_CANT_LOCK => 'Can\'t lock file \\(errno\\: (\\d+?) \\- (.*?)\\)',
            self::ER_CANT_OPEN_FILE => 'Can\'t open file\\: \'(.*?)\' \\(errno\\: (\\d+?) \\- (.*?)\\)',
            self::ER_FILE_NOT_FOUND => 'Can\'t find file\\: \'(.*?)\' \\(errno\\: (\\d+?) \\- (.*?)\\)',
            self::ER_CANT_READ_DIR => 'Can\'t read dir of \'(.*?)\' \\(errno\\: (\\d+?) \\- (.*?)\\)',
            self::ER_CHECKREAD => 'Record has changed since last read in table \'(.*?)\'',
            self::ER_DUP_KEY => 'Can\'t write; duplicate key in table \'(.*?)\'',
            self::ER_ERROR_ON_READ => 'Error reading file \'(.*?)\' \\(errno\\: (\\d+?) \\- (.*?)\\)',
            self::ER_ERROR_ON_RENAME => 'Error on rename of \'(.*?)\' to \'(.*?)\' \\(errno\\: (\\d+?) \\- (.*?)\\)',
            self::ER_ERROR_ON_WRITE => 'Error writing file \'(.*?)\' \\(errno\\: (\\d+?) \\- (.*?)\\)',
            self::ER_FILE_USED => '\'(.*?)\' is locked against change',
            self::ER_GET_ERRNO => 'Got error (\\d+?) \\- \'(.*?)\' from storage engine',
            self::ER_ILLEGAL_HA => 'Table storage engine for \'(.*?)\' doesn\'t have this option',
            self::ER_KEY_NOT_FOUND => 'Can\'t find record in \'(.*?)\'',
            self::ER_NOT_FORM_FILE => 'Incorrect information in file\\: \'(.*?)\'',
            self::ER_NOT_KEYFILE => 'Incorrect key file for table \'(.*?)\'; try to repair it',
            self::ER_OLD_KEYFILE => 'Old key file for table \'(.*?)\'; repair it\\!',
            self::ER_OPEN_AS_READONLY => 'Table \'(.*?)\' is read only',
            self::ER_OUTOFMEMORY => 'Out of memory; restart server and try again \\(needed (\\d+?) bytes\\)',
            self::ER_DBACCESS_DENIED_ERROR => 'Access denied for user \'(.*?)\'@\'(.*?)\' to database \'(.*?)\'',
            self::ER_ACCESS_DENIED_ERROR => 'Access denied for user \'(.*?)\'@\'(.*?)\' \\(using password\\: (.*?)\\)',
            self::ER_BAD_NULL_ERROR => 'Column \'(.*?)\' cannot be null',
            self::ER_BAD_DB_ERROR => 'Unknown database \'(.*?)\'',
            self::ER_TABLE_EXISTS_ERROR => 'Table \'(.*?)\' already exists',
            self::ER_BAD_TABLE_ERROR => 'Unknown table \'(.*?)\'',
            self::ER_NON_UNIQ_ERROR => 'Column \'(.*?)\' in (.*?) is ambiguous',
            self::ER_BAD_FIELD_ERROR => 'Unknown column \'(.*?)\' in \'(.*?)\'',
            self::ER_WRONG_FIELD_WITH_GROUP => '\'(.*?)\' isn\'t in GROUP BY',
            self::ER_WRONG_GROUP_FIELD => 'Can\'t group on \'(.*?)\'',
            self::ER_TOO_LONG_IDENT => 'Identifier name \'(.*?)\' is too long',
            self::ER_DUP_FIELDNAME => 'Duplicate column name \'(.*?)\'',
            self::ER_DUP_KEYNAME => 'Duplicate key name \'(.*?)\'',
            self::ER_DUP_ENTRY => 'Duplicate entry \'(.*?)\' for key (\\d+?)',
            self::ER_WRONG_FIELD_SPEC => 'Incorrect column specifier for column \'(.*?)\'',
            self::ER_PARSE_ERROR => '(.*?) near \'(.*?)\' at line (\\d+?)',
            self::ER_NONUNIQ_TABLE => 'Not unique table/alias\\: \'(.*?)\'',
            self::ER_INVALID_DEFAULT => 'Invalid default value for \'(.*?)\'',
            self::ER_TOO_MANY_KEYS => 'Too many keys specified; max (\\d+?) keys allowed',
            self::ER_TOO_MANY_KEY_PARTS => 'Too many key parts specified; max (\\d+?) parts allowed',
            self::ER_TOO_LONG_KEY => 'Specified key was too long; max key length is (\\d+?) bytes',
            self::ER_KEY_COLUMN_DOES_NOT_EXITS => 'Key column \'(.*?)\' doesn\'t exist in table',
            self::ER_BLOB_USED_AS_KEY => 'BLOB column \'(.*?)\' can\'t be used in key specification with the used table type',
            self::ER_TOO_BIG_FIELDLENGTH => 'Column length too big for column \'(.*?)\' \\(max \\= (\\d+?)\\); use BLOB or TEXT instead',
            self::ER_READY => '(.*?)\\: ready for connections\\. Version\\: \'(.*?)\' socket\\: \'(.*?)\' port\\: (\\d+?)',
            self::ER_SHUTDOWN_COMPLETE => '(.*?)\\: Shutdown complete',
            self::ER_FORCING_CLOSE => '(.*?)\\: Forcing close of thread (\\d+?) user\\: \'(.*?)\'',
            self::ER_NO_SUCH_INDEX => 'Table \'(.*?)\' has no index like the one used in CREATE INDEX; recreate the table',
            self::ER_TEXTFILE_NOT_READABLE => 'The file \'(.*?)\' must be in the database directory or be readable by all',
            self::ER_FILE_EXISTS_ERROR => 'File \'(.*?)\' already exists',
            self::ER_LOAD_INFO => 'Records\\: (\\d+?) Deleted\\: (\\d+?) Skipped\\: (\\d+?) Warnings\\: (\\d+?)',
            self::ER_ALTER_INFO => 'Records\\: (\\d+?) Duplicates\\: (\\d+?)',
            self::ER_CANT_DROP_FIELD_OR_KEY => 'Can\'t DROP \'(.*?)\'; check that column/key exists',
            self::ER_INSERT_INFO => 'Records\\: (\\d+?) Duplicates\\: (\\d+?) Warnings\\: (\\d+?)',
            self::ER_UPDATE_TABLE_USED => 'You can\'t specify target table \'(.*?)\' for update in FROM clause',
            self::ER_NO_SUCH_THREAD => 'Unknown thread id\\: (\\d+?)',
            self::ER_KILL_DENIED_ERROR => 'You are not owner of thread (\\d+?)',
            self::ER_TOO_BIG_SET => 'Too many strings for column (.*?) and SET',
            self::ER_NO_UNIQUE_LOGFILE => 'Can\'t generate a unique log\\-filename (.*?)\\.\\(1\\-999\\)',
            self::ER_TABLE_NOT_LOCKED_FOR_WRITE => 'Table \'(.*?)\' was locked with a READ lock and can\'t be updated',
            self::ER_TABLE_NOT_LOCKED => 'Table \'(.*?)\' was not locked with LOCK TABLES',
            self::ER_BLOB_CANT_HAVE_DEFAULT => 'BLOB, TEXT, GEOMETRY or JSON column \'(.*?)\' can\'t have a default value',
            self::ER_WRONG_DB_NAME => 'Incorrect database name \'(.*?)\'',
            self::ER_WRONG_TABLE_NAME => 'Incorrect table name \'(.*?)\'',
            self::ER_UNKNOWN_PROCEDURE => 'Unknown procedure \'(.*?)\'',
            self::ER_WRONG_PARAMCOUNT_TO_PROCEDURE => 'Incorrect parameter count to procedure \'(.*?)\'',
            self::ER_WRONG_PARAMETERS_TO_PROCEDURE => 'Incorrect parameters to procedure \'(.*?)\'',
            self::ER_UNKNOWN_TABLE => 'Unknown table \'(.*?)\' in (.*?)',
            self::ER_FIELD_SPECIFIED_TWICE => 'Column \'(.*?)\' specified twice',
            self::ER_UNSUPPORTED_EXTENSION => 'Table \'(.*?)\' uses an extension that doesn\'t exist in this MySQL version',
            self::ER_RECORD_FILE_FULL => 'The table \'(.*?)\' is full',
            self::ER_UNKNOWN_CHARACTER_SET => 'Unknown character set\\: \'(.*?)\'',
            self::ER_TOO_MANY_TABLES => 'Too many tables; MySQL can only use (\\d+?) tables in a join',
            self::ER_TOO_BIG_ROWSIZE => 'Row size too large\\. The maximum row size for the used table type, not counting BLOBs, is (\\d+?)\\. This includes storage overhead, check the manual\\. You have to change some columns to TEXT or BLOBs',
            self::ER_STACK_OVERRUN => 'Thread stack overrun\\: Used\\: (\\d+?) of a (\\d+?) stack\\. Use \'mysqld \\-\\-thread_stack\\=\\#\' to specify a bigger stack if needed',
            self::ER_NULL_COLUMN_IN_INDEX => 'Table handler doesn\'t support NULL in given index\\. Please change column \'(.*?)\' to be NOT NULL or use another handler',
            self::ER_CANT_FIND_UDF => 'Can\'t load function \'(.*?)\'',
            self::ER_CANT_INITIALIZE_UDF => 'Can\'t initialize function \'(.*?)\'; (.*?)',
            self::ER_UDF_EXISTS => 'Function \'(.*?)\' already exists',
            self::ER_CANT_OPEN_LIBRARY => 'Can\'t open shared library \'(.*?)\' \\(errno\\: (\\d+?) (.*?)\\)',
            self::ER_CANT_FIND_DL_ENTRY => 'Can\'t find symbol \'(.*?)\' in library',
            self::ER_FUNCTION_NOT_DEFINED => 'Function \'(.*?)\' is not defined',
            self::ER_HOST_IS_BLOCKED => 'Host \'(.*?)\' is blocked because of many connection errors; unblock with \'mysqladmin flush\\-hosts\'',
            self::ER_HOST_NOT_PRIVILEGED => 'Host \'(.*?)\' is not allowed to connect to this MySQL server',
            self::ER_UPDATE_INFO => 'Rows matched\\: (\\d+?) Changed\\: (\\d+?) Warnings\\: (\\d+?)',
            self::ER_CANT_CREATE_THREAD => 'Can\'t create a new thread \\(errno (\\d+?)\\); if you are not out of available memory, you can consult the manual for a possible OS\\-dependent bug',
            self::ER_WRONG_VALUE_COUNT_ON_ROW => 'Column count doesn\'t match value count at row (\\d+?)',
            self::ER_CANT_REOPEN_TABLE => 'Can\'t reopen table\\: \'(.*?)\'',
            self::ER_REGEXP_ERROR => 'Got error \'(.*?)\' from regexp',
            self::ER_NONEXISTING_GRANT => 'There is no such grant defined for user \'(.*?)\' on host \'(.*?)\'',
            self::ER_TABLEACCESS_DENIED_ERROR => '(.*?) command denied to user \'(.*?)\'@\'(.*?)\' for table \'(.*?)\'',
            self::ER_COLUMNACCESS_DENIED_ERROR => '(.*?) command denied to user \'(.*?)\'@\'(.*?)\' for column \'(.*?)\' in table \'(.*?)\'',
            self::ER_NO_SUCH_TABLE => 'Table \'(.*?)\\.(.*?)\' doesn\'t exist',
            self::ER_NONEXISTING_TABLE_GRANT => 'There is no such grant defined for user \'(.*?)\' on host \'(.*?)\' on table \'(.*?)\'',
            self::ER_ABORTING_CONNECTION => 'Aborted connection (\\d+?) to db\\: \'(.*?)\' user\\: \'(.*?)\' \\((.*?)\\)',
            self::ER_WRONG_COLUMN_NAME => 'Incorrect column name \'(.*?)\'',
            self::ER_WRONG_KEY_COLUMN => 'The used storage engine can\'t index column \'(.*?)\'',
            self::ER_DUP_UNIQUE => 'Can\'t write, because of unique constraint, to table \'(.*?)\'',
            self::ER_BLOB_KEY_WITHOUT_LENGTH => 'BLOB/TEXT column \'(.*?)\' used in key specification without a key length',
            self::ER_UPDATE_WITHOUT_KEY_IN_SAFE_MODE => 'You are using safe update mode and you tried to update a table without a WHERE that uses a KEY column\\. (.*?)',
            self::ER_KEY_DOES_NOT_EXITS => 'Key \'(.*?)\' doesn\'t exist in table \'(.*?)\'',
            self::ER_CHECK_NOT_IMPLEMENTED => 'The storage engine for the table doesn\'t support (.*?)',
            self::ER_ERROR_DURING_COMMIT => 'Got error (\\d+?) \\- \'(.*?)\' during COMMIT',
            self::ER_ERROR_DURING_ROLLBACK => 'Got error (\\d+?) \\- \'(.*?)\' during ROLLBACK',
            self::ER_ERROR_DURING_FLUSH_LOGS => 'Got error (\\d+?) during FLUSH_LOGS',
            self::ER_NEW_ABORTING_CONNECTION => 'Aborted connection (\\d+?) to db\\: \'(.*?)\' user\\: \'(.*?)\' host\\: \'(.*?)\' \\((.*?)\\)',
            self::ER_SOURCE => 'Error from source\\: \'(.*?)\'',
            self::ER_UNKNOWN_SYSTEM_VARIABLE => 'Unknown system variable \'(.*?)\'',
            self::ER_CRASHED_ON_USAGE => 'Table \'(.*?)\' is marked as crashed and should be repaired',
            self::ER_CRASHED_ON_REPAIR => 'Table \'(.*?)\' is marked as crashed and last \\(automatic\\?\\) repair failed',
            self::ER_TOO_MANY_USER_CONNECTIONS => 'User (.*?) already has more than \'max_user_connections\' active connections',
            self::ER_WRONG_ARGUMENTS => 'Incorrect arguments to (.*?)',
            self::ER_NO_PERMISSION_TO_CREATE_USER => '\'(.*?)\'@\'(.*?)\' is not allowed to create new users',
            self::ER_CONNECT_TO_SOURCE => 'Error connecting to source\\: (.*?)',
            self::ER_ERROR_WHEN_EXECUTING_COMMAND => 'Error when executing command (.*?)\\: (.*?)',
            self::ER_WRONG_USAGE => 'Incorrect usage of (.*?) and (.*?)',
            self::ER_DUP_ARGUMENT => 'Option \'(.*?)\' used twice in statement',
            self::ER_USER_LIMIT_REACHED => 'User \'(.*?)\' has exceeded the \'(.*?)\' resource \\(current value\\: (\\d+?)\\)',
            self::ER_SPECIFIC_ACCESS_DENIED_ERROR => 'Access denied; you need \\(at least one of\\) the (.*?) privilege\\(s\\) for this operation',
            self::ER_LOCAL_VARIABLE => 'Variable \'(.*?)\' is a SESSION variable and can\'t be used with SET GLOBAL',
            self::ER_GLOBAL_VARIABLE => 'Variable \'(.*?)\' is a GLOBAL variable and should be set with SET GLOBAL',
            self::ER_NO_DEFAULT => 'Variable \'(.*?)\' doesn\'t have a default value',
            self::ER_WRONG_VALUE_FOR_VAR => 'Variable \'(.*?)\' can\'t be set to the value of \'(.*?)\'',
            self::ER_WRONG_TYPE_FOR_VAR => 'Incorrect argument type to variable \'(.*?)\'',
            self::ER_VAR_CANT_BE_READ => 'Variable \'(.*?)\' can only be set, not read',
            self::ER_CANT_USE_OPTION_HERE => 'Incorrect usage/placement of \'(.*?)\'',
            self::ER_NOT_SUPPORTED_YET => 'This version of MySQL doesn\'t yet support \'(.*?)\'',
            self::ER_SOURCE_FATAL_ERROR_READING_BINLOG => 'Got fatal error (\\d+?) from source when reading data from binary log\\: \'(.*?)\'',
            self::ER_INCORRECT_GLOBAL_LOCAL_VAR => 'Variable \'(.*?)\' is a (.*?) variable',
            self::ER_WRONG_FK_DEF => 'Incorrect foreign key definition for \'(.*?)\'\\: (.*?)',
            self::ER_OPERAND_COLUMNS => 'Operand should contain (\\d+?) column\\(s\\)',
            self::ER_UNKNOWN_STMT_HANDLER => 'Unknown prepared statement handler \\((.*?)\\) given to (.*?)',
            self::ER_AUTO_CONVERT => 'Converting column \'(.*?)\' from (.*?) to (.*?)',
            self::ER_ILLEGAL_REFERENCE => 'Reference \'(.*?)\' not supported \\((.*?)\\)',
            self::ER_SELECT_REDUCED => 'Select (\\d+?) was reduced during optimization',
            self::ER_TABLENAME_NOT_ALLOWED_HERE => 'Table \'(.*?)\' from one of the SELECTs cannot be used in (.*?)',
            self::ER_COLLATION_CHARSET_MISMATCH => 'COLLATION \'(.*?)\' is not valid for CHARACTER SET \'(.*?)\'',
            self::ER_TOO_BIG_FOR_UNCOMPRESS => 'Uncompressed data size too large; the maximum size is (\\d+?) \\(probably, length of uncompressed data was corrupted\\)',
            self::ER_CUT_VALUE_GROUP_CONCAT => 'Row (\\d+?) was cut by GROUP_CONCAT\\(\\)',
            self::ER_WARN_TOO_FEW_RECORDS => 'Row (\\d+?) doesn\'t contain data for all columns',
            self::ER_WARN_TOO_MANY_RECORDS => 'Row (\\d+?) was truncated; it contained more data than there were input columns',
            self::ER_WARN_NULL_TO_NOTNULL => 'Column set to default value; NULL supplied to NOT NULL column \'(.*?)\' at row (\\d+?)',
            self::ER_WARN_DATA_OUT_OF_RANGE => 'Out of range value for column \'(.*?)\' at row (\\d+?)',
            self::WARN_DATA_TRUNCATED => 'Data truncated for column \'(.*?)\' at row (\\d+?)',
            self::ER_WARN_USING_OTHER_HANDLER => 'Using storage engine (.*?) for table \'(.*?)\'',
            self::ER_CANT_AGGREGATE_2COLLATIONS => 'Illegal mix of collations \\((.*?),(.*?)\\) and \\((.*?),(.*?)\\) for operation \'(.*?)\'',
            self::ER_CANT_AGGREGATE_3COLLATIONS => 'Illegal mix of collations \\((.*?),(.*?)\\), \\((.*?),(.*?)\\), \\((.*?),(.*?)\\) for operation \'(.*?)\'',
            self::ER_CANT_AGGREGATE_NCOLLATIONS => 'Illegal mix of collations for operation \'(.*?)\'',
            self::ER_VARIABLE_IS_NOT_STRUCT => 'Variable \'(.*?)\' is not a variable component \\(can\'t be used as XXXX\\.variable_name\\)',
            self::ER_UNKNOWN_COLLATION => 'Unknown collation\\: \'(.*?)\'',
            self::ER_WARN_FIELD_RESOLVED => 'Field or reference \'(.*?)(.*?)(.*?)(.*?)(.*?)\' of SELECT \\#(\\d+?) was resolved in SELECT \\#(\\d+?)',
            self::ER_WRONG_NAME_FOR_INDEX => 'Incorrect index name \'(.*?)\'',
            self::ER_WRONG_NAME_FOR_CATALOG => 'Incorrect catalog name \'(.*?)\'',
            self::ER_BAD_FT_COLUMN => 'Column \'(.*?)\' cannot be part of FULLTEXT index',
            self::ER_UNKNOWN_KEY_CACHE => 'Unknown key cache \'(.*?)\'',
            self::ER_UNKNOWN_STORAGE_ENGINE => 'Unknown storage engine \'(.*?)\'',
            self::ER_WARN_DEPRECATED_SYNTAX => '\'(.*?)\' is deprecated and will be removed in a future release\\. Please use (.*?) instead',
            self::ER_NON_UPDATABLE_TABLE => 'The target table (.*?) of the (.*?) is not updatable',
            self::ER_FEATURE_DISABLED => 'The \'(.*?)\' feature is disabled; you need MySQL built with \'(.*?)\' to have it working',
            self::ER_OPTION_PREVENTS_STATEMENT => 'The MySQL server is running with the (.*?) option so it cannot execute this statement',
            self::ER_DUPLICATED_VALUE_IN_TYPE => 'Column \'(.*?)\' has duplicated value \'(.*?)\' in (.*?)',
            self::ER_TRUNCATED_WRONG_VALUE => 'Truncated incorrect (.*?) value\\: \'(.*?)\'',
            self::ER_INVALID_ON_UPDATE => 'Invalid ON UPDATE clause for \'(.*?)\' column',
            self::ER_GET_ERRMSG => 'Got error (\\d+?) \'(.*?)\' from (.*?)',
            self::ER_GET_TEMPORARY_ERRMSG => 'Got temporary error (\\d+?) \'(.*?)\' from (.*?)',
            self::ER_UNKNOWN_TIME_ZONE => 'Unknown or incorrect time zone\\: \'(.*?)\'',
            self::ER_WARN_INVALID_TIMESTAMP => 'Invalid TIMESTAMP value in column \'(.*?)\' at row (\\d+?)',
            self::ER_INVALID_CHARACTER_STRING => 'Invalid (.*?) character string\\: \'(.*?)\'',
            self::ER_WARN_ALLOWED_PACKET_OVERFLOWED => 'Result of (.*?)\\(\\) was larger than max_allowed_packet \\((\\d+?)\\) \\- truncated',
            self::ER_CONFLICTING_DECLARATIONS => 'Conflicting declarations\\: \'(.*?)(.*?)\' and \'(.*?)(.*?)\'',
            self::ER_SP_NO_RECURSIVE_CREATE => 'Can\'t create a (.*?) from within another stored routine',
            self::ER_SP_ALREADY_EXISTS => '(.*?) (.*?) already exists',
            self::ER_SP_DOES_NOT_EXIST => '(.*?) (.*?) does not exist',
            self::ER_SP_DROP_FAILED => 'Failed to DROP (.*?) (.*?)',
            self::ER_SP_STORE_FAILED => 'Failed to CREATE (.*?) (.*?)',
            self::ER_SP_LILABEL_MISMATCH => '(.*?) with no matching label\\: (.*?)',
            self::ER_SP_LABEL_REDEFINE => 'Redefining label (.*?)',
            self::ER_SP_LABEL_MISMATCH => 'End\\-label (.*?) without match',
            self::ER_SP_UNINIT_VAR => 'Referring to uninitialized variable (.*?)',
            self::ER_SP_BADSELECT => 'PROCEDURE (.*?) can\'t return a result set in the given context',
            self::ER_SP_BADSTATEMENT => '(.*?) is not allowed in stored procedures',
            self::ER_SP_WRONG_NO_OF_ARGS => 'Incorrect number of arguments for (.*?) (.*?); expected (\\d+?), got (\\d+?)',
            self::ER_SP_COND_MISMATCH => 'Undefined CONDITION\\: (.*?)',
            self::ER_SP_NORETURN => 'No RETURN found in FUNCTION (.*?)',
            self::ER_SP_NORETURNEND => 'FUNCTION (.*?) ended without RETURN',
            self::ER_SP_CURSOR_MISMATCH => 'Undefined CURSOR\\: (.*?)',
            self::ER_SP_UNDECLARED_VAR => 'Undeclared variable\\: (.*?)',
            self::ER_SP_DUP_PARAM => 'Duplicate parameter\\: (.*?)',
            self::ER_SP_DUP_VAR => 'Duplicate variable\\: (.*?)',
            self::ER_SP_DUP_COND => 'Duplicate condition\\: (.*?)',
            self::ER_SP_DUP_CURS => 'Duplicate cursor\\: (.*?)',
            self::ER_SP_CANT_ALTER => 'Failed to ALTER (.*?) (.*?)',
            self::ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG => '(.*?) is not allowed in stored function or trigger',
            self::ER_FPARSER_TOO_BIG_FILE => 'Configuration file \'(.*?)\' is too big',
            self::ER_FPARSER_BAD_HEADER => 'Malformed file type header in file \'(.*?)\'',
            self::ER_FPARSER_EOF_IN_COMMENT => 'Unexpected end of file while parsing comment \'(.*?)\'',
            self::ER_FPARSER_ERROR_IN_PARAMETER => 'Error while parsing parameter \'(.*?)\' \\(line\\: \'(.*?)\'\\)',
            self::ER_FPARSER_EOF_IN_UNKNOWN_PARAMETER => 'Unexpected end of file while skipping unknown parameter \'(.*?)\'',
            self::ER_WRONG_OBJECT => '\'(.*?)\\.(.*?)\' is not (.*?)',
            self::ER_NONUPDATEABLE_COLUMN => 'Column \'(.*?)\' is not updatable',
            self::ER_VIEW_SELECT_CLAUSE => 'View\'s SELECT contains a \'(.*?)\' clause',
            self::ER_VIEW_SELECT_TMPTABLE => 'View\'s SELECT refers to a temporary table \'(.*?)\'',
            self::ER_VIEW_INVALID => 'View \'(.*?)\\.(.*?)\' references invalid table\\(s\\) or column\\(s\\) or function\\(s\\) or definer/invoker of view lack rights to use them',
            self::ER_SP_NO_DROP_SP => 'Can\'t drop or alter a (.*?) from within another stored routine',
            self::ER_TRG_ON_VIEW_OR_TEMP_TABLE => 'Trigger\'s \'(.*?)\' is view or temporary table',
            self::ER_TRG_CANT_CHANGE_ROW => 'Updating of (.*?) row is not allowed in (.*?)trigger',
            self::ER_TRG_NO_SUCH_ROW_IN_TRG => 'There is no (.*?) row in (.*?) trigger',
            self::ER_NO_DEFAULT_FOR_FIELD => 'Field \'(.*?)\' doesn\'t have a default value',
            self::ER_TRUNCATED_WRONG_VALUE_FOR_FIELD => 'Incorrect (.*?) value\\: \'(.*?)\' for column \'(.*?)\' at row (\\d+?)',
            self::ER_ILLEGAL_VALUE_FOR_TYPE => 'Illegal (.*?) \'(.*?)\' value found during parsing',
            self::ER_VIEW_NONUPD_CHECK => 'CHECK OPTION on non\\-updatable view \'(.*?)\\.(.*?)\'',
            self::ER_VIEW_CHECK_FAILED => 'CHECK OPTION failed \'(.*?)\\.(.*?)\'',
            self::ER_PROCACCESS_DENIED_ERROR => '(.*?) command denied to user \'(.*?)\'@\'(.*?)\' for routine \'(.*?)\'',
            self::ER_RELAY_LOG_FAIL => 'Failed purging old relay logs\\: (.*?)',
            self::ER_RELAY_LOG_INIT => 'Failed initializing relay log position\\: (.*?)',
            self::ER_RESERVED_SYNTAX => 'The \'(.*?)\' syntax is reserved for purposes internal to the MySQL server',
            self::ER_KEY_PART_0 => 'Key part \'(.*?)\' length cannot be 0',
            self::ER_VIEW_MULTIUPDATE => 'Can not modify more than one base table through a join view \'(.*?)\\.(.*?)\'',
            self::ER_VIEW_NO_INSERT_FIELD_LIST => 'Can not insert into join view \'(.*?)\\.(.*?)\' without fields list',
            self::ER_VIEW_DELETE_MERGE_VIEW => 'Can not delete from join view \'(.*?)\\.(.*?)\'',
            self::ER_CANNOT_USER => 'Operation (.*?) failed for (.*?)',
            self::ER_XAER_RMFAIL => 'XAER_RMFAIL\\: The command cannot be executed when global transaction is in the (.*?) state',
            self::ER_NONEXISTING_PROC_GRANT => 'There is no such grant defined for user \'(.*?)\' on host \'(.*?)\' on routine \'(.*?)\'',
            self::ER_DATA_TOO_LONG => 'Data too long for column \'(.*?)\' at row (\\d+?)',
            self::ER_SP_BAD_SQLSTATE => 'Bad SQLSTATE\\: \'(.*?)\'',
            self::ER_STARTUP => '(.*?)\\: ready for connections\\. Version\\: \'(.*?)\' socket\\: \'(.*?)\' port\\: (\\d+?) (.*?)',
            self::ER_WRONG_VALUE_FOR_TYPE => 'Incorrect (.*?) value\\: \'(.*?)\' for function (.*?)',
            self::ER_SP_NOT_VAR_ARG => 'OUT or INOUT argument (\\d+?) for routine (.*?) is not a variable or NEW pseudo\\-variable in BEFORE trigger',
            self::ER_SP_NO_RETSET => 'Not allowed to return a result set from a (.*?)',
            self::ER_STMT_HAS_NO_OPEN_CURSOR => 'The statement \\((\\d+?)\\) has no open cursor\\.',
            self::ER_NO_DEFAULT_FOR_VIEW_FIELD => 'Field of view \'(.*?)\\.(.*?)\' underlying table doesn\'t have a default value',
            self::ER_TOO_BIG_SCALE => 'Too big scale (\\d+?) specified for column \'(.*?)\'\\. Maximum is (\\d+?)\\.',
            self::ER_TOO_BIG_PRECISION => 'Too\\-big precision (\\d+?) specified for \'(.*?)\'\\. Maximum is (\\d+?)\\.',
            self::ER_M_BIGGER_THAN_D => 'For float\\(M,D\\), double\\(M,D\\) or decimal\\(M,D\\), M must be \\>\\= D \\(column \'(.*?)\'\\)\\.',
            self::ER_CONNECT_TO_FOREIGN_DATA_SOURCE => 'Unable to connect to foreign data source\\: (.*?)',
            self::ER_QUERY_ON_FOREIGN_DATA_SOURCE => 'There was a problem processing the query on the foreign data source\\. Data source error\\: (.*?)',
            self::ER_FOREIGN_DATA_SOURCE_DOESNT_EXIST => 'The foreign data source you are trying to reference does not exist\\. Data source error\\: (.*?)',
            self::ER_FOREIGN_DATA_STRING_INVALID_CANT_CREATE => 'Can\'t create federated table\\. The data source connection string \'(.*?)\' is not in the correct format',
            self::ER_FOREIGN_DATA_STRING_INVALID => 'The data source connection string \'(.*?)\' is not in the correct format',
            self::ER_STACK_OVERRUN_NEED_MORE => 'Thread stack overrun\\: (\\d+?) bytes used of a (\\d+?) byte stack, and (\\d+?) bytes needed\\. Use \'mysqld \\-\\-thread_stack\\=\\#\' to specify a bigger stack\\.',
            self::ER_TOO_LONG_BODY => 'Routine body for \'(.*?)\' is too long',
            self::ER_TOO_BIG_DISPLAYWIDTH => 'Display width out of range for column \'(.*?)\' \\(max \\= (\\d+?)\\)',
            self::ER_DATETIME_FUNCTION_OVERFLOW => 'Datetime function\\: (.*?) field overflow',
            self::ER_CANT_UPDATE_USED_TABLE_IN_SF_OR_TRG => 'Can\'t update table \'(.*?)\' in stored function/trigger because it is already used by statement which invoked this stored function/trigger\\.',
            self::ER_VIEW_PREVENT_UPDATE => 'The definition of table \'(.*?)\' prevents operation (.*?) on table \'(.*?)\'\\.',
            self::ER_VIEW_FRM_NO_USER => 'View \'(.*?)\'\\.\'(.*?)\' has no definer information \\(old table format\\)\\. Current user is used as definer\\. Please recreate the view\\!',
            self::ER_VIEW_OTHER_USER => 'You need the SUPER privilege for creation view with \'(.*?)\'@\'(.*?)\' definer',
            self::ER_NO_SUCH_USER => 'The user specified as a definer \\(\'(.*?)\'@\'(.*?)\'\\) does not exist',
            self::ER_FORBID_SCHEMA_CHANGE => 'Changing schema from \'(.*?)\' to \'(.*?)\' is not allowed\\.',
            self::ER_ROW_IS_REFERENCED_2 => 'Cannot delete or update a parent row\\: a foreign key constraint fails(.*?)',
            self::ER_NO_REFERENCED_ROW_2 => 'Cannot add or update a child row\\: a foreign key constraint fails(.*?)',
            self::ER_SP_BAD_VAR_SHADOW => 'Variable \'(.*?)\' must be quoted with `\\.\\.\\.`, or renamed',
            self::ER_TRG_NO_DEFINER => 'No definer attribute for trigger \'(.*?)\'\\.\'(.*?)\'\\. It\'s disallowed to create trigger without definer\\.',
            self::ER_OLD_FILE_FORMAT => '\'(.*?)\' has an old format, you should re\\-create the \'(.*?)\' object\\(s\\)',
            self::ER_SP_RECURSION_LIMIT => 'Recursive limit (\\d+?) \\(as set by the max_sp_recursion_depth variable\\) was exceeded for routine (.*?)',
            self::ER_SP_WRONG_NAME => 'Incorrect routine name \'(.*?)\'',
            self::ER_TABLE_NEEDS_UPGRADE => 'Table upgrade required\\. Please do "REPAIR TABLE `(.*?)`" or dump/reload to fix it\\!',
            self::ER_MAX_PREPARED_STMT_COUNT_REACHED => 'Can\'t create more than max_prepared_stmt_count statements \\(current value\\: (\\d+?)\\)',
            self::ER_VIEW_RECURSIVE => '`(.*?)`\\.`(.*?)` contains view recursion',
            self::ER_NON_GROUPING_FIELD_USED => 'Non\\-grouping field \'(.*?)\' is used in (.*?) clause',
            self::ER_REMOVED_SPACES => 'Leading spaces are removed from name \'(.*?)\'',
            self::ER_WRONG_STRING_LENGTH => 'String \'(.*?)\' is too long for (.*?) \\(should be no longer than (\\d+?)\\)',
            self::ER_NON_INSERTABLE_TABLE => 'The target table (.*?) of the (.*?) is not insertable\\-into',
            self::ER_ADMIN_WRONG_MRG_TABLE => 'Table \'(.*?)\' is differently defined or of non\\-MyISAM type or doesn\'t exist',
            self::ER_NAME_BECOMES_EMPTY => 'Name \'(.*?)\' has become \'\'',
            self::ER_FOREIGN_SERVER_EXISTS => 'The foreign server, (.*?), you are trying to create already exists\\.',
            self::ER_FOREIGN_SERVER_DOESNT_EXIST => 'The foreign server name you are trying to reference does not exist\\. Data source error\\: (.*?)',
            self::ER_ILLEGAL_HA_CREATE_OPTION => 'Table storage engine \'(.*?)\' does not support the create option \'(.*?)\'',
            self::ER_PARTITION_REQUIRES_VALUES_ERROR => 'Syntax error\\: (.*?) PARTITIONING requires definition of VALUES (.*?) for each partition',
            self::ER_PARTITION_WRONG_VALUES_ERROR => 'Only (.*?) PARTITIONING can use VALUES (.*?) in partition definition',
            self::ER_PARTITION_FUNC_NOT_ALLOWED_ERROR => 'The (.*?) function returns the wrong type',
            self::ER_PARTITIONS_MUST_BE_DEFINED_ERROR => 'For (.*?) partitions each partition must be defined',
            self::ER_PARTITION_NOT_DEFINED_ERROR => 'For the partitioned engine it is necessary to define all (.*?)',
            self::ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF => 'A (.*?) must include all columns in the table\'s partitioning function \\(prefixed columns are not considered\\)\\.',
            self::ER_NO_PARTS_ERROR => 'Number of (.*?) \\= 0 is not an allowed value',
            self::ER_DROP_PARTITION_NON_EXISTENT => 'Error in list of partitions to (.*?)',
            self::ER_ONLY_ON_RANGE_LIST_PARTITION => '(.*?) PARTITION can only be used on RANGE/LIST partitions',
            self::ER_SAME_NAME_PARTITION => 'Duplicate partition name (.*?)',
            self::ER_LIMITED_PART_RANGE => 'The (.*?) handler only supports 32 bit integers in VALUES',
            self::ER_PLUGIN_IS_NOT_LOADED => 'Plugin \'(.*?)\' is not loaded',
            self::ER_WRONG_VALUE => 'Incorrect (.*?) value\\: \'(.*?)\'',
            self::ER_NO_PARTITION_FOR_GIVEN_VALUE => 'Table has no partition for value (.*?)',
            self::ER_FILEGROUP_OPTION_ONLY_ONCE => 'It is not allowed to specify (.*?) more than once',
            self::ER_CREATE_FILEGROUP_FAILED => 'Failed to create (.*?)',
            self::ER_DROP_FILEGROUP_FAILED => 'Failed to drop (.*?)',
            self::ER_ALTER_FILEGROUP_FAILED => 'Failed to alter\\: (.*?)',
            self::ER_EVENT_ALREADY_EXISTS => 'Event \'(.*?)\' already exists',
            self::ER_EVENT_DOES_NOT_EXIST => 'Unknown event \'(.*?)\'',
            self::ER_DROP_INDEX_FK => 'Cannot drop index \'(.*?)\'\\: needed in a foreign key constraint',
            self::ER_WARN_DEPRECATED_SYNTAX_WITH_VER => 'The syntax \'(.*?)\' is deprecated and will be removed in MySQL (.*?)\\. Please use (.*?) instead',
            self::ER_FOREIGN_DUPLICATE_KEY_OLD_UNUSED => 'Upholding foreign key constraints for table \'(.*?)\', entry \'(.*?)\', key (\\d+?) would lead to a duplicate entry',
            self::ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE => 'The column count of mysql\\.(.*?) is wrong\\. Expected (\\d+?), found (\\d+?)\\. Created with MySQL (\\d+?), now running (\\d+?)\\. Please perform the MySQL upgrade procedure\\.',
            self::ER_DUP_ENTRY_AUTOINCREMENT_CASE => 'ALTER TABLE causes auto_increment resequencing, resulting in duplicate entry \'(.*?)\' for key \'(.*?)\'',
            self::ER_EVENT_SET_VAR_ERROR => 'Error during starting/stopping of the scheduler\\. Error code (\\d+?)',
            self::ER_BAD_LOG_STATEMENT => 'You cannot \'(.*?)\' a log table if logging is enabled',
            self::ER_CANT_RENAME_LOG_TABLE => 'Cannot rename \'(.*?)\'\\. When logging enabled, rename to/from log table must rename two tables\\: the log table to an archive table and another table back to \'(.*?)\'',
            self::ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT => 'Incorrect parameter count in the call to native function \'(.*?)\'',
            self::ER_WRONG_PARAMETERS_TO_NATIVE_FCT => 'Incorrect parameters in the call to native function \'(.*?)\'',
            self::ER_WRONG_PARAMETERS_TO_STORED_FCT => 'Incorrect parameters in the call to stored function (.*?)',
            self::ER_NATIVE_FCT_NAME_COLLISION => 'This function \'(.*?)\' has the same name as a native function',
            self::ER_DUP_ENTRY_WITH_KEY_NAME => 'Duplicate entry \'(.*?)\' for key \'(.*?)\'',
            self::ER_BINLOG_UNSAFE_STATEMENT => 'Unsafe statement written to the binary log using statement format since BINLOG_FORMAT \\= STATEMENT\\. (.*?)',
            self::ER_BINLOG_FATAL_ERROR => 'Fatal error\\: (.*?)',
            self::ER_BINLOG_LOGGING_IMPOSSIBLE => 'Binary logging not possible\\. Message\\: (.*?)',
            self::ER_VIEW_NO_CREATION_CTX => 'View `(.*?)`\\.`(.*?)` has no creation context',
            self::ER_VIEW_INVALID_CREATION_CTX => 'Creation context of view `(.*?)`\\.`(.*?)\' is invalid',
            self::ER_TRG_CORRUPTED_FILE => 'Corrupted TRG file for table `(.*?)`\\.`(.*?)`',
            self::ER_TRG_NO_CREATION_CTX => 'Triggers for table `(.*?)`\\.`(.*?)` have no creation context',
            self::ER_TRG_INVALID_CREATION_CTX => 'Trigger creation context of table `(.*?)`\\.`(.*?)` is invalid',
            self::ER_EVENT_INVALID_CREATION_CTX => 'Creation context of event `(.*?)`\\.`(.*?)` is invalid',
            self::ER_TRG_CANT_OPEN_TABLE => 'Cannot open table for trigger `(.*?)`\\.`(.*?)`',
            self::ER_NO_FORMAT_DESCRIPTION_EVENT_BEFORE_BINLOG_STATEMENT => 'The BINLOG statement of type `(.*?)` was not preceded by a format description BINLOG statement\\.',
            self::ER_LOG_PURGE_NO_FILE => 'Being purged log (.*?) was not found',
            self::WARN_OPTION_IGNORED => '\\<(.*?)\\> option ignored',
            self::ER_VARIABLE_IS_READONLY => '(.*?) variable \'(.*?)\' is read\\-only\\. Use SET (.*?) to assign the value',
            self::ER_WARN_ENGINE_TRANSACTION_ROLLBACK => 'Storage engine (.*?) does not support rollback for this statement\\. Transaction rolled back and must be restarted',
            self::ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE => 'The requested value for the heartbeat period is either negative or exceeds the maximum allowed \\((.*?) seconds\\)\\.',
            self::ER_NDB_REPLICATION_SCHEMA_ERROR => 'Bad schema for mysql\\.ndb_replication table\\. Message\\: (.*?)',
            self::ER_CONFLICT_FN_PARSE_ERROR => 'Error in parsing conflict function\\. Message\\: (.*?)',
            self::ER_EXCEPTIONS_WRITE_ERROR => 'Write to exceptions table failed\\. Message\\: (.*?)',
            self::ER_TOO_LONG_TABLE_COMMENT => 'Comment for table \'(.*?)\' is too long \\(max \\= (\\d+?)\\)',
            self::ER_TOO_LONG_FIELD_COMMENT => 'Comment for field \'(.*?)\' is too long \\(max \\= (\\d+?)\\)',
            self::ER_FUNC_INEXISTENT_NAME_COLLISION => 'FUNCTION (.*?) does not exist\\. Check the \'Function Name Parsing and Resolution\' section in the Reference Manual',
            self::ER_DUP_SIGNAL_SET => 'Duplicate condition information item \'(.*?)\'',
            self::WARN_COND_ITEM_TRUNCATED => 'Data truncated for condition item \'(.*?)\'',
            self::ER_COND_ITEM_TOO_LONG => 'Data too long for condition item \'(.*?)\'',
            self::ER_UNKNOWN_LOCALE => 'Unknown locale\\: \'(.*?)\'',
            self::ER_REPLICA_IGNORE_SERVER_IDS => 'The requested server id (\\d+?) clashes with the replica startup option \\-\\-replicate\\-same\\-server\\-id',
            self::ER_SAME_NAME_PARTITION_FIELD => 'Duplicate partition field name \'(.*?)\'',
            self::ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR => 'Too many fields in \'(.*?)\'',
            self::ER_TOO_MANY_VALUES_ERROR => 'Cannot have more than one value for this type of (.*?) partitioning',
            self::ER_FIELD_TYPE_NOT_ALLOWED_AS_PARTITION_FIELD => 'Field \'(.*?)\' is of a not allowed type for this type of partitioning',
            self::ER_BINLOG_UNSAFE_AND_STMT_ENGINE => 'Cannot execute statement\\: impossible to write to binary log since statement is unsafe, storage engine is limited to statement\\-based logging, and BINLOG_FORMAT \\= MIXED\\. (.*?)',
            self::ER_BINLOG_STMT_MODE_AND_ROW_ENGINE => 'Cannot execute statement\\: impossible to write to binary log since BINLOG_FORMAT \\= STATEMENT and at least one table uses a storage engine limited to row\\-based logging\\.(.*?)',
            self::ER_MESSAGE_AND_STATEMENT => '(.*?) Statement\\: (.*?)',
            self::ER_REPLICA_CANT_CREATE_CONVERSION => 'Can\'t create conversion table for table \'(.*?)\\.(.*?)\'',
            self::ER_PATH_LENGTH => 'The path specified for (.*?) is too long\\.',
            self::ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT => '\'(.*?)\' is deprecated and will be removed in a future release\\.',
            self::ER_WRONG_NATIVE_TABLE_STRUCTURE => 'Native table \'(.*?)\'\\.\'(.*?)\' has the wrong structure',
            self::ER_WARN_I_S_SKIPPED_TABLE => 'Table \'(.*?)\'\\.\'(.*?)\' was skipped since its definition is being modified by concurrent DDL statement',
            self::ER_TOO_LONG_INDEX_COMMENT => 'Comment for index \'(.*?)\' is too long \\(max \\= (\\d+?)\\)',
            self::ER_DATA_OUT_OF_RANGE => '(.*?) value is out of range in \'(.*?)\'',
            self::ER_VALUES_IS_NOT_INT_TYPE_ERROR => 'VALUES value for partition \'(.*?)\' must have type INT',
            self::ER_ACCESS_DENIED_NO_PASSWORD_ERROR => 'Access denied for user \'(.*?)\'@\'(.*?)\'',
            self::ER_TRUNCATE_ILLEGAL_FK => 'Cannot truncate a table referenced in a foreign key constraint \\((.*?)\\)',
            self::ER_PLUGIN_IS_PERMANENT => 'Plugin \'(.*?)\' is force_plus_permanent and can not be unloaded',
            self::ER_MULTI_UPDATE_KEY_CONFLICT => 'Primary key/partition key update is not allowed since the table is updated both as \'(.*?)\' and \'(.*?)\'\\.',
            self::ER_TABLE_NEEDS_REBUILD => 'Table rebuild required\\. Please do "ALTER TABLE `(.*?)` FORCE" or dump/reload to fix it\\!',
            self::WARN_OPTION_BELOW_LIMIT => 'The value of \'(.*?)\' should be no less than the value of \'(.*?)\'',
            self::ER_INDEX_COLUMN_TOO_LONG => 'Index column size too large\\. The maximum column size is (\\d+?) bytes\\.',
            self::ER_ERROR_IN_TRIGGER_BODY => 'Trigger \'(.*?)\' has an error in its body\\: \'(.*?)\'',
            self::ER_ERROR_IN_UNKNOWN_TRIGGER_BODY => 'Unknown trigger has an error in its body\\: \'(.*?)\'',
            self::ER_INDEX_CORRUPT => 'Index (.*?) is corrupted',
            self::ER_PLUGIN_NO_UNINSTALL => 'Plugin \'(.*?)\' is marked as not dynamically uninstallable\\. You have to stop the server to uninstall it\\.',
            self::ER_PLUGIN_NO_INSTALL => 'Plugin \'(.*?)\' is marked as not dynamically installable\\. You have to stop the server to install it\\.',
            self::ER_UNSUPPORTED_ENGINE => 'Storage engine \'(.*?)\' does not support system tables\\. \\[(.*?)\\.(.*?)\\]',
            self::ER_CANNOT_LOAD_FROM_TABLE_V2 => 'Cannot load from (.*?)\\.(.*?)\\. The table is probably corrupted',
            self::ER_SOURCE_DELAY_VALUE_OUT_OF_RANGE => 'The requested value (.*?) for the source delay exceeds the maximum (\\d+?)',
            self::ER_ONLY_FD_AND_RBR_EVENTS_ALLOWED_IN_BINLOG_STATEMENT => 'Only Format_description_log_event and row events are allowed in BINLOG statements \\(but (.*?) was provided\\)',
            self::ER_PARTITION_EXCHANGE_DIFFERENT_OPTION => 'Non matching attribute \'(.*?)\' between partition and table',
            self::ER_PARTITION_EXCHANGE_PART_TABLE => 'Table to exchange with partition is partitioned\\: \'(.*?)\'',
            self::ER_PARTITION_EXCHANGE_TEMP_TABLE => 'Table to exchange with partition is temporary\\: \'(.*?)\'',
            self::ER_UNKNOWN_PARTITION => 'Unknown partition \'(.*?)\' in table \'(.*?)\'',
            self::ER_BINLOG_CACHE_SIZE_GREATER_THAN_MAX => 'Option binlog_cache_size \\((\\d+?)\\) is greater than max_binlog_cache_size \\((\\d+?)\\); setting binlog_cache_size equal to max_binlog_cache_size\\.',
            self::ER_WARN_INDEX_NOT_APPLICABLE => 'Cannot use (.*?) access on index \'(.*?)\' due to type or collation conversion on field \'(.*?)\'',
            self::ER_PARTITION_EXCHANGE_FOREIGN_KEY => 'Table to exchange with partition has foreign key references\\: \'(.*?)\'',
            self::ER_RPL_INFO_DATA_TOO_LONG => 'Data for column \'(.*?)\' too long',
            self::ER_BINLOG_STMT_CACHE_SIZE_GREATER_THAN_MAX => 'Option binlog_stmt_cache_size \\((\\d+?)\\) is greater than max_binlog_stmt_cache_size \\((\\d+?)\\); setting binlog_stmt_cache_size equal to max_binlog_stmt_cache_size\\.',
            self::ER_CANT_UPDATE_TABLE_IN_CREATE_TABLE_SELECT => 'Can\'t update table \'(.*?)\' while \'(.*?)\' is being created\\.',
            self::ER_CHANGE_RPL_INFO_REPOSITORY_FAILURE => 'Failure while changing the type of replication repository\\: (.*?)\\.',
            self::ER_MTA_FEATURE_IS_NOT_SUPPORTED => '(.*?) is not supported in multi\\-threaded replica mode\\. (.*?)',
            self::ER_MTA_UPDATED_DBS_GREATER_MAX => 'The number of modified databases exceeds the maximum (\\d+?); the database names will not be included in the replication event metadata\\.',
            self::ER_MTA_CANT_PARALLEL => 'Cannot execute the current event group in the parallel mode\\. Encountered event (.*?), relay\\-log name (.*?), position (.*?) which prevents execution of this event group in parallel mode\\. Reason\\: (.*?)\\.',
            self::ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO => 'Foreign key constraint for table \'(.*?)\', record \'(.*?)\' would lead to a duplicate entry in table \'(.*?)\', key \'(.*?)\'',
            self::ER_FOREIGN_DUPLICATE_KEY_WITHOUT_CHILD_INFO => 'Foreign key constraint for table \'(.*?)\', record \'(.*?)\' would lead to a duplicate entry in a child table',
            self::ER_VARIABLE_NOT_SETTABLE_IN_SF_OR_TRIGGER => 'The system variable (.*?) cannot be set in stored functions or triggers\\.',
            self::ER_VARIABLE_NOT_SETTABLE_IN_TRANSACTION => 'The system variable (.*?) cannot be set when there is an ongoing transaction\\.',
            self::ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION => 'The statement \'SET (.*?)\' cannot invoke a stored function\\.',
            self::ER_MALFORMED_GTID_SET_SPECIFICATION => 'Malformed GTID set specification \'(.*?)\'\\.',
            self::ER_MALFORMED_GTID_SPECIFICATION => 'Malformed GTID specification \'(.*?)\'\\.',
            self::ER_SOURCE_HAS_PURGED_REQUIRED_GTIDS => 'Cannot replicate because the source purged required binary logs\\. Replicate the missing transactions from elsewhere, or provision a new replica from backup\\. Consider increasing the source\'s binary log expiration period\\. (.*?)',
            self::ER_CANT_SET_GTID_NEXT_WHEN_OWNING_GTID => '@@SESSION\\.GTID_NEXT cannot be changed by a client that owns a GTID\\. The client owns (.*?)\\. Ownership is released on COMMIT or ROLLBACK\\.',
            self::ER_UNKNOWN_EXPLAIN_FORMAT => 'Unknown EXPLAIN format name\\: \'(.*?)\'',
            self::ER_TOO_LONG_TABLE_PARTITION_COMMENT => 'Comment for table partition \'(.*?)\' is too long \\(max \\= (\\d+?)\\)',
            self::ER_INNODB_FT_WRONG_DOCID_COLUMN => 'Column \'(.*?)\' is of wrong type for an InnoDB FULLTEXT index',
            self::ER_INNODB_FT_WRONG_DOCID_INDEX => 'Index \'(.*?)\' is of wrong type for an InnoDB FULLTEXT index',
            self::ER_INNODB_ONLINE_LOG_TOO_BIG => 'Creating index \'(.*?)\' required more than \'innodb_online_alter_log_max_size\' bytes of modification log\\. Please try again\\.',
            self::ER_UNKNOWN_ALTER_ALGORITHM => 'Unknown ALGORITHM \'(.*?)\'',
            self::ER_UNKNOWN_ALTER_LOCK => 'Unknown LOCK type \'(.*?)\'',
            self::ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2 => 'Column count of (.*?)\\.(.*?) is wrong\\. Expected (\\d+?), found (\\d+?)\\. The table is probably corrupted',
            self::ER_DISCARD_FK_CHECKS_RUNNING => 'There is a foreign key check running on table \'(.*?)\'\\. Cannot discard the table\\.',
            self::ER_TABLE_SCHEMA_MISMATCH => 'Schema mismatch \\((.*?)\\)',
            self::ER_TABLE_IN_SYSTEM_TABLESPACE => 'Table \'(.*?)\' in system tablespace',
            self::ER_IO_READ_ERROR => 'IO Read error\\: \\((\\d+?), (.*?)\\) (.*?)',
            self::ER_IO_WRITE_ERROR => 'IO Write error\\: \\((\\d+?), (.*?)\\) (.*?)',
            self::ER_TABLESPACE_MISSING => 'Tablespace is missing for table (.*?)\\.',
            self::ER_TABLESPACE_EXISTS => 'Tablespace \'(.*?)\' exists\\.',
            self::ER_TABLESPACE_DISCARDED => 'Tablespace has been discarded for table \'(.*?)\'',
            self::ER_INTERNAL_ERROR => 'Internal error\\: (.*?)',
            self::ER_INNODB_IMPORT_ERROR => 'ALTER TABLE (.*?) IMPORT TABLESPACE failed with error (\\d+?) \\: \'(.*?)\'',
            self::ER_INNODB_INDEX_CORRUPT => 'Index corrupt\\: (.*?)',
            self::ER_FK_NO_INDEX_CHILD => 'Failed to add the foreign key constraint\\. Missing index for constraint \'(.*?)\' in the foreign table \'(.*?)\'',
            self::ER_FK_NO_INDEX_PARENT => 'Failed to add the foreign key constraint\\. Missing index for constraint \'(.*?)\' in the referenced table \'(.*?)\'',
            self::ER_FK_FAIL_ADD_SYSTEM => 'Failed to add the foreign key constraint \'(.*?)\' to system tables',
            self::ER_FK_CANNOT_OPEN_PARENT => 'Failed to open the referenced table \'(.*?)\'',
            self::ER_FK_INCORRECT_OPTION => 'Failed to add the foreign key constraint on table \'(.*?)\'\\. Incorrect options in FOREIGN KEY constraint \'(.*?)\'',
            self::ER_FK_DUP_NAME => 'Duplicate foreign key constraint name \'(.*?)\'',
            self::ER_FK_COLUMN_CANNOT_DROP => 'Cannot drop column \'(.*?)\'\\: needed in a foreign key constraint \'(.*?)\'',
            self::ER_FK_COLUMN_CANNOT_DROP_CHILD => 'Cannot drop column \'(.*?)\'\\: needed in a foreign key constraint \'(.*?)\' of table \'(.*?)\'',
            self::ER_FK_COLUMN_NOT_NULL => 'Column \'(.*?)\' cannot be NOT NULL\\: needed in a foreign key constraint \'(.*?)\' SET NULL',
            self::ER_DUP_INDEX => 'Duplicate index \'(.*?)\' defined on the table \'(.*?)\\.(.*?)\'\\. This is deprecated and will be disallowed in a future release\\.',
            self::ER_FK_COLUMN_CANNOT_CHANGE => 'Cannot change column \'(.*?)\'\\: used in a foreign key constraint \'(.*?)\'',
            self::ER_FK_COLUMN_CANNOT_CHANGE_CHILD => 'Cannot change column \'(.*?)\'\\: used in a foreign key constraint \'(.*?)\' of table \'(.*?)\'',
            self::ER_GTID_NEXT_TYPE_UNDEFINED_GTID => 'When @@SESSION\\.GTID_NEXT is set to a GTID, you must explicitly set it to a different value after a COMMIT or ROLLBACK\\. Please check GTID_NEXT variable manual page for detailed explanation\\. Current @@SESSION\\.GTID_NEXT is \'(.*?)\'\\.',
            self::ER_VARIABLE_NOT_SETTABLE_IN_SP => 'The system variable (.*?) cannot be set in stored procedures\\.',
            self::ER_GTID_PURGED_WAS_CHANGED => '@@GLOBAL\\.GTID_PURGED was changed from \'(.*?)\' to \'(.*?)\'\\.',
            self::ER_GTID_EXECUTED_WAS_CHANGED => '@@GLOBAL\\.GTID_EXECUTED was changed from \'(.*?)\' to \'(.*?)\'\\.',
            self::ER_ALTER_OPERATION_NOT_SUPPORTED => '(.*?) is not supported for this operation\\. Try (.*?)\\.',
            self::ER_ALTER_OPERATION_NOT_SUPPORTED_REASON => '(.*?) is not supported\\. Reason\\: (.*?)\\. Try (.*?)\\.',
            self::ER_DUP_UNKNOWN_IN_INDEX => 'Duplicate entry for key \'(.*?)\'',
            self::ER_IDENT_CAUSES_TOO_LONG_PATH => 'Long database name and identifier for object resulted in path length exceeding (\\d+?) characters\\. Path\\: \'(.*?)\'\\.',
            self::ER_ROW_IN_WRONG_PARTITION => 'Found a row in wrong partition (.*?)',
            self::ER_MTA_EVENT_BIGGER_PENDING_JOBS_SIZE_MAX => 'Cannot schedule event (.*?), relay\\-log name (.*?), position (.*?) to Worker thread because its size (\\d+?) exceeds (\\d+?) of replica_pending_jobs_size_max\\.',
            self::ER_BINLOG_LOGICAL_CORRUPTION => 'The binary log file \'(.*?)\' is logically corrupted\\: (.*?)',
            self::ER_WARN_PURGE_LOG_IN_USE => 'file (.*?) was not purged because it was being read by (\\d+?) thread\\(s\\), purged only (\\d+?) out of (\\d+?) files\\.',
            self::ER_WARN_PURGE_LOG_IS_ACTIVE => 'file (.*?) was not purged because it is the active log file\\.',
            self::WARN_ON_BLOCKHOLE_IN_RBR => 'Row events are not logged for (.*?) statements that modify BLACKHOLE tables in row format\\. Table\\(s\\)\\: \'(.*?)\'',
            self::ER_ACCESS_DENIED_CHANGE_USER_ERROR => 'Access denied trying to change to user \'(.*?)\'@\'(.*?)\' \\(using password\\: (.*?)\\)\\. Disconnecting\\.',
            self::ER_TABLE_CORRUPT => 'Operation cannot be performed\\. The table \'(.*?)\\.(.*?)\' is missing, corrupt or contains bad data\\.',
            self::ER_AES_INVALID_IV => 'The initialization vector supplied to (.*?) is too short\\. Must be at least (\\d+?) bytes long',
            self::ER_PLUGIN_CANNOT_BE_UNINSTALLED => 'Plugin \'(.*?)\' cannot be uninstalled now\\. (.*?)',
            self::ER_MISSING_KEY => 'The table \'(.*?)\\.(.*?)\' does not have the necessary key\\(s\\) defined on it\\. Please check the table definition and create index\\(s\\) accordingly\\.',
            self::WARN_NAMED_PIPE_ACCESS_EVERYONE => 'Setting named_pipe_full_access_group\\=\'(.*?)\' is insecure\\. Consider using a Windows group with fewer members\\.',
            self::ER_FILE_CORRUPT => 'File (.*?) is corrupted',
            self::ER_ERROR_ON_SOURCE => 'Query partially completed on the source \\(error on source\\: (\\d+?)\\) and was aborted\\. There is a chance that your source is inconsistent at this point\\. If you are sure that your source is ok, run this query manually on the replica and then restart the replica with SET GLOBAL SQL_REPLICA_SKIP_COUNTER\\=1; START REPLICA;\\. Query\\:\'(.*?)\'',
            self::ER_STORAGE_ENGINE_NOT_LOADED => 'Storage engine for table \'(.*?)\'\\.\'(.*?)\' is not loaded\\.',
            self::ER_WARN_LEGACY_SYNTAX_CONVERTED => '(.*?) is no longer supported\\. The statement was converted to (.*?)\\.',
            self::ER_FK_DEPTH_EXCEEDED => 'Foreign key cascade delete/update exceeds max depth of (\\d+?)\\.',
            self::ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE_V2 => 'The column count of (.*?)\\.(.*?) is wrong\\. Expected (\\d+?), found (\\d+?)\\. Created with MySQL (\\d+?), now running (\\d+?)\\. Please perform the MySQL upgrade procedure\\.',
            self::ER_WARN_TRIGGER_DOESNT_HAVE_CREATED => 'Trigger (.*?)\\.(.*?)\\.(.*?) does not have CREATED attribute\\.',
            self::ER_REFERENCED_TRG_DOES_NOT_EXIST => 'Referenced trigger \'(.*?)\' for the given action time and event type does not exist\\.',
            self::ER_INVALID_FIELD_SIZE => 'Invalid size for column \'(.*?)\'\\.',
            self::ER_MISSING_HA_CREATE_OPTION => 'Table storage engine \'(.*?)\' found required create option missing',
            self::ER_ENGINE_OUT_OF_MEMORY => 'Out of memory in storage engine \'(.*?)\'\\.',
            self::ER_INNODB_UNDO_LOG_FULL => 'Undo Log error\\: (.*?)',
            self::ER_REPLICA_CHANNEL_IO_THREAD_MUST_STOP => 'This operation cannot be performed with a running replica io thread; run STOP REPLICA IO_THREAD FOR CHANNEL \'(.*?)\' first\\.',
            self::ER_DUP_LIST_ENTRY => 'Duplicate entry \'(.*?)\'\\.',
            self::ER_AGGREGATE_ORDER_FOR_UNION => 'Expression \\#(\\d+?) of ORDER BY contains aggregate function and applies to a UNION, EXCEPT or INTERSECT',
            self::ER_AGGREGATE_ORDER_NON_AGG_QUERY => 'Expression \\#(\\d+?) of ORDER BY contains aggregate function and applies to the result of a non\\-aggregated query',
            self::ER_DONT_SUPPORT_REPLICA_PRESERVE_COMMIT_ORDER => 'replica_preserve_commit_order is not supported (.*?)\\.',
            self::ER_GIS_DIFFERENT_SRIDS => 'Binary geometry function (.*?) given two geometries of different srids\\: (\\d+?) and (\\d+?), which should have been identical\\.',
            self::ER_GIS_UNSUPPORTED_ARGUMENT => 'Calling geometry function (.*?) with unsupported types of arguments\\.',
            self::ER_GIS_UNKNOWN_ERROR => 'Unknown GIS error occurred in function (.*?)\\.',
            self::ER_GIS_UNKNOWN_EXCEPTION => 'Unknown exception caught in GIS function (.*?)\\.',
            self::ER_GIS_INVALID_DATA => 'Invalid GIS data provided to function (.*?)\\.',
            self::ER_BOOST_GEOMETRY_EMPTY_INPUT_EXCEPTION => 'The geometry has no data in function (.*?)\\.',
            self::ER_BOOST_GEOMETRY_CENTROID_EXCEPTION => 'Unable to calculate centroid because geometry is empty in function (.*?)\\.',
            self::ER_BOOST_GEOMETRY_OVERLAY_INVALID_INPUT_EXCEPTION => 'Geometry overlay calculation error\\: geometry data is invalid in function (.*?)\\.',
            self::ER_BOOST_GEOMETRY_TURN_INFO_EXCEPTION => 'Geometry turn info calculation error\\: geometry data is invalid in function (.*?)\\.',
            self::ER_BOOST_GEOMETRY_SELF_INTERSECTION_POINT_EXCEPTION => 'Analysis procedures of intersection points interrupted unexpectedly in function (.*?)\\.',
            self::ER_BOOST_GEOMETRY_UNKNOWN_EXCEPTION => 'Unknown exception thrown in function (.*?)\\.',
            self::ER_STD_BAD_ALLOC_ERROR => 'Memory allocation error\\: (.*?) in function (.*?)\\.',
            self::ER_STD_DOMAIN_ERROR => 'Domain error\\: (.*?) in function (.*?)\\.',
            self::ER_STD_LENGTH_ERROR => 'Length error\\: (.*?) in function (.*?)\\.',
            self::ER_STD_INVALID_ARGUMENT => 'Invalid argument error\\: (.*?) in function (.*?)\\.',
            self::ER_STD_OUT_OF_RANGE_ERROR => 'Out of range error\\: (.*?) in function (.*?)\\.',
            self::ER_STD_OVERFLOW_ERROR => 'Overflow error\\: (.*?) in function (.*?)\\.',
            self::ER_STD_RANGE_ERROR => 'Range error\\: (.*?) in function (.*?)\\.',
            self::ER_STD_UNDERFLOW_ERROR => 'Underflow error\\: (.*?) in function (.*?)\\.',
            self::ER_STD_LOGIC_ERROR => 'Logic error\\: (.*?) in function (.*?)\\.',
            self::ER_STD_RUNTIME_ERROR => 'Runtime error\\: (.*?) in function (.*?)\\.',
            self::ER_STD_UNKNOWN_EXCEPTION => 'Unknown exception\\: (.*?) in function (.*?)\\.',
            self::ER_USER_LOCK_WRONG_NAME => 'Incorrect user\\-level lock name \'(.*?)\'\\. The name is empty, NULL, or can not be expressed in the current character\\-set\\.',
            self::ER_ILLEGAL_USER_VAR => 'User variable name \'(.*?)\' is illegal',
            self::ER_GTID_MODE_OFF => 'Cannot (.*?) when GTID_MODE \\= OFF\\.',
            self::ER_INCORRECT_TYPE => 'Incorrect type for argument (.*?) in function (.*?)\\.',
            self::ER_FIELD_IN_ORDER_NOT_SELECT => 'Expression \\#(\\d+?) of ORDER BY clause is not in SELECT list, references column \'(.*?)\' which is not in SELECT list; this is incompatible with (.*?)',
            self::ER_AGGREGATE_IN_ORDER_NOT_SELECT => 'Expression \\#(\\d+?) of ORDER BY clause is not in SELECT list, contains aggregate function; this is incompatible with (.*?)',
            self::ER_INVALID_JSON_DATA => 'Invalid JSON data provided to function (.*?)\\: (.*?)',
            self::ER_INVALID_GEOJSON_MISSING_MEMBER => 'Invalid GeoJSON data provided to function (.*?)\\: Missing required member \'(.*?)\'',
            self::ER_INVALID_GEOJSON_WRONG_TYPE => 'Invalid GeoJSON data provided to function (.*?)\\: Member \'(.*?)\' must be of type \'(.*?)\'',
            self::ER_INVALID_GEOJSON_UNSPECIFIED => 'Invalid GeoJSON data provided to function (.*?)',
            self::ER_DIMENSION_UNSUPPORTED => 'Unsupported number of coordinate dimensions in function (.*?)\\: Found (\\d+?), expected (\\d+?)',
            self::ER_REPLICA_CHANNEL_DOES_NOT_EXIST => 'Replica channel \'(.*?)\' does not exist\\.',
            self::ER_REPLICA_CHANNEL_MUST_STOP => 'This operation cannot be performed with running replication threads; run STOP REPLICA FOR CHANNEL \'(.*?)\' first',
            self::ER_REPLICA_CHANNEL_NOT_RUNNING => 'This operation requires running replication threads; configure replica and run START REPLICA FOR CHANNEL \'(.*?)\'',
            self::ER_REPLICA_CHANNEL_WAS_RUNNING => 'Replication thread\\(s\\) for channel \'(.*?)\' are already runnning\\.',
            self::ER_REPLICA_CHANNEL_WAS_NOT_RUNNING => 'Replication thread\\(s\\) for channel \'(.*?)\' are already stopped\\.',
            self::ER_REPLICA_CHANNEL_SQL_THREAD_MUST_STOP => 'This operation cannot be performed with a running replica sql thread; run STOP REPLICA SQL_THREAD FOR CHANNEL \'(.*?)\' first\\.',
            self::ER_WRONG_FIELD_WITH_GROUP_V2 => 'Expression \\#(\\d+?) of (.*?) is not in GROUP BY clause and contains nonaggregated column \'(.*?)\' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode\\=only_full_group_by',
            self::ER_MIX_OF_GROUP_FUNC_AND_FIELDS_V2 => 'In aggregated query without GROUP BY, expression \\#(\\d+?) of (.*?) contains nonaggregated column \'(.*?)\'; this is incompatible with sql_mode\\=only_full_group_by',
            self::ER_WARN_DEPRECATED_SYSVAR_UPDATE => 'Updating \'(.*?)\' is deprecated\\. It will be made read\\-only in a future release\\.',
            self::ER_WARN_DEPRECATED_SQLMODE => 'Changing sql mode \'(.*?)\' is deprecated\\. It will be removed in a future release\\.',
            self::ER_CANNOT_LOG_PARTIAL_DROP_DATABASE_WITH_GTID => 'DROP DATABASE failed; some tables may have been dropped but the database directory remains\\. The GTID has not been added to GTID_EXECUTED and the statement was not written to the binary log\\. Fix this as follows\\: \\(1\\) remove all files from the database directory (.*?); \\(2\\) SET GTID_NEXT\\=\'(.*?)\'; \\(3\\) DROP DATABASE `(.*?)`\\.',
            self::ER_PREVENTS_VARIABLE_WITHOUT_RBR => 'Cannot change the value of variable (.*?) without binary log format as ROW\\.',
            self::ER_RUN_HOOK_ERROR => 'Error on observer while running replication hook \'(.*?)\'\\.',
            self::ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED => 'Expression of generated column \'(.*?)\' contains a disallowed function\\.',
            self::ER_WRONG_FK_OPTION_FOR_GENERATED_COLUMN => 'Cannot define foreign key with (.*?) clause on a generated column\\.',
            self::ER_NON_DEFAULT_VALUE_FOR_GENERATED_COLUMN => 'The value specified for generated column \'(.*?)\' in table \'(.*?)\' is not allowed\\.',
            self::ER_UNSUPPORTED_ACTION_ON_GENERATED_COLUMN => '\'(.*?)\' is not supported for generated columns\\.',
            self::ER_DEPENDENT_BY_GENERATED_COLUMN => 'Column \'(.*?)\' has a generated column dependency\\.',
            self::ER_GENERATED_COLUMN_REF_AUTO_INC => 'Generated column \'(.*?)\' cannot refer to auto\\-increment column\\.',
            self::ER_FEATURE_NOT_AVAILABLE => 'The \'(.*?)\' feature is not available; you need to remove \'(.*?)\' or use MySQL built with \'(.*?)\'',
            self::ER_CANT_SET_GTID_MODE => 'SET @@GLOBAL\\.GTID_MODE \\= (.*?) is not allowed because (.*?)\\.',
            self::ER_CANT_USE_AUTO_POSITION_WITH_GTID_MODE_OFF => 'The replication receiver thread(.*?) cannot start in AUTO_POSITION mode\\: this server uses @@GLOBAL\\.GTID_MODE \\= OFF\\.',
            self::ER_ACCOUNT_HAS_BEEN_LOCKED => 'Access denied for user \'(.*?)\'@\'(.*?)\'\\. Account is locked\\.',
            self::ER_WRONG_TABLESPACE_NAME => 'Incorrect tablespace name `(.*?)`',
            self::ER_TABLESPACE_IS_NOT_EMPTY => 'Tablespace `(.*?)` is not empty\\.',
            self::ER_WRONG_FILE_NAME => 'Incorrect File Name \'(.*?)\'\\.',
            self::ER_WARN_CONFLICTING_HINT => 'Hint (.*?) is ignored as conflicting/duplicated',
            self::ER_WARN_UNKNOWN_QB_NAME => 'Query block name (.*?) is not found for (.*?) hint',
            self::ER_UNRESOLVED_HINT_NAME => 'Unresolved name (.*?) for (.*?) hint',
            self::ER_WARN_ON_MODIFYING_GTID_EXECUTED_TABLE => 'Please do not modify the (.*?) table\\. This is a mysql internal system table to store GTIDs for committed transactions\\. Modifying it can lead to an inconsistent GTID state\\.',
            self::ER_LOCKING_SERVICE_WRONG_NAME => 'Incorrect locking service lock name \'(.*?)\'\\.',
            self::ER_GIS_MAX_POINTS_IN_GEOMETRY_OVERFLOWED => 'Parameter (.*?) exceeds the maximum number of points in a geometry \\((\\d+?)\\) in function (.*?)\\.',
            self::ER_VTOKEN_PLUGIN_TOKEN_MISMATCH => 'Version token mismatch for (.*?)\\. Correct value (.*?)',
            self::ER_VTOKEN_PLUGIN_TOKEN_NOT_FOUND => 'Version token (.*?) not found\\.',
            self::ER_CANT_SET_VARIABLE_WHEN_OWNING_GTID => 'Variable (.*?) cannot be changed by a client that owns a GTID\\. The client owns (.*?)\\. Ownership is released on COMMIT or ROLLBACK\\.',
            self::ER_REPLICA_CHANNEL_OPERATION_NOT_ALLOWED => '(.*?) cannot be performed on channel \'(.*?)\'\\.',
            self::ER_INVALID_JSON_TEXT => 'Invalid JSON text\\: "(.*?)" at position (\\d+?) in value for column \'(.*?)\'\\.',
            self::ER_INVALID_JSON_TEXT_IN_PARAM => 'Invalid JSON text in argument (\\d+?) to function (.*?)\\: "(.*?)" at position (\\d+?)\\.(.*?)',
            self::ER_INVALID_JSON_PATH => 'Invalid JSON path expression\\. The error is around character position (\\d+?)\\.(.*?)',
            self::ER_INVALID_JSON_CHARSET => 'Cannot create a JSON value from a string with CHARACTER SET \'(.*?)\'\\.',
            self::ER_INVALID_JSON_CHARSET_IN_FUNCTION => 'Invalid JSON character data provided to function (.*?)\\: \'(.*?)\'; utf8 is required\\.',
            self::ER_INVALID_TYPE_FOR_JSON => 'Invalid data type for JSON data in argument (\\d+?) to function (.*?); a JSON string or JSON type is required\\.',
            self::ER_INVALID_JSON_PATH_CHARSET => 'A path expression must be encoded in the utf8 character set\\. The path expression \'(.*?)\' is encoded in character set \'(.*?)\'\\.',
            self::ER_JSON_USED_AS_KEY => 'JSON column \'(.*?)\' supports indexing only via generated columns on a specified JSON path\\.',
            self::ER_JSON_BAD_ONE_OR_ALL_ARG => 'The oneOrAll argument to (.*?) may take these values\\: \'one\' or \'all\'\\.',
            self::ER_NUMERIC_JSON_VALUE_OUT_OF_RANGE => 'Out of range JSON value for CAST to (.*?)(.*?) from column (.*?) at row (\\d+?)',
            self::ER_INVALID_JSON_VALUE_FOR_CAST => 'Invalid JSON value for CAST to (.*?)(.*?) from column (.*?) at row (\\d+?)',
            self::ER_DISABLED_STORAGE_ENGINE => 'Storage engine (.*?) is disabled \\(Table creation is disallowed\\)\\.',
            self::ER_USER_DOES_NOT_EXIST => 'Authorization ID (.*?) does not exist\\.',
            self::ER_USER_ALREADY_EXISTS => 'Authorization ID (.*?) already exists\\.',
            self::ER_AUDIT_API_ABORT => 'Aborted by Audit API \\(\'(.*?)\';(\\d+?)\\)\\.',
            self::ER_FEATURE_DISABLED_SEE_DOC => 'The \'(.*?)\' feature is disabled; see the documentation for \'(.*?)\'',
            self::ER_CAPACITY_EXCEEDED => 'Memory capacity of (\\d+?) bytes for \'(.*?)\' exceeded\\. (.*?)',
            self::ER_CANT_WAIT_FOR_EXECUTED_GTID_SET_WHILE_OWNING_A_GTID => 'The client holds ownership of the GTID (.*?)\\. Therefore, WAIT_FOR_EXECUTED_GTID_SET cannot wait for this GTID\\.',
            self::ER_ERROR_ON_MODIFYING_GTID_EXECUTED_TABLE => 'Please do not modify the (.*?) table with an XA transaction\\. This is an internal system table used to store GTIDs for committed transactions\\. Although modifying it can lead to an inconsistent GTID state, if necessary you can modify it with a non\\-XA transaction\\.',
            self::ER_KEYRING_UDF_KEYRING_SERVICE_ERROR => 'Function \'(.*?)\' failed because underlying keyring service returned an error\\. Please check if a keyring is installed and that provided arguments are valid for the keyring you are using\\.',
            self::ER_USER_COLUMN_OLD_LENGTH => 'It seems that your db schema is old\\. The (.*?) column is 77 characters long and should be 93 characters long\\. Please perform the MySQL upgrade procedure\\.',
            self::ER_CANT_RESET_SOURCE => 'RESET BINARY LOGS AND GTIDS is not allowed because (.*?)\\.',
            self::ER_KEYRING_AWS_UDF_AWS_KMS_ERROR => 'Function (.*?) failed due to\\: (.*?)\\.',
            self::ER_UDF_ERROR => '(.*?) UDF failed; (.*?)',
            self::ER_KEYRING_MIGRATION_FAILURE => 'Can not perform keyring migration \\: (.*?)',
            self::ER_KEYRING_ACCESS_DENIED_ERROR => 'Access denied; you need (.*?) privileges for this operation',
            self::ER_KEYRING_MIGRATION_STATUS => 'Keyring migration (.*?)\\.',
            self::WARN_AES_KEY_SIZE => 'AES key size should be (\\d+?) bytes length or secure KDF methods hkdf or pbkdf2_hmac should be used, please provide exact AES key size or use KDF methods for better security\\.',
            self::ER_AES_INVALID_KDF_OPTION_SIZE => 'KDF option size is invalid, please provide valid size \\< (\\d+?) bytes and not NULL',
            self::ER_ACL_OPERATION_FAILED => 'The ACL operation failed due to the following error from SE\\: errcode (\\d+?) \\- (.*?)',
            self::ER_UNSUPPORTED_INDEX_ALGORITHM => 'This storage engine does not support the (.*?) index algorithm, storage engine default was used instead\\.',
            self::ER_NO_SUCH_DB => 'Database \'(.*?)\' doesn\'t exist',
            self::ER_TOO_BIG_ENUM => 'Too many enumeration values for column (.*?)\\.',
            self::ER_TOO_LONG_SET_ENUM_VALUE => 'Too long enumeration/set value for column (.*?)\\.',
            self::ER_INVALID_DD_OBJECT => '(.*?) dictionary object is invalid\\. \\((.*?)\\)',
            self::ER_UPDATING_DD_TABLE => 'Failed to update (.*?) dictionary object\\.',
            self::ER_INVALID_DD_OBJECT_ID => 'Dictionary object id \\((\\d+?)\\) does not exist\\.',
            self::ER_INVALID_DD_OBJECT_NAME => 'Dictionary object name \'(.*?)\' is invalid\\. \\((.*?)\\)',
            self::ER_TABLESPACE_MISSING_WITH_NAME => 'Tablespace (.*?) doesn\'t exist\\.',
            self::ER_TOO_LONG_ROUTINE_COMMENT => 'Comment for routine \'(.*?)\' is too long \\(max \\= (\\d+?)\\)',
            self::ER_SP_LOAD_FAILED => 'Failed to load routine \'(.*?)\'\\.',
            self::ER_WARN_UNSUPPORTED_HINT => 'Hints aren\'t supported in (.*?)',
            self::ER_UNEXPECTED_GEOMETRY_TYPE => '(.*?) value is a geometry of unexpected type (.*?) in (.*?)\\.',
            self::ER_SRS_PARSE_ERROR => 'Can\'t parse the spatial reference system definition of SRID (\\d+?)\\.',
            self::ER_SRS_PROJ_PARAMETER_MISSING => 'The spatial reference system definition for SRID (\\d+?) does not specify the mandatory (.*?) \\(EPSG (\\d+?)\\) projection parameter\\.',
            self::ER_WARN_SRS_NOT_FOUND => 'There\'s no spatial reference system with SRID (\\d+?)\\.',
            self::ER_SRS_NOT_CARTESIAN => 'Function (.*?) is only defined for Cartesian spatial reference systems, but one of its arguments is in SRID (\\d+?), which is not Cartesian\\.',
            self::ER_SRS_NOT_CARTESIAN_UNDEFINED => 'Function (.*?) is only defined for Cartesian spatial reference systems, but one of its arguments is in SRID (\\d+?), which has not been defined\\.',
            self::ER_UNKNOWN_AUTHID => 'Unknown authorization ID `(.*?)`@`(.*?)`',
            self::ER_FAILED_ROLE_GRANT => 'Failed to grant (.*?)` to (.*?)',
            self::ER_COMPONENTS_NO_SCHEME => 'Cannot find schema in specified URN\\: \'(.*?)\'\\.',
            self::ER_COMPONENTS_NO_SCHEME_SERVICE => 'Cannot acquire scheme load service implementation for schema \'(.*?)\' in specified URN\\: \'(.*?)\'\\.',
            self::ER_COMPONENTS_CANT_LOAD => 'Cannot load component from specified URN\\: \'(.*?)\'\\.',
            self::ER_ROLE_NOT_GRANTED => '`(.*?)`@`(.*?)` is not granted to `(.*?)`@`(.*?)`',
            self::ER_FAILED_REVOKE_ROLE => 'Could not revoke role from `(.*?)`@`(.*?)`',
            self::ER_COMPONENTS_CANT_ACQUIRE_SERVICE_IMPLEMENTATION => 'Cannot acquire specified service implementation\\: \'(.*?)\'\\.',
            self::ER_COMPONENTS_CANT_SATISFY_DEPENDENCY => 'Cannot satisfy dependency for service \'(.*?)\' required by component \'(.*?)\'\\.',
            self::ER_COMPONENTS_LOAD_CANT_REGISTER_SERVICE_IMPLEMENTATION => 'Cannot register service implementation \'(.*?)\' provided by component \'(.*?)\'\\.',
            self::ER_COMPONENTS_LOAD_CANT_INITIALIZE => 'Initialization method provided by component \'(.*?)\' failed\\.',
            self::ER_COMPONENTS_UNLOAD_NOT_LOADED => 'Component specified by URN \'(.*?)\' to unload has not been loaded before\\.',
            self::ER_COMPONENTS_UNLOAD_CANT_DEINITIALIZE => 'De\\-initialization method provided by component \'(.*?)\' failed\\.',
            self::ER_COMPONENTS_UNLOAD_CANT_UNREGISTER_SERVICE => 'Unregistration of service implementation \'(.*?)\' provided by component \'(.*?)\' failed during unloading of the component\\.',
            self::ER_COMPONENTS_CANT_UNLOAD => 'Cannot unload component from specified URN\\: \'(.*?)\'\\.',
            self::ER_WARN_UNLOAD_THE_NOT_PERSISTED => 'The Persistent Dynamic Loader was used to unload a component \'(.*?)\', but it was not used to load that component before\\.',
            self::ER_COMPONENT_MANIPULATE_ROW_FAILED => 'Failed to manipulate component \'(.*?)\' persistence data\\. Error code (\\d+?) from storage engine\\.',
            self::ER_COMPONENTS_UNLOAD_DUPLICATE_IN_GROUP => 'The component with specified URN\\: \'(.*?)\' was specified in group more than once\\.',
            self::ER_CANT_SET_GTID_PURGED_DUE_SETS_CONSTRAINTS => '@@GLOBAL\\.GTID_PURGED cannot be changed\\: (.*?)',
            self::ER_SRS_NOT_FOUND => 'There\'s no spatial reference system with SRID (\\d+?)\\.',
            self::ER_IS_QUERY_INVALID_CLAUSE => 'Information schema queries do not support the \'(.*?)\' clause\\.',
            self::ER_UNABLE_TO_STORE_STATISTICS => 'Unable to store dynamic (.*?) statistics into data dictionary\\.',
            self::ER_NO_SYSTEM_SCHEMA_ACCESS => 'Access to system schema \'(.*?)\' is rejected\\.',
            self::ER_NO_SYSTEM_TABLESPACE_ACCESS => 'Access to system tablespace \'(.*?)\' is rejected\\.',
            self::ER_NO_SYSTEM_TABLE_ACCESS => 'Access to (.*?) \'(.*?)\\.(.*?)\' is rejected\\.',
            self::ER_INVALID_OPTION_KEY => 'Invalid option key \'(.*?)\' in function (.*?)\\.',
            self::ER_INVALID_OPTION_VALUE => 'Invalid value \'(.*?)\' for option \'(.*?)\' in function \'(.*?)\'\\.',
            self::ER_INVALID_OPTION_KEY_VALUE_PAIR => 'The string \'(.*?)\' is not a valid key (.) value pair in function (.*?)\\.',
            self::ER_INVALID_OPTION_START_CHARACTER => 'The options argument in function (.*?) starts with the invalid character \'(.)\'\\.',
            self::ER_INVALID_OPTION_END_CHARACTER => 'The options argument in function (.*?) ends with the invalid character \'(.)\'\\.',
            self::ER_INVALID_OPTION_CHARACTERS => 'The options argument in function (.*?) contains the invalid character sequence \'(.*?)\'\\.',
            self::ER_DUPLICATE_OPTION_KEY => 'Duplicate option key \'(.*?)\' in funtion \'(.*?)\'\\.',
            self::ER_WARN_SRS_NOT_FOUND_AXIS_ORDER => 'There\'s no spatial reference system with SRID (\\d+?)\\. The axis order is unknown\\.',
            self::ER_NO_ACCESS_TO_NATIVE_FCT => 'Access to native function \'(.*?)\' is rejected\\.',
            self::ER_RESET_SOURCE_TO_VALUE_OUT_OF_RANGE => 'The requested value \'(\\d+?)\' for the next binary log index is out of range\\. Please use a value between \'1\' and \'(\\d+?)\'\\.',
            self::ER_UNRESOLVED_TABLE_LOCK => 'Unresolved table name (.*?) in locking clause\\.',
            self::ER_DUPLICATE_TABLE_LOCK => 'Table (.*?) appears in multiple locking clauses\\.',
            self::ER_CTE_RECURSIVE_REQUIRES_UNION => 'Recursive Common Table Expression \'(.*?)\' should contain a UNION',
            self::ER_CTE_RECURSIVE_REQUIRES_NONRECURSIVE_FIRST => 'Recursive Common Table Expression \'(.*?)\' should have one or more non\\-recursive query blocks followed by one or more recursive ones',
            self::ER_CTE_RECURSIVE_FORBIDS_AGGREGATION => 'Recursive Common Table Expression \'(.*?)\' can contain neither aggregation nor window functions in recursive query block',
            self::ER_CTE_RECURSIVE_FORBIDDEN_JOIN_ORDER => 'In recursive query block of Recursive Common Table Expression \'(.*?)\', the recursive table must neither be in the right argument of a LEFT JOIN, nor be forced to be non\\-first with join order hints',
            self::ER_CTE_RECURSIVE_REQUIRES_SINGLE_REFERENCE => 'In recursive query block of Recursive Common Table Expression \'(.*?)\', the recursive table must be referenced only once, and not in any subquery',
            self::ER_SWITCH_TMP_ENGINE => '\'(.*?)\' requires @@internal_tmp_disk_storage_engine\\=InnoDB',
            self::ER_WINDOW_NO_SUCH_WINDOW => 'Window name \'(.*?)\' is not defined\\.',
            self::ER_WINDOW_NO_INHERIT_FRAME => 'Window \'(.*?)\' has a frame definition, so cannot be referenced by another window\\.',
            self::ER_WINDOW_NO_REDEFINE_ORDER_BY => 'Window \'(.*?)\' cannot inherit \'(.*?)\' since both contain an ORDER BY clause\\.',
            self::ER_WINDOW_FRAME_START_ILLEGAL => 'Window \'(.*?)\'\\: frame start cannot be UNBOUNDED FOLLOWING\\.',
            self::ER_WINDOW_FRAME_END_ILLEGAL => 'Window \'(.*?)\'\\: frame end cannot be UNBOUNDED PRECEDING\\.',
            self::ER_WINDOW_FRAME_ILLEGAL => 'Window \'(.*?)\'\\: frame start or end is negative, NULL or of non\\-integral type',
            self::ER_WINDOW_RANGE_FRAME_ORDER_TYPE => 'Window \'(.*?)\' with RANGE N PRECEDING/FOLLOWING frame requires exactly one ORDER BY expression, of numeric or temporal type',
            self::ER_WINDOW_RANGE_FRAME_TEMPORAL_TYPE => 'Window \'(.*?)\' with RANGE frame has ORDER BY expression of datetime type\\. Only INTERVAL bound value allowed\\.',
            self::ER_WINDOW_RANGE_FRAME_NUMERIC_TYPE => 'Window \'(.*?)\' with RANGE frame has ORDER BY expression of numeric type, INTERVAL bound value not allowed\\.',
            self::ER_WINDOW_RANGE_BOUND_NOT_CONSTANT => 'Window \'(.*?)\' has a non\\-constant frame bound\\.',
            self::ER_WINDOW_DUPLICATE_NAME => 'Window \'(.*?)\' is defined twice\\.',
            self::ER_WINDOW_ILLEGAL_ORDER_BY => 'Window \'(.*?)\'\\: ORDER BY or PARTITION BY uses legacy position indication which is not supported, use expression\\.',
            self::ER_WINDOW_INVALID_WINDOW_FUNC_USE => 'You cannot use the window function \'(.*?)\' in this context\\.\'',
            self::ER_WINDOW_INVALID_WINDOW_FUNC_ALIAS_USE => 'You cannot use the alias \'(.*?)\' of an expression containing a window function in this context\\.\'',
            self::ER_WINDOW_NESTED_WINDOW_FUNC_USE_IN_WINDOW_SPEC => 'You cannot nest a window function in the specification of window \'(.*?)\'\\.',
            self::ER_WINDOW_ROWS_INTERVAL_USE => 'Window \'(.*?)\'\\: INTERVAL can only be used with RANGE frames\\.',
            self::ER_WINDOW_FUNCTION_IGNORES_FRAME => 'Window function \'(.*?)\' ignores the frame clause of window \'(.*?)\' and aggregates over the whole partition',
            self::ER_INVALID_NO_OF_ARGS => 'Too many arguments for function (.*?)\\: (\\d+?); maximum allowed is (.*?)\\.',
            self::ER_FIELD_IN_GROUPING_NOT_GROUP_BY => 'Argument \\#(\\d+?) of GROUPING function is not in GROUP BY',
            self::ER_TOO_LONG_TABLESPACE_COMMENT => 'Comment for tablespace \'(.*?)\' is too long \\(max \\= (\\d+?)\\)',
            self::ER_ENGINE_CANT_DROP_TABLE => 'Storage engine can\'t drop table \'(.*?)\'',
            self::ER_ENGINE_CANT_DROP_MISSING_TABLE => 'Storage engine can\'t drop table \'(.*?)\' because it is missing\\. Use DROP TABLE IF EXISTS to remove it from data\\-dictionary\\.',
            self::ER_TABLESPACE_DUP_FILENAME => 'Duplicate file name for tablespace \'(.*?)\'',
            self::ER_DB_DROP_RMDIR2 => 'Problem while dropping database\\. Can\'t remove database directory \\((.*?)\\)\\. Please remove it manually\\.',
            self::ER_IMP_NO_FILES_MATCHED => 'No SDI files matched the pattern \'(.*?)\'',
            self::ER_IMP_SCHEMA_DOES_NOT_EXIST => 'Schema \'(.*?)\', referenced in SDI, does not exist\\.',
            self::ER_IMP_TABLE_ALREADY_EXISTS => 'Table \'(.*?)\\.(.*?)\', referenced in SDI, already exists\\.',
            self::ER_IMP_INCOMPATIBLE_MYSQLD_VERSION => 'Imported mysqld_version \\((\\d+?)\\) is not compatible with current \\((\\d+?)\\)',
            self::ER_IMP_INCOMPATIBLE_DD_VERSION => 'Imported dd version \\((\\d+?)\\) is not compatible with current \\((\\d+?)\\)',
            self::ER_IMP_INCOMPATIBLE_SDI_VERSION => 'Imported sdi version \\((\\d+?)\\) is not compatible with current \\((\\d+?)\\)',
            self::ER_WARN_INVALID_HINT => 'Invalid number of arguments for hint (.*?)',
            self::ER_VAR_DOES_NOT_EXIST => 'Variable (.*?) does not exist in persisted config file',
            self::ER_LONGITUDE_OUT_OF_RANGE => 'Longitude (\\d+?(?:.\\d+)?) is out of range in function (.*?)\\. It must be within \\((\\d+?(?:.\\d+)?), (\\d+?(?:.\\d+)?)\\]\\.',
            self::ER_LATITUDE_OUT_OF_RANGE => 'Latitude (\\d+?(?:.\\d+)?) is out of range in function (.*?)\\. It must be within \\[(\\d+?(?:.\\d+)?), (\\d+?(?:.\\d+)?)\\]\\.',
            self::ER_NOT_IMPLEMENTED_FOR_GEOGRAPHIC_SRS => '(.*?)\\((.*?)\\) has not been implemented for geographic spatial reference systems\\.',
            self::ER_ILLEGAL_PRIVILEGE_LEVEL => 'Illegal privilege level specified for (.*?)',
            self::ER_NO_SYSTEM_VIEW_ACCESS => 'Access to system view INFORMATION_SCHEMA\\.\'(.*?)\' is rejected\\.',
            self::ER_COMPONENT_FILTER_FLABBERGASTED => 'The log\\-filter component "(.*?)" got confused at "(.*?)" \\.\\.\\.',
            self::ER_UNABLE_TO_STORE_COLUMN_STATISTICS => 'Unable to store column statistics for column \'(.*?)\' in table \'(.*?)\'\\.\'(.*?)\'',
            self::ER_UNABLE_TO_UPDATE_COLUMN_STATISTICS => 'Unable to update column statistics for column \'(.*?)\' in table \'(.*?)\'\\.\'(.*?)\'',
            self::ER_UNABLE_TO_DROP_COLUMN_STATISTICS => 'Unable to remove column statistics for column \'(.*?)\' in table \'(.*?)\'\\.\'(.*?)\'',
            self::ER_UNABLE_TO_BUILD_HISTOGRAM => 'Unable to build histogram statistics for column \'(.*?)\' in table \'(.*?)\'\\.\'(.*?)\'',
            self::ER_MANDATORY_ROLE => 'The role (.*?) is a mandatory role and can\'t be revoked or dropped\\. The restriction can be lifted by excluding the role identifier from the global variable mandatory_roles\\.',
            self::ER_MISSING_TABLESPACE_FILE => 'Tablespace \'(.*?)\' does not have a file named \'(.*?)\'',
            self::ER_PERSIST_ONLY_ACCESS_DENIED_ERROR => 'Access denied; you need (.*?) privileges for this operation',
            self::ER_CMD_NEED_SUPER => 'You need the SUPER privilege for command \'(.*?)\'',
            self::ER_PATH_IN_DATADIR => 'Path is within the current data directory \'(.*?)\'',
            self::ER_CLONE_TOO_MANY_CONCURRENT_CLONES => 'Too many concurrent clone operations\\. Maximum allowed \\- (\\d+?)\\.',
            self::ER_APPLIER_LOG_EVENT_VALIDATION_ERROR => 'The table in transaction (.*?) does not comply with the requirements by an external plugin\\.',
            self::ER_CTE_MAX_RECURSION_DEPTH => 'Recursive query aborted after (\\d+?) iterations\\. Try increasing @@cte_max_recursion_depth to a larger value\\.',
            self::ER_NOT_HINT_UPDATABLE_VARIABLE => 'Variable (.*?) cannot be set using SET_VAR hint\\.',
            self::ER_CREDENTIALS_CONTRADICT_TO_HISTORY => 'Cannot use these credentials for \'(.*?)@(.*?)\' because they contradict the password history policy',
            self::ER_WARNING_PASSWORD_HISTORY_CLAUSES_VOID => 'Non\\-zero password history clauses ignored for user \'(.*?)\'@\'(.*?)\' as its authentication plugin (.*?) does not support password history',
            self::ER_CLIENT_DOES_NOT_SUPPORT => 'The client doesn\'t support (.*?)',
            self::ER_I_S_SKIPPED_TABLESPACE => 'Tablespace \'(.*?)\' was skipped since its definition is being modified by concurrent DDL statement',
            self::ER_TABLESPACE_ENGINE_MISMATCH => 'Engine \'(.*?)\' does not match stored engine \'(.*?)\' for tablespace \'(.*?)\'',
            self::ER_WRONG_SRID_FOR_COLUMN => 'The SRID of the geometry does not match the SRID of the column \'(.*?)\'\\. The SRID of the geometry is (\\d+?), but the SRID of the column is (\\d+?)\\. Consider changing the SRID of the geometry or the SRID property of the column\\.',
            self::ER_CANNOT_ALTER_SRID_DUE_TO_INDEX => 'The SRID specification on the column \'(.*?)\' cannot be changed because there is a spatial index on the column\\. Please remove the spatial index before altering the SRID specification\\.',
            self::ER_WARN_BINLOG_PARTIAL_UPDATES_DISABLED => 'When (.*?), the option binlog_row_value_options\\=(.*?) will be ignored and updates will be written in full format to binary log\\.',
            self::ER_WARN_BINLOG_PARTIAL_UPDATES_SUGGESTS_PARTIAL_IMAGES => 'When (.*?), the option binlog_row_value_options\\=(.*?) will be used only for the after\\-image\\. Full values will be written in the before\\-image, so the saving in disk space due to binlog_row_value_options is limited to less than 50%%\\.',
            self::ER_COULD_NOT_APPLY_JSON_DIFF => 'Could not apply JSON diff in table (.*?), column (.*?)\\.',
            self::ER_CORRUPTED_JSON_DIFF => 'Corrupted JSON diff for table (.*?), column (.*?)\\.',
            self::ER_RESOURCE_GROUP_EXISTS => 'Resource Group \'(.*?)\' exists',
            self::ER_RESOURCE_GROUP_NOT_EXISTS => 'Resource Group \'(.*?)\' does not exist\\.',
            self::ER_INVALID_VCPU_ID => 'Invalid cpu id (\\d+?)',
            self::ER_INVALID_VCPU_RANGE => 'Invalid VCPU range (\\d+?)\\-(\\d+?)',
            self::ER_INVALID_THREAD_PRIORITY => 'Invalid thread priority value (\\d+?) for (.*?) resource group (.*?)\\. Allowed range is \\[(\\d+?), (\\d+?)\\]\\.',
            self::ER_DISALLOWED_OPERATION => '(.*?) operation is disallowed on (.*?)',
            self::ER_RESOURCE_GROUP_BUSY => 'Resource group (.*?) is busy\\.',
            self::ER_RESOURCE_GROUP_DISABLED => 'Resource group (.*?) is disabled\\.',
            self::ER_FEATURE_UNSUPPORTED => 'Feature (.*?) is unsupported \\((.*?)\\)\\.',
            self::ER_ATTRIBUTE_IGNORED => 'Attribute (.*?) is ignored \\((.*?)\\)\\.',
            self::ER_INVALID_THREAD_ID => 'Invalid thread id \\((\\d+?)\\)\\.',
            self::ER_RESOURCE_GROUP_BIND_FAILED => 'Unable to bind resource group (.*?) with thread id \\((\\d+?)\\)\\.\\((.*?)\\)\\.',
            self::ER_GROUP_REPLICATION_COMMAND_FAILURE => 'The (.*?) command encountered a failure\\. (.*?)',
            self::ER_SDI_OPERATION_FAILED => 'Failed to (.*?) SDI \'(.*?)\\.(.*?)\' in tablespace \'(.*?)\'\\.',
            self::ER_MISSING_JSON_TABLE_VALUE => 'Missing value for JSON_TABLE column \'(.*?)\'',
            self::ER_WRONG_JSON_TABLE_VALUE => 'Can\'t store an array or an object in the scalar JSON_TABLE column \'(.*?)\'',
            self::ER_TF_FORBIDDEN_JOIN_TYPE => 'INNER or LEFT JOIN must be used for LATERAL references made by \'(.*?)\'',
            self::ER_JT_VALUE_OUT_OF_RANGE => 'Value is out of range for JSON_TABLE\'s column \'(.*?)\'',
            self::ER_JT_MAX_NESTED_PATH => 'More than supported (\\d+?) NESTED PATHs were found in JSON_TABLE \'(.*?)\'',
            self::ER_PASSWORD_EXPIRATION_NOT_SUPPORTED_BY_AUTH_METHOD => 'The selected authentication method (.*?) does not support password expiration',
            self::ER_INVALID_GEOJSON_CRS_NOT_TOP_LEVEL => 'Invalid GeoJSON data provided to function (.*?)\\: Member \'crs\' must be specified in the top level object\\.',
            self::ER_BAD_NULL_ERROR_NOT_IGNORED => 'Column \'(.*?)\' cannot be null',
            self::WARN_USELESS_SPATIAL_INDEX => 'The spatial index on column \'(.*?)\' will not be used by the query optimizer since the column does not have an SRID attribute\\. Consider adding an SRID attribute to the column\\.',
            self::ER_DISK_FULL_NOWAIT => 'Create table/tablespace \'(.*?)\' failed, as disk is full',
            self::ER_PARSE_ERROR_IN_DIGEST_FN => 'Could not parse argument to digest function\\: "(.*?)"\\.',
            self::ER_SCHEMA_DIR_EXISTS => 'Schema directory \'(.*?)\' already exists\\. This must be resolved manually \\(e\\.g\\. by moving the schema directory to another location\\)\\.',
            self::ER_SCHEMA_DIR_MISSING => 'Schema directory \'(.*?)\' does not exist',
            self::ER_SCHEMA_DIR_CREATE_FAILED => 'Failed to create schema directory \'(.*?)\' \\(errno\\: (\\d+?) \\- (.*?)\\)',
            self::ER_SCHEMA_DIR_UNKNOWN => 'Schema \'(.*?)\' does not exist, but schema directory \'(.*?)\' was found\\. This must be resolved manually \\(e\\.g\\. by moving the schema directory to another location\\)\\.',
            self::ER_ONLY_IMPLEMENTED_FOR_SRID_0_AND_4326 => 'Function (.*?) is only defined for SRID 0 and SRID 4326\\.',
            self::ER_REGEXP_RULE_SYNTAX => 'Syntax error in regular expression on line (\\d+?), character (\\d+?)\\.',
            self::ER_CANT_SET_ERROR_LOG_SERVICE => 'Value for (.*?) got confusing at or around "(.*?)"\\. Syntax may be wrong, component may not be INSTALLed, or a component that does not support instances may be listed more than once\\.',
            self::ER_EMPTY_PIPELINE_FOR_ERROR_LOG_SERVICE => 'Setting an empty (.*?) pipeline disables error logging\\!',
            self::ER_COMPONENT_FILTER_DIAGNOSTICS => 'filter (.*?)\\: (.*?)',
            self::ER_NOT_IMPLEMENTED_FOR_CARTESIAN_SRS => '(.*?)\\((.*?)\\) has not been implemented for Cartesian spatial reference systems\\.',
            self::ER_NOT_IMPLEMENTED_FOR_PROJECTED_SRS => '(.*?)\\((.*?)\\) has not been implemented for projected spatial reference systems\\.',
            self::ER_NONPOSITIVE_RADIUS => 'Invalid radius provided to function (.*?)\\: Radius must be greater than zero\\.',
            self::ER_RESTART_SERVER_FAILED => 'Restart server failed \\((.*?)\\)\\.',
            self::ER_SRS_MISSING_MANDATORY_ATTRIBUTE => 'Missing mandatory attribute (.*?)\\.',
            self::ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS => 'Multiple definitions of attribute (.*?)\\.',
            self::ER_SRS_ID_ALREADY_EXISTS => 'There is already a spatial reference system with SRID (\\d+?)\\.',
            self::ER_WARN_SRS_ID_ALREADY_EXISTS => 'There is already a spatial reference system with SRID (\\d+?)\\.',
            self::ER_WARN_RESERVED_SRID_RANGE => 'The SRID range \\[(\\d+?), (\\d+?)\\] has been reserved for system use\\. SRSs in this range may be added, modified or removed without warning during upgrade\\.',
            self::ER_CANT_MODIFY_SRS_USED_BY_COLUMN => 'Can\'t modify SRID (\\d+?)\\. There is at least one column depending on it\\.',
            self::ER_SRS_INVALID_CHARACTER_IN_ATTRIBUTE => 'Invalid character in attribute (.*?)\\.',
            self::ER_SRS_ATTRIBUTE_STRING_TOO_LONG => 'Attribute (.*?) is too long\\. The maximum length is (\\d+?) characters\\.',
            self::ER_INVALID_DEFAULT_UTF8MB4_COLLATION => 'Invalid default collation (.*?)\\: utf8mb4_0900_ai_ci or utf8mb4_general_ci expected',
            self::ER_UNABLE_TO_COLLECT_LOG_STATUS => 'Unable to collect information for column \'(.*?)\'\\: (.*?)\\.',
            self::ER_RESERVED_TABLESPACE_NAME => 'The table \'(.*?)\' may not be created in the reserved tablespace \'(.*?)\'\\.',
            self::ER_UNABLE_TO_SET_OPTION => 'This option cannot be set (.*?)\\.',
            self::ER_SRS_NOT_GEOGRAPHIC => 'Function (.*?) is only defined for geographic spatial reference systems, but one of its arguments is in SRID (\\d+?), which is not geographic\\.',
            self::ER_POLYGON_TOO_LARGE => 'Function (.*?) encountered a polygon that was too large\\. Polygons must cover less than half the planet\\.',
            self::ER_INDEX_TYPE_NOT_SUPPORTED_FOR_SPATIAL_INDEX => 'The index type (.*?) is not supported for spatial indexes\\.',
            self::ER_FK_CANNOT_DROP_PARENT => 'Cannot drop table \'(.*?)\' referenced by a foreign key constraint \'(.*?)\' on table \'(.*?)\'\\.',
            self::ER_GEOMETRY_PARAM_LONGITUDE_OUT_OF_RANGE => 'A parameter of function (.*?) contains a geometry with longitude (\\d+?(?:.\\d+)?), which is out of range\\. It must be within \\((\\d+?(?:.\\d+)?), (\\d+?(?:.\\d+)?)\\]\\.',
            self::ER_GEOMETRY_PARAM_LATITUDE_OUT_OF_RANGE => 'A parameter of function (.*?) contains a geometry with latitude (\\d+?(?:.\\d+)?), which is out of range\\. It must be within \\[(\\d+?(?:.\\d+)?), (\\d+?(?:.\\d+)?)\\]\\.',
            self::ER_FK_CANNOT_USE_VIRTUAL_COLUMN => 'Foreign key \'(.*?)\' uses virtual column \'(.*?)\' which is not supported\\.',
            self::ER_FK_NO_COLUMN_PARENT => 'Failed to add the foreign key constraint\\. Missing column \'(.*?)\' for constraint \'(.*?)\' in the referenced table \'(.*?)\'',
            self::ER_CANT_SET_ERROR_SUPPRESSION_LIST => '(.*?)\\: Could not add suppression rule for code "(.*?)"\\. Rule\\-set may be full, or code may not correspond to an error\\-log message\\.',
            self::ER_SRS_GEOGCS_INVALID_AXES => 'The spatial reference system definition for SRID (\\d+?) specifies invalid geographic axes \'(.*?)\' and \'(.*?)\'\\. One axis must be NORTH or SOUTH and the other must be EAST or WEST\\.',
            self::ER_TRANSFORM_SOURCE_SRS_NOT_SUPPORTED => 'Transformation from SRID (\\d+?) is not supported\\.',
            self::ER_TRANSFORM_TARGET_SRS_NOT_SUPPORTED => 'Transformation to SRID (\\d+?) is not supported\\.',
            self::ER_TRANSFORM_SOURCE_SRS_MISSING_TOWGS84 => 'Transformation from SRID (\\d+?) is not supported\\. The spatial reference system has no TOWGS84 clause\\.',
            self::ER_TRANSFORM_TARGET_SRS_MISSING_TOWGS84 => 'Transformation to SRID (\\d+?) is not supported\\. The spatial reference system has no TOWGS84 clause\\.',
            self::ER_WARN_DATA_TRUNCATED_FUNCTIONAL_INDEX => 'Data truncated for functional index \'(.*?)\' at row (\\d+?)',
            self::ER_WARN_DATA_OUT_OF_RANGE_FUNCTIONAL_INDEX => 'Value is out of range for functional index \'(.*?)\' at row (\\d+?)',
            self::ER_FUNCTIONAL_INDEX_REF_AUTO_INCREMENT => 'Functional index \'(.*?)\' cannot refer to an auto\\-increment column\\.',
            self::ER_CANNOT_DROP_COLUMN_FUNCTIONAL_INDEX => 'Cannot drop column \'(.*?)\' because it is used by a functional index\\. In order to drop the column, you must remove the functional index\\.',
            self::ER_FUNCTIONAL_INDEX_FUNCTION_IS_NOT_ALLOWED => 'Expression of functional index \'(.*?)\' contains a disallowed function\\.',
            self::ER_WRONG_KEY_COLUMN_FUNCTIONAL_INDEX => 'The used storage engine cannot index the expression \'(.*?)\'\\.',
            self::ER_GENERATED_COLUMN_NAMED_FUNCTION_IS_NOT_ALLOWED => 'Expression of generated column \'(.*?)\' contains a disallowed function\\: (.*?)\\.',
            self::ER_GENERATED_COLUMN_ROW_VALUE => 'Expression of generated column \'(.*?)\' cannot refer to a row value\\.',
            self::ER_GENERATED_COLUMN_VARIABLES => 'Expression of generated column \'(.*?)\' cannot refer user or system variables\\.',
            self::ER_DEPENDENT_BY_DEFAULT_GENERATED_VALUE => 'Column \'(.*?)\' of table \'(.*?)\' has a default value expression dependency and cannot be dropped or renamed\\.',
            self::ER_DEFAULT_VAL_GENERATED_NON_PRIOR => 'Default value expression of column \'(.*?)\' cannot refer to a column defined after it if that column is a generated column or has an expression as default value\\.',
            self::ER_DEFAULT_VAL_GENERATED_REF_AUTO_INC => 'Default value expression of column \'(.*?)\' cannot refer to an auto\\-increment column\\.',
            self::ER_DEFAULT_VAL_GENERATED_FUNCTION_IS_NOT_ALLOWED => 'Default value expression of column \'(.*?)\' contains a disallowed function\\.',
            self::ER_DEFAULT_VAL_GENERATED_NAMED_FUNCTION_IS_NOT_ALLOWED => 'Default value expression of column \'(.*?)\' contains a disallowed function\\: (.*?)\\.',
            self::ER_DEFAULT_VAL_GENERATED_ROW_VALUE => 'Default value expression of column \'(.*?)\' cannot refer to a row value\\.',
            self::ER_DEFAULT_VAL_GENERATED_VARIABLES => 'Default value expression of column \'(.*?)\' cannot refer user or system variables\\.',
            self::ER_UNSUPPORTED_ACTION_ON_DEFAULT_VAL_GENERATED => '\'(.*?)\' is not supported for default value expressions\\.',
            self::ER_WARN_DEPRECATED_UTF8MB3_COLLATION => '\'(.*?)\' is a collation of the deprecated character set UTF8MB3\\. Please consider using UTF8MB4 with an appropriate collation instead\\.',
            self::ER_FK_INCOMPATIBLE_COLUMNS => 'Referencing column \'(.*?)\' and referenced column \'(.*?)\' in foreign key constraint \'(.*?)\' are incompatible\\.',
            self::ER_RPL_ENCRYPTION_HEADER_ERROR => 'Error reading a replication log encryption header\\: (.*?)\\.',
            self::ER_RPL_ENCRYPTION_KEY_EXISTS_UNEXPECTED => 'Key (.*?) exists unexpected\\.',
            self::ER_RPL_ENCRYPTION_UNABLE_TO_CHANGE_OPTION => 'Failed to change binlog_encryption value\\. (.*?)\\.',
            self::ER_FUNCTIONAL_INDEX_ROW_VALUE_IS_NOT_ALLOWED => 'Expression of functional index \'(.*?)\' cannot refer to a row value\\.',
            self::ER_RPL_ENCRYPTION_FAILED_TO_ENCRYPT => 'Failed to encrypt content to write into binlog file\\: (.*?)\\.',
            self::ER_BINLOG_MASTER_KEY_RECOVERY_OUT_OF_COMBINATION => 'Unable to recover binary log master key, the combination of new_master_key_seqno\\=(\\d+?), master_key_seqno\\=(\\d+?) and old_master_key_seqno\\=(\\d+?) are wrong\\.',
            self::ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_REENCRYPT_LOG => '(.*?)\\. A new binary log master key was generated and will be used to encrypt new binary and relay log files\\. There may still exist binary or relay log files using the previous binary log master key\\.',
            self::ER_NON_BOOLEAN_EXPR_FOR_CHECK_CONSTRAINT => 'An expression of non\\-boolean type specified to a check constraint \'(.*?)\'\\.',
            self::ER_COLUMN_CHECK_CONSTRAINT_REFERENCES_OTHER_COLUMN => 'Column check constraint \'(.*?)\' references other column\\.',
            self::ER_CHECK_CONSTRAINT_NAMED_FUNCTION_IS_NOT_ALLOWED => 'An expression of a check constraint \'(.*?)\' contains disallowed function\\: (.*?)\\.',
            self::ER_CHECK_CONSTRAINT_FUNCTION_IS_NOT_ALLOWED => 'An expression of a check constraint \'(.*?)\' contains disallowed function\\.',
            self::ER_CHECK_CONSTRAINT_VARIABLES => 'An expression of a check constraint \'(.*?)\' cannot refer to a user or system variable\\.',
            self::ER_CHECK_CONSTRAINT_ROW_VALUE => 'Check constraint \'(.*?)\' cannot refer to a row value\\.',
            self::ER_CHECK_CONSTRAINT_REFERS_AUTO_INCREMENT_COLUMN => 'Check constraint \'(.*?)\' cannot refer to an auto\\-increment column\\.',
            self::ER_CHECK_CONSTRAINT_VIOLATED => 'Check constraint \'(.*?)\' is violated\\.',
            self::ER_CHECK_CONSTRAINT_REFERS_UNKNOWN_COLUMN => 'Check constraint \'(.*?)\' refers to non\\-existing column \'(.*?)\'\\.',
            self::ER_CHECK_CONSTRAINT_NOT_FOUND => 'Check constraint \'(.*?)\' is not found in the table\\.',
            self::ER_CHECK_CONSTRAINT_DUP_NAME => 'Duplicate check constraint name \'(.*?)\'\\.',
            self::ER_CHECK_CONSTRAINT_CLAUSE_USING_FK_REFER_ACTION_COLUMN => 'Column \'(.*?)\' cannot be used in a check constraint \'(.*?)\'\\: needed in a foreign key constraint \'(.*?)\' referential action\\.',
            self::ER_INVALID_ENCRYPTION_REQUEST => 'Request to create (.*?) table while using an (.*?) tablespace\\.',
            self::ER_TABLESPACE_TYPE_UNKNOWN => 'Cannot determine the type of the tablespace named \'(.*?)\'\\.',
            self::ER_CANNOT_USE_ENCRYPTION_CLAUSE => 'ENCRYPTION clause is not valid for (.*?) tablespace\\.',
            self::ER_INVALID_MULTIPLE_CLAUSES => 'Multiple (.*?) clauses',
            self::ER_DEPENDENT_BY_FUNCTIONAL_INDEX => 'Column \'(.*?)\' has a functional index dependency and cannot be dropped or renamed\\.',
            self::ER_PLUGIN_NOT_EARLY => 'Plugin \'(.*?)\' is not to be used as an "early" plugin\\. Don\'t add it to \\-\\-early\\-plugin\\-load, keyring migration etc\\.',
            self::ER_INNODB_REDO_LOG_ARCHIVE_LABEL_NOT_FOUND => 'Label \'(.*?)\' not found in server variable \'innodb_redo_log_archive_dirs\'',
            self::ER_INNODB_REDO_LOG_ARCHIVE_DIR_EMPTY => 'Directory is empty after label \'(.*?)\' in server variable \'innodb_redo_log_archive_dirs\'',
            self::ER_INNODB_REDO_LOG_ARCHIVE_NO_SUCH_DIR => 'Redo log archive directory \'(.*?)\' does not exist or is not a directory',
            self::ER_INNODB_REDO_LOG_ARCHIVE_DIR_CLASH => 'Redo log archive directory \'(.*?)\' is in, under, or over server directory \'(.*?)\' \\- \'(.*?)\'',
            self::ER_INNODB_REDO_LOG_ARCHIVE_DIR_PERMISSIONS => 'Redo log archive directory \'(.*?)\' is accessible to all OS users',
            self::ER_INNODB_REDO_LOG_ARCHIVE_FILE_CREATE => 'Cannot create redo log archive file \'(.*?)\' \\(OS errno\\: (\\d+?) \\- (.*?)\\)',
            self::ER_INNODB_REDO_LOG_ARCHIVE_ACTIVE => 'Redo log archiving has been started on \'(.*?)\' \\- Call innodb_redo_log_archive_stop\\(\\) first',
            self::ER_INNODB_REDO_LOG_ARCHIVE_FAILED => 'Redo log archiving failed\\: (.*?)',
            self::ER_STD_REGEX_ERROR => 'Regex error\\: (.*?) in function (.*?)\\.',
            self::ER_INVALID_JSON_TYPE => 'Invalid JSON type in argument (\\d+?) to function (.*?); an (.*?) is required\\.',
            self::ER_CANNOT_CONVERT_STRING => 'Cannot convert string \'(.*?)\' from (.*?) to (.*?)',
            self::ER_DEPENDENT_BY_PARTITION_FUNC => 'Column \'(.*?)\' has a partitioning function dependency and cannot be dropped or renamed\\.',
            self::ER_WARN_DEPRECATED_FLOAT_AUTO_INCREMENT => 'AUTO_INCREMENT support for FLOAT/DOUBLE columns is deprecated and will be removed in a future release\\. Consider removing AUTO_INCREMENT from column \'(.*?)\'\\.',
            self::ER_CLONE_DONOR => 'Clone Donor Error\\: (.*?)\\.',
            self::ER_CLONE_PROTOCOL => 'Clone received unexpected response from Donor \\: (.*?)\\.',
            self::ER_CLONE_DONOR_VERSION => 'Clone Donor MySQL version\\: (.*?) is different from Recipient MySQL version (.*?)\\.',
            self::ER_CLONE_OS => 'Clone Donor OS\\: (.*?) is different from Recipient OS\\: (.*?)\\.',
            self::ER_CLONE_PLATFORM => 'Clone Donor platform\\: (.*?) is different from Recipient platform\\: (.*?)\\.',
            self::ER_CLONE_CHARSET => 'Clone Donor collation\\: (.*?) is unavailable in Recipient\\.',
            self::ER_CLONE_CONFIG => 'Clone Configuration (.*?)\\: Donor value\\: (.*?) is different from Recipient value\\: (.*?)\\.',
            self::ER_CLONE_SYS_CONFIG => 'Clone system configuration\\: (.*?)',
            self::ER_CLONE_PLUGIN_MATCH => 'Clone Donor plugin (.*?) is not active in Recipient\\.',
            self::ER_CLONE_DISK_SPACE => 'Clone estimated database size is (.*?)\\. Available space (.*?) is not enough\\.',
            self::ER_CLONE_DISALLOWED => 'The clone operation cannot be executed when (.*?)\\.',
            self::ER_SECOND_PASSWORD_CANNOT_BE_EMPTY => 'Empty password can not be retained as second password for user \'(.*?)\'@\'(.*?)\'\\.',
            self::ER_DB_ACCESS_DENIED => 'Access denied for AuthId `(.*?)`@`(.*?)` to database \'(.*?)\'\\.',
            self::ER_DA_AUTH_ID_WITH_SYSTEM_USER_PRIV_IN_MANDATORY_ROLES => 'Cannot set mandatory_roles\\: AuthId `(.*?)`@`(.*?)` has \'(.*?)\' privilege\\.',
            self::ER_DA_RPL_GTID_TABLE_CANNOT_OPEN => 'Gtid table is not ready to be used\\. Table \'(.*?)\\.(.*?)\' cannot be opened\\.',
            self::ER_GEOMETRY_IN_UNKNOWN_LENGTH_UNIT => 'The geometry passed to function (.*?) is in SRID 0, which doesn\'t specify a length unit\\. Can\'t convert to \'(.*?)\'\\.',
            self::ER_DA_PLUGIN_INSTALL_ERROR => 'Error installing plugin \'(.*?)\'\\: (.*?)',
            self::ER_DA_UNKNOWN_ERROR_NUMBER => 'Got unknown error\\: (\\d+?)',
            self::ER_COLUMN_CHANGE_SIZE => 'Could not change column \'(.*?)\' of table \'(.*?)\'\\. The resulting size of index \'(.*?)\' would exceed the max key length of (\\d+?) bytes\\.',
            self::ER_DA_SSL_LIBRARY_ERROR => 'Failed to set up SSL because of the following SSL library error\\: (.*?)',
            self::ER_SECONDARY_ENGINE => 'Secondary engine operation failed\\. (.*?)\\.',
            self::ER_PASSWORD_CANNOT_BE_RETAINED_ON_PLUGIN_CHANGE => 'Current password can not be retained for user \'(.*?)\'@\'(.*?)\' because authentication plugin is being changed\\.',
            self::ER_CURRENT_PASSWORD_CANNOT_BE_RETAINED => 'Current password can not be retained for user \'(.*?)\'@\'(.*?)\' because new password is empty\\.',
            self::ER_CANNOT_GRANT_SYSTEM_PRIV_TO_MANDATORY_ROLE => 'AuthId `(.*?)`@`(.*?)` is set as mandatory_roles\\. Cannot grant the \'(.*?)\' privilege\\.',
            self::ER_UNSUPPORTED_SQL_MODE => 'sql_mode\\=0x(.*?) is not supported\\.',
            self::ER_PARTIAL_REVOKE_AND_DB_GRANT_BOTH_EXISTS => '\'(.*?)\' privilege for database \'(.*?)\' exists both as partial revoke and mysql\\.db simultaneously\\. It could mean that the \'mysql\' schema is corrupted\\.',
            self::ER_UNIT_NOT_FOUND => 'There\'s no unit of measure named \'(.*?)\'\\.',
            self::ER_INVALID_JSON_VALUE_FOR_FUNC_INDEX => 'Invalid JSON value for CAST for functional index \'(.*?)\'\\.',
            self::ER_JSON_VALUE_OUT_OF_RANGE_FOR_FUNC_INDEX => 'Out of range JSON value for CAST for functional index \'(.*?)\'\\.',
            self::ER_EXCEEDED_MV_KEYS_NUM => 'Exceeded max number of values per record for multi\\-valued index \'(.*?)\' by (\\d+?) value\\(s\\)\\.',
            self::ER_EXCEEDED_MV_KEYS_SPACE => 'Exceeded max total length of values per record for multi\\-valued index \'(.*?)\' by (\\d+?) bytes\\.',
            self::ER_FUNCTIONAL_INDEX_DATA_IS_TOO_LONG => 'Data too long for functional index \'(.*?)\'\\.',
            self::ER_WRONG_MVI_VALUE => 'Cannot store an array or an object in a scalar key part of the index \'(.*?)\'\\.',
            self::ER_WARN_FUNC_INDEX_NOT_APPLICABLE => 'Cannot use functional index \'(.*?)\' due to type or collation conversion\\.',
            self::ER_GRP_RPL_UDF_ERROR => 'The function \'(.*?)\' failed\\. (.*?)',
            self::ER_TABLE_NAME_CAUSES_TOO_LONG_PATH => 'Long database name and identifier for object resulted in a path length too long for table \'(.*?)\'\\. Please check the path limit for your OS\\.',
            self::ER_AUDIT_LOG_INSUFFICIENT_PRIVILEGE => 'Request ignored for \'(.*?)\'@\'(.*?)\'\\. Role needed to perform operation\\: \'(.*?)\'',
            self::ER_DA_GRP_RPL_STARTED_AUTO_REJOIN => 'Started auto\\-rejoin procedure attempt (\\d+?) of (\\d+?)',
            self::ER_CHANGE_SOURCE_WRONG_COMPRESSION_ALGORITHM_CLIENT => 'Invalid SOURCE_COMPRESSION_ALGORITHMS \'(.*?)\' for channel \'(.*?)\'\\.',
            self::ER_CHANGE_SOURCE_WRONG_COMPRESSION_LEVEL_CLIENT => 'Invalid SOURCE_ZSTD_COMPRESSION_LEVEL (\\d+?) for channel \'(.*?)\'\\.',
            self::ER_WRONG_COMPRESSION_ALGORITHM_CLIENT => 'Invalid compression algorithm \'(.*?)\'\\.',
            self::ER_WRONG_COMPRESSION_LEVEL_CLIENT => 'Invalid zstd compression level for algorithm \'(.*?)\'\\.',
            self::ER_CHANGE_SOURCE_WRONG_COMPRESSION_ALGORITHM_LIST_CLIENT => 'Specified compression algorithm list \'(.*?)\' exceeds total count of 3 for channel \'(.*?)\'\\.',
            self::ER_CLIENT_PRIVILEGE_CHECKS_USER_CANNOT_BE_ANONYMOUS => 'PRIVILEGE_CHECKS_USER for replication channel \'(.*?)\' was set to ``@`(.*?)`, but anonymous users are disallowed for PRIVILEGE_CHECKS_USER\\.',
            self::ER_CLIENT_PRIVILEGE_CHECKS_USER_DOES_NOT_EXIST => 'PRIVILEGE_CHECKS_USER for replication channel \'(.*?)\' was set to `(.*?)`@`(.*?)`, but this is not an existing user\\.',
            self::ER_CLIENT_PRIVILEGE_CHECKS_USER_CORRUPT => 'Invalid, corrupted PRIVILEGE_CHECKS_USER was found in the replication configuration repository for channel \'(.*?)\'\\. Use CHANGE REPLICATION SOURCE TO PRIVILEGE_CHECKS_USER to correct the configuration\\.',
            self::ER_CLIENT_PRIVILEGE_CHECKS_USER_NEEDS_RPL_APPLIER_PRIV => 'PRIVILEGE_CHECKS_USER for replication channel \'(.*?)\' was set to `(.*?)`@`(.*?)`, but this user does not have REPLICATION_APPLIER privilege\\.',
            self::ER_WARN_DA_PRIVILEGE_NOT_REGISTERED => 'Dynamic privilege \'(.*?)\' is not registered with the server\\.',
            self::ER_CLIENT_KEYRING_UDF_KEY_INVALID => 'Function \'(.*?)\' failed because key is invalid\\.',
            self::ER_CLIENT_KEYRING_UDF_KEY_TYPE_INVALID => 'Function \'(.*?)\' failed because key type is invalid\\.',
            self::ER_CLIENT_KEYRING_UDF_KEY_TOO_LONG => 'Function \'(.*?)\' failed because key length is too long\\.',
            self::ER_CLIENT_KEYRING_UDF_KEY_TYPE_TOO_LONG => 'Function \'(.*?)\' failed because key type is too long\\.',
            self::ER_JSON_SCHEMA_VALIDATION_ERROR_WITH_DETAILED_REPORT => '(.*?)\\.',
            self::ER_DA_UDF_INVALID_CHARSET_SPECIFIED => 'Invalid character set \'(.*?)\' was specified\\. It must be either character set name or collation name as supported by server\\.',
            self::ER_DA_UDF_INVALID_CHARSET => 'Invalid character set \'(.*?)\' was specified\\. It must be a character set name as supported by server\\.',
            self::ER_DA_UDF_INVALID_COLLATION => 'Invalid collation \'(.*?)\' was specified\\. It must be a collation name as supported by server\\.',
            self::ER_DA_UDF_INVALID_EXTENSION_ARGUMENT_TYPE => 'Invalid extension argument type \'(.*?)\' was specified\\. Refer the MySQL manual for the valid UDF extension arguments type\\.',
            self::ER_MULTIPLE_CONSTRAINTS_WITH_SAME_NAME => 'Table has multiple constraints with the name \'(.*?)\'\\. Please use constraint specific \'(.*?)\' clause\\.',
            self::ER_CONSTRAINT_NOT_FOUND => 'Constraint \'(.*?)\' does not exist\\.',
            self::ER_ALTER_CONSTRAINT_ENFORCEMENT_NOT_SUPPORTED => 'Altering constraint enforcement is not supported for the constraint \'(.*?)\'\\. Enforcement state alter is not supported for the PRIMARY, UNIQUE and FOREIGN KEY type constraints\\.',
            self::ER_REQUIRE_ROW_FORMAT_INVALID_VALUE => 'The requested value (.*?) is invalid for REQUIRE_ROW_FORMAT, must be either 0 or 1\\.',
            self::ER_FAILED_TO_DETERMINE_IF_ROLE_IS_MANDATORY => 'Failed to acquire lock on user management service, unable to determine if role `(.*?)`@`(.*?)` is mandatory',
            self::ER_IMP_INCOMPATIBLE_CFG_VERSION => 'Failed to import (.*?) because the CFG file version \\((\\d+?)\\) is not compatible with the current version \\((\\d+?)\\)',
            self::ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK => 'Access denied for user \'(.*?)\'@\'(.*?)\'\\. Account is blocked for (.*?) day\\(s\\) \\((.*?) day\\(s\\) remaining\\) due to (\\d+?) consecutive failed logins\\.',
            self::ER_CLONE_NETWORK_PACKET => 'Clone needs max_allowed_packet value to be (\\d+?) or more\\. Current value is (\\d+?)',
            self::ER_SDI_OPERATION_FAILED_MISSING_RECORD => 'Failed to (.*?) sdi for (.*?)\\.(.*?) in (.*?) due to missing record\\.',
            self::ER_DEPENDENT_BY_CHECK_CONSTRAINT => 'Check constraint \'(.*?)\' uses column \'(.*?)\', hence column cannot be dropped or renamed\\.',
            self::ER_MISSING_JSON_VALUE => 'No value was found by \'(.*?)\' on the specified path\\.',
            self::ER_MULTIPLE_JSON_VALUES => 'More than one value was found by \'(.*?)\' on the specified path\\.',
            self::ER_HOSTNAME_TOO_LONG => 'Hostname cannot be longer than (\\d+?) characters\\.',
            self::ER_DA_GRP_RPL_RECOVERY_ENDPOINT_FORMAT => 'Invalid input value for recovery socket endpoints \'(.*?)\'\\. Please, provide a valid, comma separated, list of endpoints \\(IP\\:port\\)\\.',
            self::ER_DA_GRP_RPL_RECOVERY_ENDPOINT_INVALID => 'The server is not listening on endpoint \'(.*?)\'\\. Only endpoints that the server is listening on are valid recovery endpoints\\.',
            self::ER_WRONG_VALUE_FOR_VAR_PLUS_ACTIONABLE_PART => 'Variable \'(.*?)\' cannot be set to the value of \'(.*?)\'\\. (.*?)',
            self::ER_NOT_ALLOWED_WITH_START_TRANSACTION => 'START TRANSACTION clause cannot be used (.*?)',
            self::ER_INVALID_JSON_ATTRIBUTE => 'Invalid json attribute, error\\: "(.*?)" at pos (\\d+?)\\: \'(.*?)\'',
            self::ER_ENGINE_ATTRIBUTE_NOT_SUPPORTED => 'Storage engine \'(.*?)\' does not support ENGINE_ATTRIBUTE\\.',
            self::ER_FUNCTION_DOES_NOT_SUPPORT_CHARACTER_SET => 'The function (.*?) does not support the character set \'(.*?)\'\\.',
            self::ER_IMPOSSIBLE_STRING_CONVERSION => 'Conversion from collation (.*?) into (.*?) impossible for (.*?)',
            self::ER_SCHEMA_READ_ONLY => 'Schema \'(.*?)\' is in read only mode\\.',
            self::ER_DISABLE_GTID_MODE_REQUIRES_ASYNC_RECONNECT_OFF => 'The @@GLOBAL\\.GTID_MODE \\= (.*?) cannot be executed because Asynchronous Replication Connection Failover is enabled i\\.e\\. CHANGE REPLICATION SOURCE TO SOURCE_CONNECTION_AUTO_FAILOVER \\= 1\\.',
            self::ER_INVALID_PARAMETER_USE => 'Invalid use of parameters in \'(.*?)\'',
            self::ER_CHARACTER_SET_MISMATCH => 'Character set \'(.*?)\' cannot be used in conjunction with \'(.*?)\' in call to (.*?)\\.',
            self::ER_WARN_VAR_VALUE_CHANGE_NOT_SUPPORTED => 'Changing (.*?) not supported on this platform\\. Falling back to the default\\.',
            self::ER_INVALID_TIME_ZONE_INTERVAL => 'Invalid time zone interval\\: \'(.*?)\'',
            self::ER_INVALID_CAST => 'Cannot cast value to (.*?)\\.',
            self::ER_HYPERGRAPH_NOT_SUPPORTED_YET => 'The hypergraph optimizer does not yet support \'(.*?)\'',
            self::ER_DA_CANT_OPEN_ERROR_LOG => 'Could not open file \'(.*?)\' for error logging(.*?)(.*?)',
            self::ER_USER_REFERENCED_AS_DEFINER => 'User (.*?) is referenced as a definer account in (.*?)\\.',
            self::ER_CANNOT_USER_REFERENCED_AS_DEFINER => 'Operation (.*?) failed for (.*?) as it is referenced as a definer account in (.*?)\\.',
            self::ER_SPVAR_NONINTEGER_TYPE => 'The variable "(.*?)" has a non\\-integer based type',
            self::ER_CANT_USE_ANONYMOUS_TO_GTID_WITH_GTID_MODE_NOT_ON => 'Replication cannot start(.*?) with ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS \\= LOCAL\\|\\<UUID\\> as this server uses @@GLOBAL\\.GTID_MODE \\<\\> ON\\.',
            self::ER_ANONYMOUS_TO_GTID_UUID_SAME_AS_GROUP_NAME => 'Replication \'(.*?)\' is configured with ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS \\= \\<UUID\\> where the UUID value is equal to the group_replication_group_name',
            self::ER_INNODB_INVALID_AUTOEXTEND_SIZE_VALUE => 'AUTOEXTEND_SIZE should be a multiple of (\\d+?)M',
            self::ER_INNODB_INCOMPATIBLE_WITH_TABLESPACE => 'InnoDB\\: "(.*?)" not allowed with general tablespaces',
            self::ER_INNODB_AUTOEXTEND_SIZE_OUT_OF_RANGE => 'AUTOEXTEND_SIZE value should be between (\\d+?)M and (\\d+?)M',
            self::ER_CANNOT_USE_AUTOEXTEND_SIZE_CLAUSE => 'AUTOEXTEND_SIZE clause is not valid for (.*?) tablespace\\.',
            self::ER_ROLE_GRANTED_TO_ITSELF => 'User account (.*?) is directly or indirectly granted to the role (.*?)\\. The GRANT would create a loop',
            self::ER_INNODB_COMPRESSION_FAILURE => 'Compression failed with the following error \\: (.*?)',
            self::ER_INVALID_CAST_TO_GEOMETRY => 'Invalid cast from (.*?) to (.*?)\\.',
            self::ER_INVALID_CAST_POLYGON_RING_DIRECTION => 'Invalid cast from (.*?) to (.*?)\\. A polygon ring is in the wrong direction\\.',
            self::ER_GIS_DIFFERENT_SRIDS_AGGREGATION => 'Arguments to function (.*?) contains geometries with different SRIDs\\: (\\d+?) and (\\d+?)\\. All geometries must have the same SRID\\.',
            self::ER_SDI_GET_KEYS_INVALID_TABLESPACE => 'Tablespace \'(.*?)\' is invalid for SDI operations\\.',
            self::ER_CHANGE_RPL_SRC_WRONG_COMPRESSION_ALGORITHM_SIZE => 'Value too long setting SOURCE_COMPRESSION_ALGORITHMS option to a (\\d+?) chars long string for channel \'(.*?)\'\\.',
            self::ER_ANONYMOUS_TO_GTID_UUID_SAME_AS_VIEW_CHANGE_UUID => 'Replication \'(.*?)\' is configured with ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS \\= \\<UUID\\> where the UUID value is equal to the group_replication_view_change_uuid',
            self::ER_WARN_ADUIT_LOG_MAX_SIZE_CLOSE_TO_ROTATE_ON_SIZE => 'audit_log_rotate_on_size is not granular enough for the value of audit_log_max_size supplied\\. Should be at least (\\d+?) times smaller\\.',
            self::ER_INSTALL_PLUGIN_CONFLICT_CLIENT => 'Cannot install the (.*?) plugin when the (.*?) plugin is installed\\.',
            self::ER_DA_ERROR_LOG_COMPONENT_FLUSH_FAILED => '(\\d+?) error logging component\\(s\\) failed to flush\\. For file\\-based logs this can happen when the path or permissions of the log\\-file have changed\\. Failure to flush filed\\-based logs may affect log\\-rotation\\.',
            self::ER_WARN_SQL_AFTER_MTS_GAPS_GAP_NOT_CALCULATED => 'The until clause SQL_AFTER_MTS_GAPS is being used for channel \'(.*?)\' when GTID_MODE \\= ON and SOURCE_AUTO_POSITION\\=1 meaning the server did not compute internally what gaps may exist in the relay log transaction execution\\. To close any execution gaps use either the SQL_BEFORE_GTIDS or SQL_AFTER_GTIDS until clause\\.',
            self::ER_INVALID_ASSIGNMENT_TARGET => 'Invalid target for assignment in INSERT or UPDATE statement \'(.*?)\'\\.',
            self::ER_GRP_RPL_FAILOVER_CHANNEL_STATUS_PROPAGATION => 'Unable to propagate the SOURCE_CONNECTION_AUTO_FAILOVER value for channel \'(.*?)\' to group replication members\\. Please retry the operation\\.',
            self::ER_INVALID_MFA_PLUGIN_SPECIFIED => 'Invalid plugin "(.*?)" specified as (\\d+?) factor during "(.*?)"\\.',
            self::ER_IDENTIFIED_BY_UNSUPPORTED => 'IDENTIFIED BY clause during "(.*?)" not supported for plugin "(.*?)"\\.',
            self::ER_INVALID_PLUGIN_FOR_REGISTRATION => 'This operation is not supported for plugin "(.*?)"\\.',
            self::ER_MFA_METHOD_EXISTS => '(\\d+?) factor authentication method exists\\. Please do ALTER USER\\.\\.\\. DROP (\\d+?) factor before doing this operation OR do ALTER USER\\.\\.\\. MODIFY (\\d+?) factor\\.\\.\\. to modify existing (\\d+?) factor authentication method\\.',
            self::ER_MFA_METHOD_NOT_EXISTS => '(\\d+?) factor authentication method doesn\'t exist\\. Please do ALTER USER\\.\\.\\. ADD (\\d+?) factor\\.\\.\\. before doing this operation\\.',
            self::ER_AUTHENTICATION_POLICY_MISMATCH => '(\\d+?) factor authentication method does not match against authentication policy\\. Please refer @@authentication_policy system variable\\.',
            self::ER_PLUGIN_REGISTRATION_DONE => 'The registration for (\\d+?) factor authentication method is already completed\\. You cannot perform registration multiple times\\.',
            self::ER_INVALID_USER_FOR_REGISTRATION => 'The registration operation is not allowed for user \'(.*?)\'@\'(.*?)\'\\. The operation can only be performed in user\'s own session\\.',
            self::ER_MFA_METHODS_INVALID_ORDER => '(\\d+?) factor authentication method should be added before (\\d+?) factor authentication method\\.',
            self::ER_INVALID_MFA_OPERATIONS_FOR_PASSWORDLESS_USER => 'The operation "(.*?)" cannot be performed for user \'(.*?)\'@\'(.*?)\' configured to connect without a password\\.',
            self::ER_CHANGE_REPLICATION_SOURCE_NO_OPTIONS_FOR_GTID_ONLY => 'GTID_ONLY cannot be enabled for replication channel \'(.*?)\'\\. You need GTID_MODE \\= ON, SOURCE_AUTO_POSITION \\= 1 and REQUIRE_ROW_FORMAT \\= 1\\.',
            self::ER_CHANGE_REP_SOURCE_CANT_DISABLE_REQ_ROW_FORMAT_WITH_GTID_ONLY => 'REQUIRE_ROW_FORMAT cannot be disabled for replication channel \'(.*?)\' when GTID_ONLY\\=1\\.',
            self::ER_CHANGE_REP_SOURCE_CANT_DISABLE_AUTO_POSITION_WITH_GTID_ONLY => 'SOURCE_AUTO_POSITION cannot be disabled for replication channel \'(.*?)\' when GTID_ONLY\\=1\\.',
            self::ER_CHANGE_REP_SOURCE_CANT_DISABLE_GTID_ONLY_WITHOUT_POSITIONS => 'When disabling GTID_ONLY and SOURCE_AUTO_POSITION FOR CHANNEL \'(.*?)\' you must provide SOURCE_LOG_FILE and SOURCE_LOG_POS as source positions are invalid\\.',
            self::ER_CHANGE_REP_SOURCE_CANT_DISABLE_AUTO_POS_WITHOUT_POSITIONS => 'When disabling SOURCE_AUTO_POSITION FOR CHANNEL \'(.*?)\' you must provide SOURCE_LOG_FILE and SOURCE_LOG_POS as source positions are invalid\\.',
            self::ER_CANT_USE_GTID_ONLY_WITH_GTID_MODE_NOT_ON => 'Replication cannot start(.*?) with GTID_ONLY \\= 1 as this server uses @@GLOBAL\\.GTID_MODE \\<\\> ON\\.',
            self::ER_WARN_C_DISABLE_GTID_ONLY_WITH_SOURCE_AUTO_POS_INVALID_POS => 'The replication positions relative to the source may be out\\-of\\-date on channel \'(.*?)\', due to the use of GTID_ONLY\\=1\\. The out\\-of\\-date positions can still be used in some cases so, in order to update them, we suggest that you start the replication to receive and apply at least one transaction, which will set the positions to valid values\\.',
            self::ER_DA_SSL_FIPS_MODE_ERROR => 'SSL fips mode error\\: (.*?)',
            self::ER_VALUE_OUT_OF_RANGE => '(.*?)\\=(\\d+?) is outside the valid range \\[(\\d+?),(\\d+?)\\]\\. (\\d+?) will be used\\.',
            self::ER_WARN_DEPRECATED_COLLATION => '\'(.*?)\' is a collation of the deprecated character set (.*?)\\. Please consider using (.*?) with an appropriate collation instead\\.',
            self::ER_CONCURRENT_PROCEDURE_USAGE => 'The (.*?) was called when there was already another concurrent call to this procedure\\. No action was taken\\. Wait for other calls to (.*?) to finish before retrying\\.',
            self::ER_DA_GLOBAL_CONN_LIMIT => 'Connection closed\\. Global connection memory limit (\\d+?) bytes exceeded\\. Consumed (\\d+?) bytes\\.',
            self::ER_DA_CONN_LIMIT => 'Connection closed\\. Connection memory limit (\\d+?) bytes exceeded\\. Consumed (\\d+?) bytes\\.',
            self::ER_WARN_SF_UDF_NAME_COLLISION => 'This function \'(.*?)\' has the same name as a loadable function \\(UDF\\)\\. To invoke the stored function, it is necessary to qualify it with the schema name\\.',
            self::ER_TOO_MANY_WINDOWS => 'Too many windows in SELECT\\: (\\d+?)\\. Maximum allowed is (\\d+?)\\. Use named windows to share windows between window functions\\.',
            self::ER_COMMENT_CONTAINS_INVALID_STRING => 'Comment for (.*?) \'(.*?)\' contains an invalid (.*?) character string\\: \'(.*?)\'\\.',
            self::ER_DEFINITION_CONTAINS_INVALID_STRING => 'Definition of (.*?) \'(.*?)\\.(.*?)\' contains an invalid (.*?) character string\\: \'(.*?)\'\\.',
            self::ER_INNODB_MAX_ROW_VERSION => 'Maximum row versions reached for table (.*?)\\. No more columns can be added or dropped instantly\\. Please use COPY/INPLACE\\.',
            self::ER_WARN_DEPRECATED_DATETIME_DELIMITER => 'Delimiter \'(.*?)\' in position (\\d+?) in datetime value \'(.*?)\' at row (\\d+?) is deprecated\\. Prefer the standard \'(.)\'\\.',
            self::ER_WARN_DEPRECATED_SUPERFLUOUS_DELIMITER => 'Delimiter \'(.*?)\' in position (\\d+?) in datetime value \'(.*?)\' at row (\\d+?) is superfluous and is deprecated\\. Please remove\\.',
            self::ER_CANNOT_PERSIST_SENSITIVE_VARIABLES => 'Cannot persist SENSITIVE system variable \'(.*?)\' because keyring component support is unavailable\\.',
            self::ER_WARN_CANNOT_SECURELY_PERSIST_SENSITIVE_VARIABLES => 'SENSITIVE system variable \'(.*?)\' was persisted without encryption\\. Consider restarting server with keyring component support to persist SENSITIVE variables securely\\.',
            self::ER_WARN_TRG_ALREADY_EXISTS => 'Trigger \'(.*?)\' already exists on the table \'(.*?)\'\\.\'(.*?)\'\\.',
            self::ER_IF_NOT_EXISTS_UNSUPPORTED_TRG_EXISTS_ON_DIFFERENT_TABLE => 'Trigger \'(.*?)\'\\.\'(.*?)\' already exists on a different table\\. The \'IF NOT EXISTS\' clause is only supported for triggers associated with the same table\\.',
            self::ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION => 'This function \'(.*?)\' has the same name as a native function\\. The \'IF NOT EXISTS\' clause is not supported while creating a loadable function with the same name as a native function\\.',
            self::ER_SET_PASSWORD_AUTH_PLUGIN_ERROR => 'SET PASSWORD has no significance for user \'(.*?)\'@\'(.*?)\' as the authentication method used doesn\'t store authentication data in the MySQL server\\. Please consider using ALTER USER instead if you want to change authentication parameters\\.',
            self::ER_SRS_UNUSED_PROJ_PARAMETER_PRESENT => 'The spatial reference system definition for SRID (\\d+?) contains unused projection parameter "(.*?)"\\.',
            self::ER_COMMAND_SERVICE_BACKEND_FAILED => 'Error in command service backend interface, because of \\: "(.*?)"',
            self::ER_CLIENT_FILE_PRIVILEGE_FOR_REPLICATION_CHECKS => 'The PRIVILEGE_CHECKS_USER for channel \'(.*?)\' would need FILE privilege to execute a LOAD DATA INFILE statement replicated in statement format\\. Consider using binlog_format\\=ROW on source\\. If the replicated events are trusted, recover from the failure by temporarily granting FILE to the PRIVILEGE_CHECKS_USER\\.',
            self::ER_GROUP_REPLICATION_FORCE_MEMBERS_COMMAND_FAILURE => 'The \'SET GLOBAL group_replication_force_members\\=(.*?)\' command encountered a failure\\. (.*?)',
            self::ER_WARN_DEPRECATED_IDENT => 'Using (.*?) as unquoted identifier is deprecated, please use quotes or rename the identifier\\.',
            self::ER_TP_QUERY_THRS_PER_GRP_EXCEEDS_TXN_THR_LIMIT => 'Query threads count\\((\\d+?)\\) exceeds transaction threads limit\\((\\d+?)\\) per group\\. Please use query threads count per group smaller or equal to max transaction threads limit per group',
            self::ER_BAD_TIMESTAMP_FORMAT => 'Invalid timestamp format in (.*?) udf',
            self::ER_SHAPE_PRIDICTION_UDF => 'SHAPE_PREDICTION UDF (.*?) got error because of (.*?)\\.',
            self::ER_TABLE_NOT_EMPTY => 'Table \'(.*?)\' is not empty\\.',
            self::ER_TABLE_NO_PRIMARY_KEY => 'Table \'(.*?)\' has no primary key\\.',
            self::ER_TABLE_IN_SHARED_TABLESPACE => 'Table \'(.*?)\' is in a shared tablespace\\.',
            self::ER_INDEX_OTHER_THAN_PK => 'Table \'(.*?)\' has indexes other than primary key\\.',
            self::ER_LOAD_BULK_DATA_UNSORTED => '\\[IN PRIMARY KEY ORDER\\] specified but data not sorted\\: \'(.*?)\'',
            self::ER_BULK_EXECUTOR_ERROR => 'Bulk executor error\\: (.*?)',
            self::ER_BULK_READER_LIBCURL_ERROR => 'Bulk reader got libcurl error\\: (.*?)',
            self::ER_BULK_READER_SERVER_ERROR => 'Bulk reader got error response from server\\: (\\d+?)',
            self::ER_BULK_LOADER_COMPONENT_ERROR => 'Bulk loader component error\\: (.*?)',
            self::ER_BULK_PARSER_MISSING_ENCLOSED_BY => 'Missing ENCLOSED BY character at row (\\d+?) in file \'(.*?)\'\\. Add OPTIONALLY to the ENCLOSED BY clause to allow this input\\.',
            self::ER_BULK_PARSER_ROW_BUFFER_MAX_TOTAL_COLS_EXCEEDED => 'The number of input columns that need to be buffered for parsing exceeded predefined buffer max size for file \'(.*?)\'\\.',
            self::ER_BULK_PARSER_COPY_BUFFER_SIZE_EXCEEDED => 'The column data that needed to be copied due to escaped characters exceeded the size of the internal copy buffer for file \'(.*?)\'\\.',
            self::ER_BULK_PARSER_UNEXPECTED_END_OF_INPUT => 'Unexpected end of input found at row (\\d+?) in file \'(.*?)\'\\. Data for some columns is missing\\.',
            self::ER_BULK_PARSER_UNEXPECTED_ROW_TERMINATOR => 'Unexpected row terminator found at row (\\d+?) in file \'(.*?)\'\\. Data for some columns is missing\\.',
            self::ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_ENDING_ENCLOSED_BY => 'Unexpected characters after ending ENCLOSED BY character found at row (\\d+?) in file \'(.*?)\'\\.',
            self::ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_NULL_ESCAPE => 'Unexpected characters after NULL escape \\(\\\\\\\\N\\) found at row (\\d+?) in file \'(.*?)\'\\.',
            self::ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_COLUMN_TERMINATOR => 'Unexpected characters after column terminator found at row (\\d+?) in file \'(.*?)\'\\.',
            self::ER_BULK_PARSER_INCOMPLETE_ESCAPE_SEQUENCE => 'Unexpected end of input found at row (\\d+?) in file \'(.*?)\' resulting in incomplete escape sequence\\.',
            self::ER_LOAD_BULK_DATA_FAILED => 'LOAD BULK DATA into table \'(.*?)\' failed\\: (.*?)',
            self::ER_LOAD_BULK_DATA_WRONG_VALUE_FOR_FIELD => 'Incorrect (.*?) value\\: \'(.*?)\' for column \'(.*?)\' at row (\\d+?) in file \'(.*?)\'',
            self::ER_LOAD_BULK_DATA_WARN_NULL_TO_NOTNULL => 'NULL supplied to NOT NULL column \'(.*?)\' at row (\\d+?) in file \'(.*?)\'',
            self::ER_CANT_CHANGE_SYS_VAR_IN_READ_ONLY_MODE => 'Cannot change the \'(.*?)\' system variable in read\\-only mode\\.',
            self::ER_INNODB_INSTANT_ADD_NOT_SUPPORTED_MAX_FIELDS => 'Column can\'t be added to \'(.*?)\' with ALGORITHM\\=INSTANT anymore\\. Please try ALGORITHM\\=INPLACE/COPY\\.',
            self::ER_INSTALL_COMPONENT_SET_NULL_VALUE => 'The value supplied for (.*?) in the SET list cannot be null',
            self::ER_INSTALL_COMPONENT_SET_UNUSED_VALUE => 'The assignment of (.*?) in SET doesn\'t match any of the variables registered by the component\\(s\\)',
            self::ER_WARN_DEPRECATED_USER_DEFINED_COLLATIONS => '\'(.*?)\' is a user defined collation\\. User defined collations are deprecated and will be removed in a future release\\. Consider using a compiled collation instead\\.',
            self::ER_USER_LOCK_OVERLONG_NAME => 'User\\-level lock name \'(.*?)\' should not exceed (\\d+?) characters\\.',
            self::ER_VALIDATE_PASSWORD_INSUFFICIENT_CHANGED_CHARACTERS => 'The new password must have at least \'(\\d+?)\' characters that are different from the old password\\. It has only \'(\\d+?)\' character\\(s\\) different\\. For this comparison, uppercase letters and lowercase letters are considered to be equal\\.',
            self::ER_WARN_DEPRECATED_WITH_NOTE => '\'(.*?)\' is deprecated and will be removed in a future release\\. (.*?)',
            self::ER_LANGUAGE_COMPONENT_UNSUPPORTED_LANGUAGE => 'Language component\\: Unsupported language \'(.*?)\'',
            self::ER_EXPLAIN_INTO_FORMAT_NOT_SUPPORTED => 'EXPLAIN INTO does not support FORMAT\\=(.*?)\\.',
            self::ER_NULL_CANT_BE_PERSISTED_FOR_READONLY => 'Trying to persist a NULL into a variable \'(.*?)\' that\'s settable only on command line is not supported',
            self::ER_INNODB_IMPORT_WRONG_DROPPED_ENUM_LENGTH => 'Enum element name length (\\d+?), is invalid for column (.*?)',
            self::ER_INNODB_IMPORT_WRONG_NUMBER_OF_INDEXES_TOO_HIGH => 'Number of indexes in meta\\-data file is too high\\: (\\d+?)',
            self::ER_INNODB_IMPORT_DROP_COL_METADATA_MISMATCH => 'DD metadata for INSTANT DROP column (.*?) in target table doesn\'t match with CFG\\.',
            self::ER_INNODB_IMPORT_ENUM_NULL_TERMINATOR_MISSING => 'Enum/Set element name missing null terminator for column \'(.*?)\'',
            self::ER_SIMULATED_INJECTION_ERROR => '(.*?) (.*?) (\\d+?)\\.',
            self::ER_WARN_DEPRECATED_DYNAMIC_PRIV_IN_GRANT => 'The privilege \'(.*?)\' is deprecated\\.',
            self::ER_BULK_WRITER_LIBCURL_ERROR => 'Bulk writer got libcurl error\\: (.*?)',
            self::ER_BULK_READER_OPEN_FILE_FAILED => 'Bulk Reader\\: Failed to access file (.*?)',
            self::ER_BULK_LOAD_TABLE_HAS_INSTANT_COLS => 'Bulk Loader\\: Table \'(.*?)\' has instantly added/dropped columns\\. Please TRUNCATE TABLE and retry\\.',
            self::ER_BULK_LOAD_RESOURCE => 'Bulk Loader\\: Not enough memory available\\. Memory needed for loading (.*?) data\\: (.*?) for (\\d+?) threads, (.*?) with minimal configuration\\. Total configured memory is (.*?), Available memory is (.*?)\\.',
            self::ER_BULK_READER_ERROR => 'Bulk reader error\\: (.*?)',
            self::ER_BULK_READER_FILE_DOESNT_EXIST => 'File not found, check whether it exists\\: (.*?)',
            self::ER_BULK_READER_COULDNT_RESOLVE_HOST => 'Couldn\'t resolve host\\: (.*?)',
            self::ER_START_REPLICA_CHANNEL_INVALID_CONFIGURATION => 'Cannot start replication channel \'(.*?)\' because (.*?)\\.',
            self::ER_CANNOT_EXECUTE_IN_PRIMARY => '\'(.*?)\' is not supported',
            self::ER_TOO_MANY_GROUP_BY_MODIFIER_BRANCHES => '\'(.*?)\' is supported with maximum (\\d+?) elements in the GROUP BY list',
            self::ER_WARN_DEPRECATED_ENGINE_SYNTAX_NO_REPLACEMENT => '\'(.*?)\' for \'(.*?)\' storage engine is deprecated and will be removed in a future release\\.',
            self::ER_SUPPORTED_ONLY_WITH_HYPERGRAPH => '\'(.*?)\' can be used only if the hypergraph optimizer is enabled\\.',
            self::ER_SPECIFIC_ACCESS_DENIED => 'Access denied; you need (.*?) privilege\\(s\\) for this operation',
            self::ER_LH_COL_NOT_NULLABLE => 'Column (\\d+?) of (.*?) \\: Column contains null but it is not nullable\\.',
            self::ER_LH_WARN_COL_MISSING_NOT_NULLABLE => 'Column (\\d+?) of (.*?) \\: Column is missing, but it is not nullable and no explicit default value is provided\\.',
            self::ER_LH_COL_IS_EMPTY => 'Column (\\d+?) of (.*?) \\: Column is empty\\.',
            self::ER_LH_COL_IS_EMPTY_WARN => 'Column (\\d+?) of (.*?) \\: Column is empty, setting default value\\.',
            self::ER_LH_BAD_VALUE => 'Column (\\d+?) of (.*?) \\: Invalid (.*?) value\\.',
            self::ER_LH_DECIMAL_UNKNOWN_ERR => 'Column (\\d+?) of (.*?) \\: Unknown error while parsing decimal\\.',
            self::ER_LH_DECIMAL_OOM_ERR => 'Column (\\d+?) of (.*?) \\: Out of memory loading decimal\\.',
            self::ER_LH_WARN_DECIMAL_ROUNDING => 'Column (\\d+?) of (.*?) \\: Fraction exceeds schema, rounding value\\.',
            self::ER_LH_DECIMAL_PRECISION_EXCEEDS_SCHEMA => 'Column (\\d+?) of (.*?) \\: decimal precision exceeds schema\\.',
            self::ER_LH_EXCEEDS_MIN => 'Column (\\d+?) of (.*?) \\: (.*?) exceeds min\\.',
            self::ER_LH_EXCEEDS_MAX => 'Column (\\d+?) of (.*?) \\: (.*?) exceeds max\\.',
            self::ER_LH_WARN_EXCEEDS_MIN_TRUNCATING => 'Column (\\d+?) of (.*?) \\: (.*?) exceeds min, setting to min value possible\\.',
            self::ER_LH_WARN_EXCEEDS_MAX_TRUNCATING => 'Column (\\d+?) of (.*?) \\: (.*?) exceeds max, setting to max value possible\\.',
            self::ER_LH_REAL_IS_NAN => 'Column (\\d+?) of (.*?) \\: Real value is NaN\\.',
            self::ER_LH_OUT_OF_RANGE => 'Column (\\d+?) of (.*?) \\: (.*?) value is out of range\\.',
            self::ER_LH_DATETIME_FORMAT => 'Column (\\d+?) of (.*?) \\: Error while applying (.*?) format\\.',
            self::ER_LH_WARN_TRUNCATED => 'Column (\\d+?) of (.*?) \\: (.*?) value was truncated\\.',
            self::ER_LH_CANNOT_CONVERT_STRING => 'Column (\\d+?) of (.*?) \\: Cannot convert string (.*?)\\.',
            self::ER_LH_CSV_PARSING_ERR => '(.*?)\\:(\\d+?)\\: Parsing error found\\. (.*?)\\.',
            self::ER_LH_COLUMN_MISMATCH_ERR => '(.*?)\\: Mismatch in the number of columns\\. Expected (\\d+?), found (\\d+?)\\.',
            self::ER_LH_COLUMN_MAX_ERR => '(.*?)\\: More than (\\d+?) column\\(s\\) found\\.',
            self::ER_LH_CHARSET_UNSUPPORTED => 'Column (\\d+?) in (.*?)\\: Charset is not supported\\.',
            self::ER_LH_PARQUET_DECIMAL_CONVERSION_ERR => 'Column (\\d+?) in (.*?)\\: Decimal conversion error\\.',
            self::ER_LH_STRING_TOO_LONG => 'Column (\\d+?) in (.*?)\\: String is too long\\.',
            self::ER_LH_RESOURCE_PRINCIPAL_BUCKET_ERR => 'Resource Principal endpoint is not configured\\. Cannot access following buckets\\: (.*?)\\.',
            self::ER_LH_NO_FILES_FOUND => 'No files found corresponding to the following data locations\\: (.*?)\\.',
            self::ER_LH_EMPTY_FILE => 'File (.*?) is empty\\.',
            self::ER_LH_DUPLICATE_FILE => 'File (.*?) was not processed \\(duplicate\\)\\.',
            self::ER_LH_AVRO_SCHEMA_DEPTH_EXCEEDS_MAX => 'File (.*?)\\: Avro schema depth exceeds max allowed depth\\.',
            self::ER_LH_AVRO_HEADER_MISMATCH => 'File (.*?)\\: Header does not match other files\\.',
            self::ER_LH_AVRO_ENUM_CANNOT_CONVERT_CHARSET => 'File (.*?)\\: Enum symbol can\'t convert to column charset\\.',
            self::ER_LH_AVRO_ENUM_MISMATCH => 'File (.*?)\\: Enum symbols are not the same, or are not in the same order\\.',
            self::ER_LH_AVRO_TYPE_CANNOT_CONVERT => 'Column (\\d+?) in (.*?)\\: Avro value of physical type (.*?) logical type (.*?) cannot be converted to mysql type (.*?)\\.',
            self::ER_LH_AVRO_FILE_ENDS_UNEXPECTEDLY => 'File (.*?)\\: Ends unexpectedly\\.',
            self::ER_LH_AVRO_FILE_DATA_CORRUPT => 'File (.*?)\\: File data might be corrupt\\.',
            self::ER_LH_AVRO_INVALID_UNION => 'Column (\\d+?) in (.*?)\\: Invalid union encountered\\. Unions are only supported to represent nullable columns\\. One of the two types of the union must be null\\.',
            self::ER_LH_AVRO_INVALID_BLOCK_SIZE => 'File (.*?)\\: Invalid avro block size\\.',
            self::ER_LH_AVRO_INVALID_BLOCK_RECORD_COUNT => 'File (.*?)\\: Invalid Avro block record count\\.',
            self::ER_LH_FORMAT_HEADER_NO_MAGIC_BYTES => 'File (.*?)\\: Cannot locate (.*?) specific metadata\\. Either the file is corrupted or this is not an (.*?) file\\.',
            self::ER_LH_AVRO_HEADER_METADATA_ERR => 'File (.*?)\\: Could not process Avro header metadata\\. The metadata is corrupted or invalid\\.',
            self::ER_LH_AVRO_HEADER_NO_SCHEMA => 'File (.*?)\\: No schema in Avro header metadata\\.',
            self::ER_LH_AVRO_NO_CODEC_IN_HEADER => 'File (.*?)\\: No codec in Avro header metadata\\.',
            self::ER_LH_AVRO_INVALID_NAME_IN_SCHEMA => 'File (.*?)\\: Invalid name in Avro schema\\.',
            self::ER_LH_AVRO_DECODING_ERR => 'File (.*?)\\: Error decoding Avro (.*?)\\. (.*?)',
            self::ER_LH_PARQUET_NON_UTF8_FILE_ENC => 'Column (\\d+?) in (.*?)\\: String with non\\-utf8 file encoding\\.',
            self::ER_LH_PARQUET_ROW_GROUP_SIZE_EXCEEDS_MAX => 'File (.*?)\\: Size of row group (\\d+?) is larger than maximum allowed size \\((\\d+?)\\)\\.',
            self::ER_LH_PARQUET_CANNOT_LOCATE_OFFSET => 'File (.*?)\\: Cannot locate offset of row group (\\d+?) in metadata\\.',
            self::ER_LH_PARQUET_TYPE_CANNOT_CONVERT => 'Column (\\d+?) in parquet table cannot be converted to mysql format\\.',
            self::ER_LH_PARQUET_CANNOT_LOCATE_SCHEMA => 'Cannot locate schema in (.*?)\\.',
            self::ER_LH_WARN_INFER_SKIPPED_LINES => 'Skipped (\\d+?) line\\(s\\) due to mismatched num of cols\\.',
            self::ER_LH_WARN_INFER_SKIPPED_FILES => 'Skipped (\\d+?) file\\(s\\) due to mismatched num of cols\\.',
            self::ER_LH_INFER_FILE_HAS_NO_DATA => 'File (.*?) is skipped because it has no valid data\\. File is either empty or all rows are skipped\\.',
            self::ER_LH_WARN_INFER_USE_DEFAULT_COL_NAMES => 'Used default column names for column index\\(s\\) (.*?) as they are (.*?)\\.',
            self::ER_LH_PARQUET_CANNOT_READ_HEADER => 'File (.*?)\\: Unable to read Parquet header\\.',
            self::ER_LH_AVRO_CANNOT_PARSE_HEADER => 'File (.*?)\\: Could not parse avro header\\. Probably corrupted avro file\\.',
            self::ER_LH_PARQUET_CANT_OPEN_FILE => 'Parquet reader cannot open (.*?)\\. (.*?)',
            self::ER_LH_TOO_LARGE_VALUE_ERR => 'File (.*?)\\: (.*?)',
            self::ER_LH_TOO_LARGE_ROW_ERR => 'File (.*?)\\: (.*?)',
            self::ER_LANGUAGE_COMPONENT_CONCURRENCY_LIMIT => 'Language component\\: Concurrency limit \\((.*?)\\) has been reached\\.',
            self::ER_LANGUAGE_COMPONENT_RUNTIME => '(.*?)\\> (.*?)',
            self::ER_LANGUAGE_COMPONENT_TIMEZONE => '(.*?)\\> Time zone (.*?) is not supported\\.',
            self::ER_LANGUAGE_COMPONENT_KEYWORD => '(.*?)\\> The identifier \'(.*?)\' is a reserved word\\.',
            self::ER_LANGUAGE_COMPONENT_SET_SYSTEM_VARIABLE => 'Language component\\: System variable \'(.*?)\' cannot be configured when component is active\\.',
            self::ER_LANGUAGE_COMPONENT_UNSUPPORTED_TYPE => '(.*?)\\> (.*?)',
            self::ER_LANGUAGE_COMPONENT_CONVERSION => '(.*?)\\> (.*?)',
            self::ER_STMT_EXECUTION_NOT_ALLOWED_WITHIN_SP_OR_TRG_OR_UDF => 'Executing SQL statement using (.*?) Statement Handle Interface is not allowed within stored function, trigger or loadable function \\(UDF\\)\\.',
            self::ER_LH_JSON_PARSING => 'Column (\\d+?) of (.*?) \\: (.*?)',
            self::ER_ENGINE_CANNOT_BE_DEFAULT => 'Engine (.*?) cannot be set as default_storage_engine\\.',
            self::ER_PARTITION_PREFIX_KEY_NOT_SUPPORTED => 'Column \'(.*?)\\.(.*?)\\.(.*?)\' having prefix key part \'(.*?)\\((\\d+?)\\)\' in the PARTITION BY KEY\\(\\) clause is not supported\\.',
            self::ER_WARN_DEPRECATED_NON_STANDARD_KEY => 'Foreign key \'(.*?)\' refers to non\\-unique key or partial key\\. This is deprecated and will be removed in a future release\\.',
            self::ER_FK_NO_UNIQUE_INDEX_PARENT => 'Failed to add the foreign key constraint\\. Missing unique key for constraint \'(.*?)\' in the referenced table \'(.*?)\'',
            self::ER_ACCESS_DENIED_NO_PROXY_GRANT => 'Access denied for user \'(.*?)\'@\'(.*?)\', missing proxy privilege\\.',
            self::ER_ACCESS_DENIED_NO_PROXY => 'Access denied for user \'(.*?)\'@\'(.*?)\', proxied user doesn\'t exist\\.',
            self::ER_LH_USER_DATA_ACCESS_FAILED => 'Unable to access the following data locations\\: (.*?)',
            self::ER_BULK_READER_ZSTD_ERROR => 'ZSTD decompression failed\\: (.*?)',
            self::ER_LH_INVALID_JSON_FILE_FORMAT_SCHEMA => 'Invalid json file format schema\\: (.*?)',
            self::ER_NON_SCALAR_USED_AS_KEY => 'Non\\-scalar \\(e\\.g\\., vector\\) column \'(.*?)\' cannot be used as key\\.',
            self::ER_INCOMPATIBLE_TYPE_AGG => 'Columns aggregated with incompatible types\\: \'(.*?)\', \'(.*?)\'\\.',
            self::ER_DATA_INCOMPATIBLE_WITH_VECTOR => 'Value of type \'(.*?), size\\: (\\d+?)\' cannot be converted to \'vector\' type\\.',
            self::ER_EXCEEDS_VECTOR_MAX_DIMENSIONS => 'Data size \\((\\d+?) Bytes, (\\d+?) dimensions\\) exceeds VECTOR max \\((\\d+?) Bytes, (\\d+?) dimensions\\) for column\\: \'(.*?)\'',
            self::ER_TO_VECTOR_CONVERSION => 'Data cannot be converted to a valid vector\\: \'(.*?)\'',
            self::ER_EXTERNAL_UNSUPPORTED_INDEX_ALGORITHM => 'This storage engine ignores the (.*?) index algorithm\\.',
            default => null,
        };
        if ($regex === null || !preg_match("/^$regex$/", $message, $matches)) {
            return null;
        }
        unset($matches[0]);
        return array_values($matches);
    }
}
